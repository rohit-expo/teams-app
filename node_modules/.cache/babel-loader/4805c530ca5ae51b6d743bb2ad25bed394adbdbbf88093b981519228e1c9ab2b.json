{"ast":null,"code":"import { useARIAButtonShorthand } from '@fluentui/react-aria';\nimport { getNativeElementProps, resolveShorthand } from '@fluentui/react-utilities';\n/**\n * Given user props, defines default props for the Button, calls useButtonState, and returns processed state.\n * @param props - User provided props to the Button component.\n * @param ref - User provided ref to be passed to the Button component.\n */\n\nexport const useButton_unstable = (props, ref) => {\n  const {\n    appearance = 'secondary',\n    as = 'button',\n    disabled = false,\n    disabledFocusable = false,\n    icon,\n    iconPosition = 'before',\n    shape = 'rounded',\n    size = 'medium'\n  } = props;\n  const iconShorthand = resolveShorthand(icon);\n  return {\n    // Props passed at the top-level\n    appearance,\n    disabled,\n    disabledFocusable,\n    iconPosition,\n    shape,\n    size,\n    // State calculated from a set of props\n    iconOnly: Boolean((iconShorthand === null || iconShorthand === void 0 ? void 0 : iconShorthand.children) && !props.children),\n    // Slots definition\n    components: {\n      root: 'button',\n      icon: 'span'\n    },\n    root: getNativeElementProps(as, useARIAButtonShorthand(props, {\n      required: true,\n      defaultProps: {\n        ref: ref,\n        type: 'button'\n      }\n    })),\n    icon: iconShorthand\n  };\n};","map":{"version":3,"mappings":"AACA,SAA8BA,sBAA9B,QAA4D,sBAA5D;AACA,SAASC,qBAAT,EAAgCC,gBAAhC,QAAwD,2BAAxD;AAGA;;;;AAIG;;AACH,OAAO,MAAMC,kBAAkB,GAAG,CAChCC,KADgC,EAEhCC,GAFgC,KAGjB;EACf,MAAM;IACJC,UAAU,GAAG,WADT;IAEJC,EAAE,GAAG,QAFD;IAGJC,QAAQ,GAAG,KAHP;IAIJC,iBAAiB,GAAG,KAJhB;IAKJC,IALI;IAMJC,YAAY,GAAG,QANX;IAOJC,KAAK,GAAG,SAPJ;IAQJC,IAAI,GAAG;EARH,IASFT,KATJ;EAUA,MAAMU,aAAa,GAAGZ,gBAAgB,CAACQ,IAAD,CAAtC;EAEA,OAAO;IACL;IACAJ,UAFK;IAGLE,QAHK;IAILC,iBAJK;IAKLE,YALK;IAMLC,KANK;IAOLC,IAPK;IASL;IACAE,QAAQ,EAAEC,OAAO,CAAC,cAAa,SAAb,iBAAa,WAAb,GAAa,MAAb,gBAAa,CAAEC,QAAf,KAA2B,CAACb,KAAK,CAACa,QAAnC,CAVZ;IAYL;IACAC,UAAU,EAAE;MACVC,IAAI,EAAE,QADI;MAEVT,IAAI,EAAE;IAFI,CAbP;IAkBLS,IAAI,EAAElB,qBAAqB,CACzBM,EADyB,EAEzBP,sBAAsB,CAA2BI,KAA3B,EAAkC;MACtDgB,QAAQ,EAAE,IAD4C;MAEtDC,YAAY,EAAE;QACZhB,GAAG,EAAEA,GADO;QAEZiB,IAAI,EAAE;MAFM;IAFwC,CAAlC,CAFG,CAlBtB;IA4BLZ,IAAI,EAAEI;EA5BD,CAAP;AA8BD,CA9CM","names":["useARIAButtonShorthand","getNativeElementProps","resolveShorthand","useButton_unstable","props","ref","appearance","as","disabled","disabledFocusable","icon","iconPosition","shape","size","iconShorthand","iconOnly","Boolean","children","components","root","required","defaultProps","type"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-button\\lib\\components\\src\\packages\\react-components\\react-button\\src\\components\\Button\\useButton.ts"],"sourcesContent":["import * as React from 'react';\nimport { ARIAButtonSlotProps, useARIAButtonShorthand } from '@fluentui/react-aria';\nimport { getNativeElementProps, resolveShorthand } from '@fluentui/react-utilities';\nimport type { ButtonProps, ButtonState } from './Button.types';\n\n/**\n * Given user props, defines default props for the Button, calls useButtonState, and returns processed state.\n * @param props - User provided props to the Button component.\n * @param ref - User provided ref to be passed to the Button component.\n */\nexport const useButton_unstable = (\n  props: ButtonProps,\n  ref: React.Ref<HTMLButtonElement | HTMLAnchorElement>,\n): ButtonState => {\n  const {\n    appearance = 'secondary',\n    as = 'button',\n    disabled = false,\n    disabledFocusable = false,\n    icon,\n    iconPosition = 'before',\n    shape = 'rounded',\n    size = 'medium',\n  } = props;\n  const iconShorthand = resolveShorthand(icon);\n\n  return {\n    // Props passed at the top-level\n    appearance,\n    disabled,\n    disabledFocusable,\n    iconPosition,\n    shape,\n    size,\n\n    // State calculated from a set of props\n    iconOnly: Boolean(iconShorthand?.children && !props.children),\n\n    // Slots definition\n    components: {\n      root: 'button',\n      icon: 'span',\n    },\n\n    root: getNativeElementProps(\n      as,\n      useARIAButtonShorthand<ARIAButtonSlotProps<'a'>>(props, {\n        required: true,\n        defaultProps: {\n          ref: ref as React.Ref<HTMLButtonElement & HTMLAnchorElement>,\n          type: 'button',\n        },\n      }),\n    ),\n    icon: iconShorthand,\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}