{"ast":null,"code":"import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { Label } from '@fluentui/react-label';\nimport { DefaultSvg } from './DefaultSvg';\n/**\n * Create the state required to render Spinner.\n *\n * The returned state can be modified with hooks such as useSpinnerStyles_unstable,\n * before being passed to renderSpinner_unstable.\n *\n * @param props - props from this instance of Spinner\n * @param ref - reference to root HTMLElement of Spinner\n */\n\nexport const useSpinner_unstable = (props, ref) => {\n  // Props\n  const {\n    appearance = 'primary',\n    labelPosition = 'after',\n    size = 'medium'\n  } = props;\n  const baseId = useId('spinner');\n  const {\n    role = 'progressbar',\n    tabIndex,\n    ...rest\n  } = props;\n  const nativeRoot = getNativeElementProps('div', {\n    ref,\n    role,\n    ...rest\n  }, ['size']);\n  const labelShorthand = resolveShorthand(props.label, {\n    defaultProps: {\n      id: baseId\n    },\n    required: false\n  });\n  const spinnerShortHand = resolveShorthand(props.spinner, {\n    required: true,\n    defaultProps: {\n      children: /*#__PURE__*/React.createElement(DefaultSvg, null),\n      tabIndex\n    }\n  });\n  if (labelShorthand && nativeRoot && !nativeRoot['aria-labelledby']) {\n    nativeRoot['aria-labelledby'] = labelShorthand.id;\n  }\n  const state = {\n    appearance,\n    labelPosition,\n    size,\n    components: {\n      root: 'div',\n      spinner: 'span',\n      label: Label\n    },\n    root: nativeRoot,\n    spinner: spinnerShortHand,\n    label: labelShorthand\n  };\n  return state;\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,qBAAT,EAAgCC,gBAAhC,EAAkDC,KAAlD,QAA+D,2BAA/D;AAEA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA;;;;;;;;AAQG;;AACH,OAAO,MAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAsBC,GAAtB,KAAmE;EACpG;EACA,MAAM;IAAEC,UAAU,GAAG,SAAf;IAA0BC,aAAa,GAAG,OAA1C;IAAmDC,IAAI,GAAG;EAA1D,IAAuEJ,KAA7E;EACA,MAAMK,MAAM,GAAGT,KAAK,CAAC,SAAD,CAApB;EAEA,MAAM;IAAEU,IAAI,GAAG,aAAT;IAAwBC,QAAxB;IAAkC,GAAGC;EAArC,IAA8CR,KAApD;EACA,MAAMS,UAAU,GAAGf,qBAAqB,CAAC,KAAD,EAAQ;IAAEO,GAAF;IAAOK,IAAP;IAAa,GAAGE;EAAhB,CAAR,EAAgC,CAAC,MAAD,CAAhC,CAAxC;EAEA,MAAME,cAAc,GAAGf,gBAAgB,CAACK,KAAK,CAACW,KAAP,EAAc;IACnDC,YAAY,EAAE;MACZC,EAAE,EAAER;IADQ,CADqC;IAInDS,QAAQ,EAAE;EAJyC,CAAd,CAAvC;EAOA,MAAMC,gBAAgB,GAAGpB,gBAAgB,CAACK,KAAK,CAACgB,OAAP,EAAgB;IACvDF,QAAQ,EAAE,IAD6C;IAEvDF,YAAY,EAAE;MACZK,QAAQ,eAAExB,oBAACK,UAAD,EAAW,IAAX,CADE;MAEZS;IAFY;EAFyC,CAAhB,CAAzC;EAQA,IAAIG,cAAc,IAAID,UAAlB,IAAgC,CAACA,UAAU,CAAC,iBAAD,CAA/C,EAAoE;IAClEA,UAAU,CAAC,iBAAD,CAAV,GAAgCC,cAAc,CAACG,EAA/C;EACD;EAED,MAAMK,KAAK,GAAiB;IAC1BhB,UAD0B;IAE1BC,aAF0B;IAG1BC,IAH0B;IAI1Be,UAAU,EAAE;MACVC,IAAI,EAAE,KADI;MAEVJ,OAAO,EAAE,MAFC;MAGVL,KAAK,EAAEd;IAHG,CAJc;IAS1BuB,IAAI,EAAEX,UAToB;IAU1BO,OAAO,EAAED,gBAViB;IAW1BJ,KAAK,EAAED;EAXmB,CAA5B;EAaA,OAAOQ,KAAP;AACD,CAzCM","names":["React","getNativeElementProps","resolveShorthand","useId","Label","DefaultSvg","useSpinner_unstable","props","ref","appearance","labelPosition","size","baseId","role","tabIndex","rest","nativeRoot","labelShorthand","label","defaultProps","id","required","spinnerShortHand","spinner","children","state","components","root"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-spinner\\lib\\components\\src\\packages\\react-components\\react-spinner\\src\\components\\Spinner\\useSpinner.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport type { SpinnerProps, SpinnerState } from './Spinner.types';\nimport { Label } from '@fluentui/react-label';\nimport { DefaultSvg } from './DefaultSvg';\n\n/**\n * Create the state required to render Spinner.\n *\n * The returned state can be modified with hooks such as useSpinnerStyles_unstable,\n * before being passed to renderSpinner_unstable.\n *\n * @param props - props from this instance of Spinner\n * @param ref - reference to root HTMLElement of Spinner\n */\nexport const useSpinner_unstable = (props: SpinnerProps, ref: React.Ref<HTMLElement>): SpinnerState => {\n  // Props\n  const { appearance = 'primary', labelPosition = 'after', size = 'medium' } = props;\n  const baseId = useId('spinner');\n\n  const { role = 'progressbar', tabIndex, ...rest } = props;\n  const nativeRoot = getNativeElementProps('div', { ref, role, ...rest }, ['size']);\n\n  const labelShorthand = resolveShorthand(props.label, {\n    defaultProps: {\n      id: baseId,\n    },\n    required: false,\n  });\n\n  const spinnerShortHand = resolveShorthand(props.spinner, {\n    required: true,\n    defaultProps: {\n      children: <DefaultSvg />,\n      tabIndex,\n    },\n  });\n\n  if (labelShorthand && nativeRoot && !nativeRoot['aria-labelledby']) {\n    nativeRoot['aria-labelledby'] = labelShorthand.id;\n  }\n\n  const state: SpinnerState = {\n    appearance,\n    labelPosition,\n    size,\n    components: {\n      root: 'div',\n      spinner: 'span',\n      label: Label,\n    },\n    root: nativeRoot,\n    spinner: spinnerShortHand,\n    label: labelShorthand,\n  };\n  return state;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}