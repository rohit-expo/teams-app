{"ast":null,"code":"import { defaultOptions, FOCUS_VISIBLE_ATTR, FOCUS_WITHIN_ATTR } from './constants';\n/**\n * Creates a style for @see makeStyles that includes the necessary selectors for focus.\n * Should be used only when @see createFocusOutlineStyle does not fit requirements\n *\n * @param style - styling applied on focus, defaults to @see getDefaultFocusOutlineStyles\n * @param options - Configure the style of the focus outline\n */\n\nexport function createCustomFocusIndicatorStyle(style) {\n  let {\n    selector = defaultOptions.selector,\n    enableOutline = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  return {\n    ':focus': {\n      outlineStyle: enableOutline ? undefined : 'none'\n    },\n    ':focus-visible': {\n      outlineStyle: enableOutline ? undefined : 'none'\n    },\n    ...(selector === 'focus' && {\n      [`&[${FOCUS_VISIBLE_ATTR}]`]: style\n    }),\n    ...(selector === 'focus-within' && {\n      [`&[${FOCUS_WITHIN_ATTR}]:${selector}`]: style\n    })\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,cAAT,EAAyBC,kBAAzB,EAA6CC,iBAA7C,QAAsE,aAAtE;AAiBA;;;;;;AAMG;;AACH,OAAM,SAAUC,+BAAV,CACJC,KADI,EAKsD;EAAA,IAH1D;IACEC,QAAQ,GAAGL,cAAc,CAACK,QAD5B;IAEEC,aAAa,GAAG;EAFlB,wEAG4CN,cALxC;EAOJ,OAAO;IACL,UAAU;MACRO,YAAY,EAAED,aAAa,GAAGE,SAAH,GAAe;IADlC,CADL;IAIL,kBAAkB;MAChBD,YAAY,EAAED,aAAa,GAAGE,SAAH,GAAe;IAD1B,CAJb;IAQL,IAAIH,QAAQ,KAAK,OAAb,IAAwB;MAC1B,CAAC,KAAKJ,kBAAkB,GAAxB,GAA8BG;IADJ,CAA5B,CARK;IAWL,IAAIC,QAAQ,KAAK,cAAb,IAA+B;MACjC,CAAC,KAAKH,iBAAiB,KAAKG,QAAQ,EAApC,GAAyCD;IADR,CAAnC;EAXK,CAAP;AAeD","names":["defaultOptions","FOCUS_VISIBLE_ATTR","FOCUS_WITHIN_ATTR","createCustomFocusIndicatorStyle","style","selector","enableOutline","outlineStyle","undefined"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-tabster\\lib\\src\\packages\\react-components\\react-tabster\\src\\focus\\createCustomFocusIndicatorStyle.ts"],"sourcesContent":["import { defaultOptions, FOCUS_VISIBLE_ATTR, FOCUS_WITHIN_ATTR } from './constants';\nimport { makeResetStyles } from '@griffel/react';\nimport type { GriffelStyle } from '@griffel/react';\n\n// TODO: Use the type directly from @griffel/react\n// https://github.com/microsoft/griffel/pull/278\ntype GriffelResetStyle = Parameters<typeof makeResetStyles>[0];\n\nexport interface CreateCustomFocusIndicatorStyleOptions {\n  selector?: 'focus' | 'focus-within';\n  /**\n   * Enables the browser default outline style\n   * @default false\n   */\n  enableOutline?: boolean;\n}\n\n/**\n * Creates a style for @see makeStyles that includes the necessary selectors for focus.\n * Should be used only when @see createFocusOutlineStyle does not fit requirements\n *\n * @param style - styling applied on focus, defaults to @see getDefaultFocusOutlineStyles\n * @param options - Configure the style of the focus outline\n */\nexport function createCustomFocusIndicatorStyle<TStyle extends GriffelStyle | GriffelResetStyle>(\n  style: TStyle,\n  {\n    selector = defaultOptions.selector,\n    enableOutline = false,\n  }: CreateCustomFocusIndicatorStyleOptions = defaultOptions,\n): TStyle extends GriffelStyle ? GriffelStyle : GriffelResetStyle {\n  return {\n    ':focus': {\n      outlineStyle: enableOutline ? undefined : 'none',\n    },\n    ':focus-visible': {\n      outlineStyle: enableOutline ? undefined : 'none',\n    },\n\n    ...(selector === 'focus' && {\n      [`&[${FOCUS_VISIBLE_ATTR}]`]: style,\n    }),\n    ...(selector === 'focus-within' && {\n      [`&[${FOCUS_WITHIN_ATTR}]:${selector}`]: style,\n    }),\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}