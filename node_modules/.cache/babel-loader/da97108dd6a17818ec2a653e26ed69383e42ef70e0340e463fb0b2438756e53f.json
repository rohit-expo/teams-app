{"ast":null,"code":"import { resolveShorthand } from '@fluentui/react-utilities';\nimport { useButton_unstable } from '../Button/index';\n/**\n * Given user props, defines default props for the CompoundButton, calls useButtonState, and returns processed state.\n * @param props - User provided props to the CompoundButton component.\n * @param ref - User provided ref to be passed to the CompoundButton component.\n */\n\nexport const useCompoundButton_unstable = (_ref, ref) => {\n  let {\n    contentContainer,\n    secondaryContent,\n    ...props\n  } = _ref;\n  var _a, _b;\n  const state = {\n    // Button state\n    ...useButton_unstable(props, ref),\n    // Slots definition\n    components: {\n      root: 'button',\n      icon: 'span',\n      contentContainer: 'span',\n      secondaryContent: 'span'\n    },\n    contentContainer: resolveShorthand(contentContainer, {\n      required: true\n    }),\n    secondaryContent: resolveShorthand(secondaryContent)\n  }; // Recalculate iconOnly to take into account secondaryContent.\n\n  state.iconOnly = Boolean(((_a = state.icon) === null || _a === void 0 ? void 0 : _a.children) && !props.children && !((_b = state.secondaryContent) === null || _b === void 0 ? void 0 : _b.children));\n  return state;\n};","map":{"version":3,"mappings":"AACA,SAASA,gBAAT,QAAiC,2BAAjC;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AAGA;;;;AAIG;;AACH,OAAO,MAAMC,0BAA0B,GAAG,OAExCC,GAFwC,KAGjB;EAAA,IAFvB;IAAEC,gBAAF;IAAoBC,gBAApB;IAAsC,GAAGC;EAAzC,CADwC;;EAIxC,MAAMC,KAAK,GAAwB;IACjC;IACA,GAAGN,kBAAkB,CAACK,KAAD,EAAQH,GAAR,CAFY;IAIjC;IACAK,UAAU,EAAE;MACVC,IAAI,EAAE,QADI;MAEVC,IAAI,EAAE,MAFI;MAGVN,gBAAgB,EAAE,MAHR;MAIVC,gBAAgB,EAAE;IAJR,CALqB;IAWjCD,gBAAgB,EAAEJ,gBAAgB,CAACI,gBAAD,EAAmB;MAAEO,QAAQ,EAAE;IAAZ,CAAnB,CAXD;IAYjCN,gBAAgB,EAAEL,gBAAgB,CAACK,gBAAD;EAZD,CAAnC,CADuB,CAgBvB;;EACAE,KAAK,CAACK,QAAN,GAAiBC,OAAO,CAAC,YAAK,CAACH,IAAN,MAAU,IAAV,IAAUI,aAAV,GAAU,MAAV,GAAUA,GAAEC,QAAZ,KAAwB,CAACT,KAAK,CAACS,QAA/B,IAA2C,EAAC,WAAK,CAACV,gBAAN,MAAsB,IAAtB,IAAsBW,aAAtB,GAAsB,MAAtB,GAAsBA,GAAED,QAAzB,CAA5C,CAAxB;EAEA,OAAOR,KAAP;AACD,CAvBM","names":["resolveShorthand","useButton_unstable","useCompoundButton_unstable","ref","contentContainer","secondaryContent","props","state","components","root","icon","required","iconOnly","Boolean","_a","children","_b"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-button\\lib\\components\\src\\packages\\react-components\\react-button\\src\\components\\CompoundButton\\useCompoundButton.ts"],"sourcesContent":["import * as React from 'react';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport { useButton_unstable } from '../Button/index';\nimport type { CompoundButtonProps, CompoundButtonState } from './CompoundButton.types';\n\n/**\n * Given user props, defines default props for the CompoundButton, calls useButtonState, and returns processed state.\n * @param props - User provided props to the CompoundButton component.\n * @param ref - User provided ref to be passed to the CompoundButton component.\n */\nexport const useCompoundButton_unstable = (\n  { contentContainer, secondaryContent, ...props }: CompoundButtonProps,\n  ref: React.Ref<HTMLButtonElement | HTMLAnchorElement>,\n): CompoundButtonState => {\n  const state: CompoundButtonState = {\n    // Button state\n    ...useButton_unstable(props, ref),\n\n    // Slots definition\n    components: {\n      root: 'button',\n      icon: 'span',\n      contentContainer: 'span',\n      secondaryContent: 'span',\n    },\n    contentContainer: resolveShorthand(contentContainer, { required: true }),\n    secondaryContent: resolveShorthand(secondaryContent),\n  };\n\n  // Recalculate iconOnly to take into account secondaryContent.\n  state.iconOnly = Boolean(state.icon?.children && !props.children && !state.secondaryContent?.children);\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}