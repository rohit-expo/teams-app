{"ast":null,"code":"import * as React from 'react';\nimport { Portal } from '@fluentui/react-portal';\nimport { getSlots } from '@fluentui/react-utilities';\n/**\n * Render the final JSX of PopoverSurface\n */\n\nexport const renderPopoverSurface_unstable = state => {\n  const {\n    slots,\n    slotProps\n  } = getSlots(state);\n  const surface = /*#__PURE__*/React.createElement(slots.root, {\n    ...slotProps.root\n  }, state.withArrow && /*#__PURE__*/React.createElement(\"div\", {\n    ref: state.arrowRef,\n    className: state.arrowClassName\n  }), slotProps.root.children);\n  if (state.inline) {\n    return surface;\n  }\n  return /*#__PURE__*/React.createElement(Portal, {\n    mountNode: state.mountNode\n  }, surface);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAGA;;AAEG;;AACH,OAAO,MAAMC,6BAA6B,GAAIC,KAAD,IAA+B;EAC1E,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAuBJ,QAAQ,CAAsBE,KAAtB,CAArC;EAEA,MAAMG,OAAO,gBACXP,oBAACK,KAAK,CAACG,IAAP,EAAW;IAAA,GAAKF,SAAS,CAACE;EAAf,CAAX,EACGJ,KAAK,CAACK,SAAN,iBAAmBT;IAAKU,GAAG,EAAEN,KAAK,CAACO,QAAhB;IAA0BC,SAAS,EAAER,KAAK,CAACS;EAA3C,EADtB,EAEGP,SAAS,CAACE,IAAV,CAAeM,QAFlB,CADF;EAOA,IAAIV,KAAK,CAACW,MAAV,EAAkB;IAChB,OAAOR,OAAP;EACD;EAED,oBAAOP,oBAACC,MAAD,EAAO;IAACe,SAAS,EAAEZ,KAAK,CAACY;EAAlB,CAAP,EAAqCT,OAArC,CAAP;AACD,CAfM","names":["React","Portal","getSlots","renderPopoverSurface_unstable","state","slots","slotProps","surface","root","withArrow","ref","arrowRef","className","arrowClassName","children","inline","mountNode"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-popover\\lib\\components\\src\\packages\\react-components\\react-popover\\src\\components\\PopoverSurface\\renderPopoverSurface.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Portal } from '@fluentui/react-portal';\nimport { getSlots } from '@fluentui/react-utilities';\nimport type { PopoverSurfaceSlots, PopoverSurfaceState } from './PopoverSurface.types';\n\n/**\n * Render the final JSX of PopoverSurface\n */\nexport const renderPopoverSurface_unstable = (state: PopoverSurfaceState) => {\n  const { slots, slotProps } = getSlots<PopoverSurfaceSlots>(state);\n\n  const surface = (\n    <slots.root {...slotProps.root}>\n      {state.withArrow && <div ref={state.arrowRef} className={state.arrowClassName} />}\n      {slotProps.root.children}\n    </slots.root>\n  );\n\n  if (state.inline) {\n    return surface;\n  }\n\n  return <Portal mountNode={state.mountNode}>{surface}</Portal>;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}