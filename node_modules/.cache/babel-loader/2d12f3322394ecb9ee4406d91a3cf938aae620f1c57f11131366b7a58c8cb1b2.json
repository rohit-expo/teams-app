{"ast":null,"code":"import { createContext, useContextSelector } from '@fluentui/react-context-selector';\nexport const PopoverContext = /*#__PURE__*/createContext(undefined);\nconst popoverContextDefaultValue = {\n  open: false,\n  setOpen: () => null,\n  toggleOpen: () => null,\n  triggerRef: {\n    current: null\n  },\n  contentRef: {\n    current: null\n  },\n  arrowRef: {\n    current: null\n  },\n  openOnContext: false,\n  openOnHover: false,\n  size: 'medium',\n  trapFocus: false,\n  inline: false\n};\nexport const PopoverProvider = PopoverContext.Provider;\nexport const usePopoverContext_unstable = selector => useContextSelector(PopoverContext, function () {\n  let ctx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : popoverContextDefaultValue;\n  return selector(ctx);\n});","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,EAAwBC,kBAAxB,QAAkD,kCAAlD;AAIA,OAAO,MAAMC,cAAc,gBAAiCF,aAAa,CACvEG,SADuE,CAAlE;AAGP,MAAMC,0BAA0B,GAAwB;EACtDC,IAAI,EAAE,KADgD;EAEtDC,OAAO,EAAE,MAAM,IAFuC;EAGtDC,UAAU,EAAE,MAAM,IAHoC;EAItDC,UAAU,EAAE;IAAEC,OAAO,EAAE;EAAX,CAJ0C;EAKtDC,UAAU,EAAE;IAAED,OAAO,EAAE;EAAX,CAL0C;EAMtDE,QAAQ,EAAE;IAAEF,OAAO,EAAE;EAAX,CAN4C;EAOtDG,aAAa,EAAE,KAPuC;EAQtDC,WAAW,EAAE,KARyC;EAStDC,IAAI,EAAE,QATgD;EAUtDC,SAAS,EAAE,KAV2C;EAWtDC,MAAM,EAAE;AAX8C,CAAxD;AAcA,OAAO,MAAMC,eAAe,GAAGf,cAAc,CAACgB,QAAvC;AAwBP,OAAO,MAAMC,0BAA0B,GAAOC,QAAJ,IACxCnB,kBAAkB,CAACC,cAAD,EAAiB;EAAA,IAACmB,GAAG,uEAAGjB,0BAAP;EAAA,OAAsCgB,QAAQ,CAACC,GAAD,CAA/D;AAAA,EADb","names":["createContext","useContextSelector","PopoverContext","undefined","popoverContextDefaultValue","open","setOpen","toggleOpen","triggerRef","current","contentRef","arrowRef","openOnContext","openOnHover","size","trapFocus","inline","PopoverProvider","Provider","usePopoverContext_unstable","selector","ctx"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-popover\\src\\packages\\react-components\\react-popover\\src\\popoverContext.ts"],"sourcesContent":["import { createContext, useContextSelector } from '@fluentui/react-context-selector';\nimport type { ContextSelector, Context } from '@fluentui/react-context-selector';\nimport type { PopoverState } from './components/Popover/index';\n\nexport const PopoverContext: Context<PopoverContextValue> = createContext<PopoverContextValue | undefined>(\n  undefined,\n) as Context<PopoverContextValue>;\nconst popoverContextDefaultValue: PopoverContextValue = {\n  open: false,\n  setOpen: () => null,\n  toggleOpen: () => null,\n  triggerRef: { current: null },\n  contentRef: { current: null },\n  arrowRef: { current: null },\n  openOnContext: false,\n  openOnHover: false,\n  size: 'medium' as const,\n  trapFocus: false,\n  inline: false,\n};\n\nexport const PopoverProvider = PopoverContext.Provider;\n\n/**\n * Context shared between Popover and its children components\n */\nexport type PopoverContextValue = Pick<\n  PopoverState,\n  | 'open'\n  | 'toggleOpen'\n  | 'setOpen'\n  | 'triggerRef'\n  | 'contentRef'\n  | 'openOnHover'\n  | 'openOnContext'\n  | 'mountNode'\n  | 'withArrow'\n  | 'arrowRef'\n  | 'size'\n  | 'appearance'\n  | 'trapFocus'\n  | 'legacyTrapFocus'\n  | 'inline'\n>;\n\nexport const usePopoverContext_unstable = <T>(selector: ContextSelector<PopoverContextValue, T>): T =>\n  useContextSelector(PopoverContext, (ctx = popoverContextDefaultValue) => selector(ctx));\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}