{"ast":null,"code":"import { useId, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { fluentProviderClassNames } from './useFluentProviderStyles'; // String concatenation is used to prevent bundlers to complain with older versions of React\n\nconst useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : useIsomorphicLayoutEffect;\nconst createStyleTag = (target, id) => {\n  if (!target) {\n    return undefined;\n  }\n  const tag = target.createElement('style');\n  tag.setAttribute('id', id);\n  target.head.appendChild(tag);\n  return tag;\n};\nconst insertSheet = (tag, rule) => {\n  const sheet = tag.sheet;\n  if (sheet) {\n    if (sheet.cssRules.length > 0) {\n      sheet.deleteRule(0);\n    }\n    sheet.insertRule(rule, 0);\n  } else if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line no-console\n    console.error('FluentProvider: No sheet available on styleTag, styles will not be inserted into DOM.');\n  }\n};\n/**\n * Writes a theme as css variables in a style tag on the provided targetDocument as a rule applied to a CSS class\n *\n * @returns CSS class to apply the rule\n */\n\nexport const useFluentProviderThemeStyleTag = options => {\n  const {\n    targetDocument,\n    theme\n  } = options;\n  const styleTag = React.useRef();\n  const styleTagId = useId(fluentProviderClassNames.root);\n  const cssVarsAsString = React.useMemo(() => {\n    return theme ? Object.keys(theme).reduce((cssVarRule, cssVar) => {\n      cssVarRule += `--${cssVar}: ${theme[cssVar]}; `;\n      return cssVarRule;\n    }, '') : '';\n  }, [theme]);\n  const rule = `.${styleTagId} { ${cssVarsAsString} }`;\n  useInsertionEffect(() => {\n    styleTag.current = createStyleTag(targetDocument, styleTagId);\n    if (styleTag.current) {\n      insertSheet(styleTag.current, rule);\n      return () => {\n        var _a;\n        (_a = styleTag.current) === null || _a === void 0 ? void 0 : _a.remove();\n      };\n    }\n  }, [styleTagId, targetDocument, rule]);\n  return styleTagId;\n};","map":{"version":3,"mappings":"AAAA,SAASA,KAAT,EAAgBC,yBAAhB,QAAiD,2BAAjD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,wBAAT,QAAyC,2BAAzC,C,CAEA;;AACA,MAAMC,kBAAkB,GAAIF,KAAe,CAAC,iBAAiB,QAAlB,CAAf,GACvBA,KAAe,CAAC,iBAAiB,QAAlB,CADQ,GAExBD,yBAFJ;AAIA,MAAMI,cAAc,GAAG,CAACC,MAAD,EAA+BC,EAA/B,KAA6C;EAClE,IAAI,CAACD,MAAL,EAAa;IACX,OAAOE,SAAP;EACD;EACD,MAAMC,GAAG,GAAGH,MAAM,CAACI,aAAP,CAAqB,OAArB,CAAZ;EACAD,GAAG,CAACE,YAAJ,CAAiB,IAAjB,EAAuBJ,EAAvB;EACAD,MAAM,CAACM,IAAP,CAAYC,WAAZ,CAAwBJ,GAAxB;EACA,OAAOA,GAAP;AACD,CARD;AAUA,MAAMK,WAAW,GAAG,CAACL,GAAD,EAAwBM,IAAxB,KAAwC;EAC1D,MAAMC,KAAK,GAAGP,GAAG,CAACO,KAAlB;EAEA,IAAIA,KAAJ,EAAW;IACT,IAAIA,KAAK,CAACC,QAAN,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;MAC7BF,KAAK,CAACG,UAAN,CAAiB,CAAjB;IACD;IACDH,KAAK,CAACI,UAAN,CAAiBL,IAAjB,EAAuB,CAAvB;EACD,CALD,MAKO,IAAIM,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IAChD;IACAC,OAAO,CAACC,KAAR,CAAc,uFAAd;EACD;AACF,CAZD;AAcA;;;;AAIG;;AACH,OAAO,MAAMC,8BAA8B,GAAIC,OAAD,IAAmE;EAC/G,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA4BF,OAAlC;EACA,MAAMG,QAAQ,GAAG5B,KAAK,CAAC6B,MAAN,EAAjB;EAEA,MAAMC,UAAU,GAAGhC,KAAK,CAACG,wBAAwB,CAAC8B,IAA1B,CAAxB;EAEA,MAAMC,eAAe,GAAGhC,KAAK,CAACiC,OAAN,CAAc,MAAK;IACzC,OAAON,KAAK,GACPO,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAA8CS,MAA9C,CAAqD,CAACC,UAAD,EAAaC,MAAb,KAAuB;MAC3ED,UAAU,IAAI,KAAKC,MAAM,KAAKX,KAAK,CAACW,MAAD,CAAQ,IAA3C;MACA,OAAOD,UAAP;IACD,CAHA,EAGE,EAHF,CADO,GAKR,EALJ;EAMD,CAPuB,EAOrB,CAACV,KAAD,CAPqB,CAAxB;EASA,MAAMd,IAAI,GAAG,IAAIiB,UAAU,MAAME,eAAe,IAAhD;EAEA9B,kBAAkB,CAAC,MAAK;IACtB0B,QAAQ,CAACW,OAAT,GAAmBpC,cAAc,CAACuB,cAAD,EAAiBI,UAAjB,CAAjC;IAEA,IAAIF,QAAQ,CAACW,OAAb,EAAsB;MACpB3B,WAAW,CAACgB,QAAQ,CAACW,OAAV,EAAmB1B,IAAnB,CAAX;MAEA,OAAO,MAAK;;QACV,cAAQ,CAAC0B,OAAT,MAAgB,IAAhB,IAAgBC,aAAhB,GAAgB,MAAhB,GAAgBA,GAAEC,MAAF,EAAhB;MACD,CAFD;IAGD;EACF,CAViB,EAUf,CAACX,UAAD,EAAaJ,cAAb,EAA6Bb,IAA7B,CAVe,CAAlB;EAYA,OAAOiB,UAAP;AACD,CA9BM","names":["useId","useIsomorphicLayoutEffect","React","fluentProviderClassNames","useInsertionEffect","createStyleTag","target","id","undefined","tag","createElement","setAttribute","head","appendChild","insertSheet","rule","sheet","cssRules","length","deleteRule","insertRule","process","env","NODE_ENV","console","error","useFluentProviderThemeStyleTag","options","targetDocument","theme","styleTag","useRef","styleTagId","root","cssVarsAsString","useMemo","Object","keys","reduce","cssVarRule","cssVar","current","_a","remove"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-provider\\lib\\components\\src\\packages\\react-components\\react-provider\\src\\components\\FluentProvider\\useFluentProviderThemeStyleTag.ts"],"sourcesContent":["import { useId, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport type { FluentProviderState } from './FluentProvider.types';\nimport { fluentProviderClassNames } from './useFluentProviderStyles';\n\n// String concatenation is used to prevent bundlers to complain with older versions of React\nconst useInsertionEffect = (React as never)['useInsertion' + 'Effect']\n  ? (React as never)['useInsertion' + 'Effect']\n  : useIsomorphicLayoutEffect;\n\nconst createStyleTag = (target: Document | undefined, id: string) => {\n  if (!target) {\n    return undefined;\n  }\n  const tag = target.createElement('style');\n  tag.setAttribute('id', id);\n  target.head.appendChild(tag);\n  return tag;\n};\n\nconst insertSheet = (tag: HTMLStyleElement, rule: string) => {\n  const sheet = tag.sheet;\n\n  if (sheet) {\n    if (sheet.cssRules.length > 0) {\n      sheet.deleteRule(0);\n    }\n    sheet.insertRule(rule, 0);\n  } else if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line no-console\n    console.error('FluentProvider: No sheet available on styleTag, styles will not be inserted into DOM.');\n  }\n};\n\n/**\n * Writes a theme as css variables in a style tag on the provided targetDocument as a rule applied to a CSS class\n *\n * @returns CSS class to apply the rule\n */\nexport const useFluentProviderThemeStyleTag = (options: Pick<FluentProviderState, 'theme' | 'targetDocument'>) => {\n  const { targetDocument, theme } = options;\n  const styleTag = React.useRef<HTMLStyleElement>();\n\n  const styleTagId = useId(fluentProviderClassNames.root);\n\n  const cssVarsAsString = React.useMemo(() => {\n    return theme\n      ? (Object.keys(theme) as (keyof typeof theme)[]).reduce((cssVarRule, cssVar) => {\n          cssVarRule += `--${cssVar}: ${theme[cssVar]}; `;\n          return cssVarRule;\n        }, '')\n      : '';\n  }, [theme]);\n\n  const rule = `.${styleTagId} { ${cssVarsAsString} }`;\n\n  useInsertionEffect(() => {\n    styleTag.current = createStyleTag(targetDocument, styleTagId);\n\n    if (styleTag.current) {\n      insertSheet(styleTag.current, rule);\n\n      return () => {\n        styleTag.current?.remove();\n      };\n    }\n  }, [styleTagId, targetDocument, rule]);\n\n  return styleTagId;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}