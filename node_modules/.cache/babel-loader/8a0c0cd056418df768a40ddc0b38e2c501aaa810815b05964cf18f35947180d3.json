{"ast":null,"code":"import * as React from 'react';\nimport { Portal } from '@fluentui/react-portal';\nimport { getSlots } from '@fluentui/react-utilities';\n/**\n * Render the final JSX of Tooltip\n */\n\nexport const renderTooltip_unstable = state => {\n  const {\n    slots,\n    slotProps\n  } = getSlots(state);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.children, state.shouldRenderTooltip && /*#__PURE__*/React.createElement(Portal, {\n    mountNode: state.mountNode\n  }, /*#__PURE__*/React.createElement(slots.content, {\n    ...slotProps.content\n  }, state.withArrow && /*#__PURE__*/React.createElement(\"div\", {\n    ref: state.arrowRef,\n    className: state.arrowClassName\n  }), state.content.children)));\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAGA;;AAEG;;AACH,OAAO,MAAMC,sBAAsB,GAAIC,KAAD,IAAwB;EAC5D,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAuBJ,QAAQ,CAAeE,KAAf,CAArC;EAEA,oBACEJ,0CACGI,KAAK,CAACG,QADT,EAEGH,KAAK,CAACI,mBAAN,iBACCR,oBAACC,MAAD,EAAO;IAACQ,SAAS,EAAEL,KAAK,CAACK;EAAlB,CAAP,eACET,oBAACK,KAAK,CAACK,OAAP,EAAc;IAAA,GAAKJ,SAAS,CAACI;EAAf,CAAd,EACGN,KAAK,CAACO,SAAN,iBAAmBX;IAAKY,GAAG,EAAER,KAAK,CAACS,QAAhB;IAA0BC,SAAS,EAAEV,KAAK,CAACW;EAA3C,EADtB,EAEGX,KAAK,CAACM,OAAN,CAAcH,QAFjB,CADF,CAHJ,CADF;AAaD,CAhBM","names":["React","Portal","getSlots","renderTooltip_unstable","state","slots","slotProps","children","shouldRenderTooltip","mountNode","content","withArrow","ref","arrowRef","className","arrowClassName"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-tooltip\\lib\\components\\src\\packages\\react-components\\react-tooltip\\src\\components\\Tooltip\\renderTooltip.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Portal } from '@fluentui/react-portal';\nimport { getSlots } from '@fluentui/react-utilities';\nimport type { TooltipSlots, TooltipState } from './Tooltip.types';\n\n/**\n * Render the final JSX of Tooltip\n */\nexport const renderTooltip_unstable = (state: TooltipState) => {\n  const { slots, slotProps } = getSlots<TooltipSlots>(state);\n\n  return (\n    <>\n      {state.children}\n      {state.shouldRenderTooltip && (\n        <Portal mountNode={state.mountNode}>\n          <slots.content {...slotProps.content}>\n            {state.withArrow && <div ref={state.arrowRef} className={state.arrowClassName} />}\n            {state.content.children}\n          </slots.content>\n        </Portal>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}