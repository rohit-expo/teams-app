{"ast":null,"code":"import { getParent } from './getParent';\n/**\n * Similar functionality to `element.contains` DOM API for use with out of order DOM elements that\n * checks the virtual parent hierarchy. If a virtual parents exists, it is chosen over the actual parent\n *\n * @returns true if the child can find the parent in its virtual hierarchy\n */\n\nexport function elementContains(parent, child) {\n  if (!parent || !child) {\n    return false;\n  }\n  if (parent === child) {\n    return true;\n  } else {\n    while (child) {\n      const nextParent = getParent(child);\n      if (nextParent === parent) {\n        return true;\n      }\n      child = nextParent;\n    }\n  }\n  return false;\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA;;;;;AAKG;;AACH,OAAM,SAAUC,eAAV,CAA0BC,MAA1B,EAAsDC,KAAtD,EAA+E;EACnF,IAAI,CAACD,MAAD,IAAW,CAACC,KAAhB,EAAuB;IACrB,OAAO,KAAP;EACD;EAED,IAAID,MAAM,KAAKC,KAAf,EAAsB;IACpB,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OAAOA,KAAP,EAAc;MACZ,MAAMC,UAAU,GAAuBJ,SAAS,CAACG,KAAD,CAAhD;MAEA,IAAIC,UAAU,KAAKF,MAAnB,EAA2B;QACzB,OAAO,IAAP;MACD;MAEDC,KAAK,GAAGC,UAAR;IACD;EACF;EAED,OAAO,KAAP;AACD","names":["getParent","elementContains","parent","child","nextParent"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-portal\\lib\\src\\packages\\react-components\\react-portal\\src\\virtualParent\\elementContains.ts"],"sourcesContent":["import { getParent } from './getParent';\n/**\n * Similar functionality to `element.contains` DOM API for use with out of order DOM elements that\n * checks the virtual parent hierarchy. If a virtual parents exists, it is chosen over the actual parent\n *\n * @returns true if the child can find the parent in its virtual hierarchy\n */\nexport function elementContains(parent: HTMLElement | null, child: HTMLElement | null): boolean {\n  if (!parent || !child) {\n    return false;\n  }\n\n  if (parent === child) {\n    return true;\n  } else {\n    while (child) {\n      const nextParent: HTMLElement | null = getParent(child);\n\n      if (nextParent === parent) {\n        return true;\n      }\n\n      child = nextParent;\n    }\n  }\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}