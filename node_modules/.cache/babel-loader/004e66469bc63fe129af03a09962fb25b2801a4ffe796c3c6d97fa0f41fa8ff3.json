{"ast":null,"code":"import { getNativeElementProps } from '@fluentui/react-utilities';\n/**\n * Create the state required to render DialogActions.\n *\n * The returned state can be modified with hooks such as useDialogActionsStyles_unstable,\n * before being passed to renderDialogActions_unstable.\n *\n * @param props - props from this instance of DialogActions\n * @param ref - reference to root HTMLElement of DialogActions\n */\n\nexport const useDialogActions_unstable = (props, ref) => {\n  const {\n    position = 'end'\n  } = props;\n  return {\n    components: {\n      root: 'div'\n    },\n    root: getNativeElementProps('div', {\n      ref,\n      ...props\n    }),\n    position\n  };\n};","map":{"version":3,"mappings":"AACA,SAASA,qBAAT,QAAsC,2BAAtC;AAGA;;;;;;;;AAQG;;AACH,OAAO,MAAMC,yBAAyB,GAAG,CACvCC,KADuC,EAEvCC,GAFuC,KAGjB;EACtB,MAAM;IAAEC,QAAQ,GAAG;EAAb,IAAuBF,KAA7B;EACA,OAAO;IACLG,UAAU,EAAE;MACVC,IAAI,EAAE;IADI,CADP;IAILA,IAAI,EAAEN,qBAAqB,CAAC,KAAD,EAAQ;MACjCG,GADiC;MAEjC,GAAGD;IAF8B,CAAR,CAJtB;IAQLE;EARK,CAAP;AAUD,CAfM","names":["getNativeElementProps","useDialogActions_unstable","props","ref","position","components","root"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-dialog\\lib\\components\\src\\packages\\react-components\\react-dialog\\src\\components\\DialogActions\\useDialogActions.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport type { DialogActionsProps, DialogActionsState } from './DialogActions.types';\n\n/**\n * Create the state required to render DialogActions.\n *\n * The returned state can be modified with hooks such as useDialogActionsStyles_unstable,\n * before being passed to renderDialogActions_unstable.\n *\n * @param props - props from this instance of DialogActions\n * @param ref - reference to root HTMLElement of DialogActions\n */\nexport const useDialogActions_unstable = (\n  props: DialogActionsProps,\n  ref: React.Ref<HTMLElement>,\n): DialogActionsState => {\n  const { position = 'end' } = props;\n  return {\n    components: {\n      root: 'div',\n    },\n    root: getNativeElementProps('div', {\n      ref,\n      ...props,\n    }),\n    position,\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}