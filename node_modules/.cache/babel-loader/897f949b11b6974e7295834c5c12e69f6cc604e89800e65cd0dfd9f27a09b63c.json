{"ast":null,"code":"import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { createTabster, disposeTabster } from 'tabster';\nimport { useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\n/**\n * Tries to get a tabster instance on the current window or creates a new one\n * Since Tabster is single instance only, feel free to call this hook to ensure Tabster exists if necessary\n *\n * @internal\n * @returns Tabster core instance\n */\n\nexport const useTabster = () => {\n  const {\n    targetDocument\n  } = useFluent();\n  const defaultView = (targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView) || undefined;\n  const tabster = React.useMemo(() => {\n    if (!defaultView) {\n      return null;\n    }\n    return createTabster(defaultView, {\n      autoRoot: {},\n      controlTab: false\n    });\n  }, [defaultView]);\n  useIsomorphicLayoutEffect(() => {\n    return () => {\n      if (tabster) {\n        disposeTabster(tabster);\n      }\n    };\n  }, [tabster]);\n  return tabster;\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAkB,IAAIC,SAA/B,QAAgD,iCAAhD;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAAqE,SAArE;AACA,SAASC,yBAAT,QAA0C,2BAA1C;AAEA;;;;;;AAMG;;AACH,OAAO,MAAMC,UAAU,GAAG,MAAsC;EAC9D,MAAM;IAAEC;EAAF,IAAqBL,SAAS,EAApC;EAEA,MAAMM,WAAW,GAAG,eAAc,SAAd,kBAAc,WAAd,GAAc,MAAd,iBAAc,CAAEA,WAAhB,KAA+BC,SAAnD;EACA,MAAMC,OAAO,GAAGV,KAAK,CAACW,OAAN,CAAc,MAAK;IACjC,IAAI,CAACH,WAAL,EAAkB;MAChB,OAAO,IAAP;IACD;IAED,OAAOL,aAAa,CAACK,WAAD,EAAc;MAAEI,QAAQ,EAAE,EAAZ;MAAgBC,UAAU,EAAE;IAA5B,CAAd,CAApB;EACD,CANe,EAMb,CAACL,WAAD,CANa,CAAhB;EAQAH,yBAAyB,CAAC,MAAK;IAC7B,OAAO,MAAK;MACV,IAAIK,OAAJ,EAAa;QACXN,cAAc,CAACM,OAAD,CAAd;MACD;IACF,CAJD;EAKD,CANwB,EAMtB,CAACA,OAAD,CANsB,CAAzB;EAQA,OAAOA,OAAP;AACD,CArBM","names":["React","useFluent_unstable","useFluent","createTabster","disposeTabster","useIsomorphicLayoutEffect","useTabster","targetDocument","defaultView","undefined","tabster","useMemo","autoRoot","controlTab"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-tabster\\lib\\src\\packages\\react-components\\react-tabster\\src\\hooks\\useTabster.ts"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { createTabster, disposeTabster, Types as TabsterTypes } from 'tabster';\nimport { useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\n\n/**\n * Tries to get a tabster instance on the current window or creates a new one\n * Since Tabster is single instance only, feel free to call this hook to ensure Tabster exists if necessary\n *\n * @internal\n * @returns Tabster core instance\n */\nexport const useTabster = (): TabsterTypes.TabsterCore | null => {\n  const { targetDocument } = useFluent();\n\n  const defaultView = targetDocument?.defaultView || undefined;\n  const tabster = React.useMemo(() => {\n    if (!defaultView) {\n      return null;\n    }\n\n    return createTabster(defaultView, { autoRoot: {}, controlTab: false });\n  }, [defaultView]);\n\n  useIsomorphicLayoutEffect(() => {\n    return () => {\n      if (tabster) {\n        disposeTabster(tabster);\n      }\n    };\n  }, [tabster]);\n\n  return tabster;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}