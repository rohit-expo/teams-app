{"ast":null,"code":"import { getNativeElementProps, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { Button } from '../Button/Button';\nimport { MenuButton } from '../MenuButton/MenuButton';\n/**\n * Given user props, defines default props for the SplitButton and returns processed state.\n * @param props - User provided props to the SplitButton component.\n * @param ref - User provided ref to be passed to the SplitButton component.\n */\n\nexport const useSplitButton_unstable = (props, ref) => {\n  const {\n    appearance = 'secondary',\n    children,\n    disabled = false,\n    disabledFocusable = false,\n    icon,\n    iconPosition = 'before',\n    menuButton,\n    menuIcon,\n    primaryActionButton,\n    shape = 'rounded',\n    size = 'medium'\n  } = props;\n  const baseId = useId('splitButton-');\n  const menuButtonShorthand = resolveShorthand(menuButton, {\n    defaultProps: {\n      appearance,\n      disabled,\n      disabledFocusable,\n      menuIcon,\n      shape,\n      size\n    },\n    required: true\n  });\n  const primaryActionButtonShorthand = resolveShorthand(primaryActionButton, {\n    defaultProps: {\n      appearance,\n      children,\n      disabled,\n      disabledFocusable,\n      icon,\n      iconPosition,\n      id: baseId + '__primaryActionButton',\n      shape,\n      size\n    },\n    required: true\n  }); // Resolve menu button's aria-labelledby to be labelled by the primary action button if not a label was not provided\n  // by the user.\n\n  if (menuButtonShorthand && primaryActionButtonShorthand && !menuButtonShorthand['aria-label'] && !menuButtonShorthand['aria-labelledby']) {\n    menuButtonShorthand['aria-labelledby'] = primaryActionButtonShorthand.id;\n  }\n  return {\n    // Props passed at the top-level\n    appearance,\n    disabled,\n    disabledFocusable,\n    iconPosition,\n    shape,\n    size,\n    // Slots definition\n    components: {\n      root: 'div',\n      menuButton: MenuButton,\n      primaryActionButton: Button\n    },\n    root: getNativeElementProps('div', {\n      ref,\n      ...props\n    }),\n    menuButton: menuButtonShorthand,\n    primaryActionButton: primaryActionButtonShorthand\n  };\n};","map":{"version":3,"mappings":"AACA,SAASA,qBAAT,EAAgCC,gBAAhC,EAAkDC,KAAlD,QAA+D,2BAA/D;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAGA;;;;AAIG;;AACH,OAAO,MAAMC,uBAAuB,GAAG,CACrCC,KADqC,EAErCC,GAFqC,KAGjB;EACpB,MAAM;IACJC,UAAU,GAAG,WADT;IAEJC,QAFI;IAGJC,QAAQ,GAAG,KAHP;IAIJC,iBAAiB,GAAG,KAJhB;IAKJC,IALI;IAMJC,YAAY,GAAG,QANX;IAOJC,UAPI;IAQJC,QARI;IASJC,mBATI;IAUJC,KAAK,GAAG,SAVJ;IAWJC,IAAI,GAAG;EAXH,IAYFZ,KAZJ;EAcA,MAAMa,MAAM,GAAGjB,KAAK,CAAC,cAAD,CAApB;EAEA,MAAMkB,mBAAmB,GAAGnB,gBAAgB,CAACa,UAAD,EAAa;IACvDO,YAAY,EAAE;MACZb,UADY;MAEZE,QAFY;MAGZC,iBAHY;MAIZI,QAJY;MAKZE,KALY;MAMZC;IANY,CADyC;IASvDI,QAAQ,EAAE;EAT6C,CAAb,CAA5C;EAYA,MAAMC,4BAA4B,GAAGtB,gBAAgB,CAACe,mBAAD,EAAsB;IACzEK,YAAY,EAAE;MACZb,UADY;MAEZC,QAFY;MAGZC,QAHY;MAIZC,iBAJY;MAKZC,IALY;MAMZC,YANY;MAOZW,EAAE,EAAEL,MAAM,GAAG,uBAPD;MAQZF,KARY;MASZC;IATY,CAD2D;IAYzEI,QAAQ,EAAE;EAZ+D,CAAtB,CAArD,CA7BoB,CA4CpB;EACA;;EACA,IACEF,mBAAmB,IACnBG,4BADA,IAEA,CAACH,mBAAmB,CAAC,YAAD,CAFpB,IAGA,CAACA,mBAAmB,CAAC,iBAAD,CAJtB,EAKE;IACAA,mBAAmB,CAAC,iBAAD,CAAnB,GAAyCG,4BAA4B,CAACC,EAAtE;EACD;EAED,OAAO;IACL;IACAhB,UAFK;IAGLE,QAHK;IAILC,iBAJK;IAKLE,YALK;IAMLI,KANK;IAOLC,IAPK;IASL;IACAO,UAAU,EAAE;MACVC,IAAI,EAAE,KADI;MAEVZ,UAAU,EAAEV,UAFF;MAGVY,mBAAmB,EAAEb;IAHX,CAVP;IAgBLuB,IAAI,EAAE1B,qBAAqB,CAAC,KAAD,EAAQ;MAAEO,GAAF;MAAO,GAAGD;IAAV,CAAR,CAhBtB;IAiBLQ,UAAU,EAAEM,mBAjBP;IAkBLJ,mBAAmB,EAAEO;EAlBhB,CAAP;AAoBD,CA9EM","names":["getNativeElementProps","resolveShorthand","useId","Button","MenuButton","useSplitButton_unstable","props","ref","appearance","children","disabled","disabledFocusable","icon","iconPosition","menuButton","menuIcon","primaryActionButton","shape","size","baseId","menuButtonShorthand","defaultProps","required","primaryActionButtonShorthand","id","components","root"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-button\\lib\\components\\src\\packages\\react-components\\react-button\\src\\components\\SplitButton\\useSplitButton.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { Button } from '../Button/Button';\nimport { MenuButton } from '../MenuButton/MenuButton';\nimport type { SplitButtonProps, SplitButtonState } from './SplitButton.types';\n\n/**\n * Given user props, defines default props for the SplitButton and returns processed state.\n * @param props - User provided props to the SplitButton component.\n * @param ref - User provided ref to be passed to the SplitButton component.\n */\nexport const useSplitButton_unstable = (\n  props: SplitButtonProps,\n  ref: React.Ref<HTMLButtonElement | HTMLAnchorElement>,\n): SplitButtonState => {\n  const {\n    appearance = 'secondary',\n    children,\n    disabled = false,\n    disabledFocusable = false,\n    icon,\n    iconPosition = 'before',\n    menuButton,\n    menuIcon,\n    primaryActionButton,\n    shape = 'rounded',\n    size = 'medium',\n  } = props;\n\n  const baseId = useId('splitButton-');\n\n  const menuButtonShorthand = resolveShorthand(menuButton, {\n    defaultProps: {\n      appearance,\n      disabled,\n      disabledFocusable,\n      menuIcon,\n      shape,\n      size,\n    },\n    required: true,\n  });\n\n  const primaryActionButtonShorthand = resolveShorthand(primaryActionButton, {\n    defaultProps: {\n      appearance,\n      children,\n      disabled,\n      disabledFocusable,\n      icon,\n      iconPosition,\n      id: baseId + '__primaryActionButton',\n      shape,\n      size,\n    },\n    required: true,\n  });\n\n  // Resolve menu button's aria-labelledby to be labelled by the primary action button if not a label was not provided\n  // by the user.\n  if (\n    menuButtonShorthand &&\n    primaryActionButtonShorthand &&\n    !menuButtonShorthand['aria-label'] &&\n    !menuButtonShorthand['aria-labelledby']\n  ) {\n    menuButtonShorthand['aria-labelledby'] = primaryActionButtonShorthand.id;\n  }\n\n  return {\n    // Props passed at the top-level\n    appearance,\n    disabled,\n    disabledFocusable,\n    iconPosition,\n    shape,\n    size,\n\n    // Slots definition\n    components: {\n      root: 'div',\n      menuButton: MenuButton,\n      primaryActionButton: Button,\n    },\n\n    root: getNativeElementProps('div', { ref, ...props }),\n    menuButton: menuButtonShorthand,\n    primaryActionButton: primaryActionButtonShorthand,\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}