{"ast":null,"code":"const getPositionMap = rtl => ({\n  above: 'top',\n  below: 'bottom',\n  before: rtl ? 'right' : 'left',\n  after: rtl ? 'left' : 'right'\n}); // Floating UI automatically flips alignment\n// https://github.com/floating-ui/floating-ui/issues/1563\n\nconst getAlignmentMap = () => ({\n  start: 'start',\n  end: 'end',\n  top: 'start',\n  bottom: 'end',\n  center: undefined\n});\nconst shouldAlignToCenter = (p, a) => {\n  const positionedVertically = p === 'above' || p === 'below';\n  const alignedVertically = a === 'top' || a === 'bottom';\n  return positionedVertically && alignedVertically || !positionedVertically && !alignedVertically;\n};\n/**\n * Maps internal positioning values to Floating UI placement\n * @see positioningHelper.test.ts for expected placement values\n */\n\nexport const toFloatingUIPlacement = (align, position, rtl) => {\n  const alignment = shouldAlignToCenter(position, align) ? 'center' : align;\n  const computedPosition = position && getPositionMap(rtl)[position];\n  const computedAlignment = alignment && getAlignmentMap()[alignment];\n  if (computedPosition && computedAlignment) {\n    return `${computedPosition}-${computedAlignment}`;\n  }\n  return computedPosition;\n};","map":{"version":3,"mappings":"AAMA,MAAMA,cAAc,GAAIC,GAAD,KAAyD;EAC9EC,KAAK,EAAE,KADuE;EAE9EC,KAAK,EAAE,QAFuE;EAG9EC,MAAM,EAAEH,GAAG,GAAG,OAAH,GAAa,MAHsD;EAI9EI,KAAK,EAAEJ,GAAG,GAAG,MAAH,GAAY;AAJwD,CAAzD,CAAvB,C,CAOA;AACA;;AACA,MAAMK,eAAe,GAAG,OAAsD;EAC5EC,KAAK,EAAE,OADqE;EAE5EC,GAAG,EAAE,KAFuE;EAG5EC,GAAG,EAAE,OAHuE;EAI5EC,MAAM,EAAE,KAJoE;EAK5EC,MAAM,EAAEC;AALoE,CAAtD,CAAxB;AAQA,MAAMC,mBAAmB,GAAG,CAACC,CAAD,EAAeC,CAAf,KAAyC;EACnE,MAAMC,oBAAoB,GAAGF,CAAC,KAAK,OAAN,IAAiBA,CAAC,KAAK,OAApD;EACA,MAAMG,iBAAiB,GAAGF,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,QAA/C;EAEA,OAAQC,oBAAoB,IAAIC,iBAAzB,IAAgD,CAACD,oBAAD,IAAyB,CAACC,iBAAjF;AACD,CALD;AAOA;;;AAGG;;AACH,OAAO,MAAMC,qBAAqB,GAAG,CAACC,KAAD,EAAoBC,QAApB,EAAyCnB,GAAzC,KAAiF;EACpH,MAAMoB,SAAS,GAAGR,mBAAmB,CAACO,QAAD,EAAWD,KAAX,CAAnB,GAAuC,QAAvC,GAAkDA,KAApE;EAEA,MAAMG,gBAAgB,GAAGF,QAAQ,IAAIpB,cAAc,CAACC,GAAD,CAAd,CAAoBmB,QAApB,CAArC;EACA,MAAMG,iBAAiB,GAAGF,SAAS,IAAIf,eAAe,GAAGe,SAAH,CAAtD;EAEA,IAAIC,gBAAgB,IAAIC,iBAAxB,EAA2C;IACzC,OAAO,GAAGD,gBAAgB,IAAIC,iBAAiB,EAA/C;EACD;EAED,OAAOD,gBAAP;AACD,CAXM","names":["getPositionMap","rtl","above","below","before","after","getAlignmentMap","start","end","top","bottom","center","undefined","shouldAlignToCenter","p","a","positionedVertically","alignedVertically","toFloatingUIPlacement","align","position","alignment","computedPosition","computedAlignment"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-positioning\\lib\\src\\packages\\react-components\\react-positioning\\src\\utils\\toFloatingUIPlacement.ts"],"sourcesContent":["import type { Placement, Side, Alignment as FloatingUIAlignment } from '@floating-ui/dom';\nimport type { Alignment, Position } from '../types';\n\ntype PlacementPosition = Side;\ntype PlacementAlign = FloatingUIAlignment;\n\nconst getPositionMap = (rtl?: boolean): Record<Position, PlacementPosition> => ({\n  above: 'top',\n  below: 'bottom',\n  before: rtl ? 'right' : 'left',\n  after: rtl ? 'left' : 'right',\n});\n\n// Floating UI automatically flips alignment\n// https://github.com/floating-ui/floating-ui/issues/1563\nconst getAlignmentMap = (): Record<Alignment, PlacementAlign | undefined> => ({\n  start: 'start',\n  end: 'end',\n  top: 'start',\n  bottom: 'end',\n  center: undefined,\n});\n\nconst shouldAlignToCenter = (p?: Position, a?: Alignment): boolean => {\n  const positionedVertically = p === 'above' || p === 'below';\n  const alignedVertically = a === 'top' || a === 'bottom';\n\n  return (positionedVertically && alignedVertically) || (!positionedVertically && !alignedVertically);\n};\n\n/**\n * Maps internal positioning values to Floating UI placement\n * @see positioningHelper.test.ts for expected placement values\n */\nexport const toFloatingUIPlacement = (align?: Alignment, position?: Position, rtl?: boolean): Placement | undefined => {\n  const alignment = shouldAlignToCenter(position, align) ? 'center' : align;\n\n  const computedPosition = position && getPositionMap(rtl)[position];\n  const computedAlignment = alignment && getAlignmentMap()[alignment];\n\n  if (computedPosition && computedAlignment) {\n    return `${computedPosition}-${computedAlignment}` as Placement;\n  }\n\n  return computedPosition;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}