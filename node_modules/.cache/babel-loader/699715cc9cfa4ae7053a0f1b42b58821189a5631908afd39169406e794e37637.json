{"ast":null,"code":"import { getNativeElementProps } from '@fluentui/react-utilities';\n/**\n * Create the state required to render AvatarGroup.\n *\n * The returned state can be modified with hooks such as useAvatarGroupStyles_unstable,\n * before being passed to renderAvatarGroup_unstable.\n *\n * @param props - props from this instance of AvatarGroup\n * @param ref - reference to root HTMLElement of AvatarGroup\n */\n\nexport const useAvatarGroup_unstable = (props, ref) => {\n  const {\n    layout = 'spread',\n    size = defaultAvatarGroupSize\n  } = props;\n  const root = getNativeElementProps('div', {\n    role: 'group',\n    ...props,\n    ref\n  }, ['size']);\n  return {\n    layout,\n    size,\n    components: {\n      root: 'div'\n    },\n    root\n  };\n};\nexport const defaultAvatarGroupSize = 32;","map":{"version":3,"mappings":"AACA,SAASA,qBAAT,QAAsC,2BAAtC;AAGA;;;;;;;;AAQG;;AACH,OAAO,MAAMC,uBAAuB,GAAG,CAACC,KAAD,EAA0BC,GAA1B,KAA2E;EAChH,MAAM;IAAEC,MAAM,GAAG,QAAX;IAAqBC,IAAI,GAAGC;EAA5B,IAAuDJ,KAA7D;EAEA,MAAMK,IAAI,GAAGP,qBAAqB,CAChC,KADgC,EAEhC;IACEQ,IAAI,EAAE,OADR;IAEE,GAAGN,KAFL;IAGEC;EAHF,CAFgC,EAOhC,CAAC,MAAD,CAPgC,CAAlC;EAUA,OAAO;IACLC,MADK;IAELC,IAFK;IAGLI,UAAU,EAAE;MACVF,IAAI,EAAE;IADI,CAHP;IAMLA;EANK,CAAP;AAQD,CArBM;AAuBP,OAAO,MAAMD,sBAAsB,GAAG,EAA/B","names":["getNativeElementProps","useAvatarGroup_unstable","props","ref","layout","size","defaultAvatarGroupSize","root","role","components"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-avatar\\lib\\components\\src\\packages\\react-components\\react-avatar\\src\\components\\AvatarGroup\\useAvatarGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport type { AvatarGroupProps, AvatarGroupState } from './AvatarGroup.types';\n\n/**\n * Create the state required to render AvatarGroup.\n *\n * The returned state can be modified with hooks such as useAvatarGroupStyles_unstable,\n * before being passed to renderAvatarGroup_unstable.\n *\n * @param props - props from this instance of AvatarGroup\n * @param ref - reference to root HTMLElement of AvatarGroup\n */\nexport const useAvatarGroup_unstable = (props: AvatarGroupProps, ref: React.Ref<HTMLElement>): AvatarGroupState => {\n  const { layout = 'spread', size = defaultAvatarGroupSize } = props;\n\n  const root = getNativeElementProps(\n    'div',\n    {\n      role: 'group',\n      ...props,\n      ref,\n    },\n    ['size'],\n  );\n\n  return {\n    layout,\n    size,\n    components: {\n      root: 'div',\n    },\n    root,\n  };\n};\n\nexport const defaultAvatarGroupSize = 32;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}