{"ast":null,"code":"import * as React from 'react';\n/**\n * @internal\n * Context shared by all of the tooltips in the app\n */\n\nconst TooltipVisibilityContext = /*#__PURE__*/React.createContext(undefined);\nconst tooltipVisibilityContextDefaultValue = {};\n/**\n * @internal\n */\n\nexport const TooltipVisibilityProvider = TooltipVisibilityContext.Provider;\nexport function useTooltipVisibility() {\n  var _a;\n  return (_a = React.useContext(TooltipVisibilityContext)) !== null && _a !== void 0 ? _a : tooltipVisibilityContextDefaultValue;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAeA;;;AAGG;;AACH,MAAMC,wBAAwB,gBAAGD,KAAK,CAACE,aAAN,CAC/BC,SAD+B,CAAjC;AAIA,MAAMC,oCAAoC,GAAkC,EAA5E;AAEA;;AAEG;;AACH,OAAO,MAAMC,yBAAyB,GAAGJ,wBAAwB,CAACK,QAA3D;AAEP,OAAM,SAAUC,oBAAV,GAA8B;;EAClC,OAAO,WAAK,CAACC,UAAN,CAAiBP,wBAAjB,OAA0C,IAA1C,IAA0CQ,aAA1C,GAA0CA,EAA1C,GAA8CL,oCAArD;AACD","names":["React","TooltipVisibilityContext","createContext","undefined","tooltipVisibilityContextDefaultValue","TooltipVisibilityProvider","Provider","useTooltipVisibility","useContext","_a"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-shared-contexts\\lib\\src\\packages\\react-components\\react-shared-contexts\\src\\TooltipVisibilityContext\\TooltipContext.ts"],"sourcesContent":["import * as React from 'react';\n\n/**\n * The context provided by TooltipProvider\n */\nexport type TooltipVisibilityContextValue = {\n  /**\n   * When a tooltip is shown, it sets itself as the visibleTooltip.\n   * The next tooltip to become visible can use it to hide the previous tooltip immediately.\n   */\n  visibleTooltip?: {\n    hide: () => void;\n  };\n};\n\n/**\n * @internal\n * Context shared by all of the tooltips in the app\n */\nconst TooltipVisibilityContext = React.createContext<TooltipVisibilityContextValue | undefined>(\n  undefined,\n) as React.Context<TooltipVisibilityContextValue>;\n\nconst tooltipVisibilityContextDefaultValue: TooltipVisibilityContextValue = {};\n\n/**\n * @internal\n */\nexport const TooltipVisibilityProvider = TooltipVisibilityContext.Provider;\n\nexport function useTooltipVisibility(): TooltipVisibilityContextValue {\n  return React.useContext(TooltipVisibilityContext) ?? tooltipVisibilityContextDefaultValue;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}