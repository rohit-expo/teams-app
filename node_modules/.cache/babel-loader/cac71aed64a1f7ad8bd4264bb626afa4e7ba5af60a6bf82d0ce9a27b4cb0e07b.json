{"ast":null,"code":"import { getNativeElementProps, useEventCallback, useId } from '@fluentui/react-utilities';\n/**\n * Create the state required to render RadioGroup.\n *\n * The returned state can be modified with hooks such as useRadioGroupStyles_unstable,\n * before being passed to renderRadioGroup_unstable.\n *\n * @param props - props from this instance of RadioGroup\n * @param ref - reference to root HTMLElement of RadioGroup\n */\n\nexport const useRadioGroup_unstable = (props, ref) => {\n  const generatedName = useId('radiogroup-');\n  const {\n    name = generatedName,\n    value,\n    defaultValue,\n    disabled,\n    layout = 'vertical',\n    onChange,\n    required\n  } = props;\n  return {\n    layout,\n    name,\n    value,\n    defaultValue,\n    disabled,\n    required,\n    components: {\n      root: 'div'\n    },\n    root: {\n      ref,\n      role: 'radiogroup',\n      ...getNativeElementProps('div', props, /*excludedPropNames:*/\n      ['onChange', 'name']),\n      onChange: useEventCallback(ev => {\n        if (onChange && ev.target instanceof HTMLInputElement && ev.target.type === 'radio') {\n          onChange(ev, {\n            value: ev.target.value\n          });\n        }\n      })\n    }\n  };\n};","map":{"version":3,"mappings":"AACA,SAASA,qBAAT,EAAgCC,gBAAhC,EAAkDC,KAAlD,QAA+D,2BAA/D;AAGA;;;;;;;;AAQG;;AACH,OAAO,MAAMC,sBAAsB,GAAG,CAACC,KAAD,EAAyBC,GAAzB,KAA4E;EAChH,MAAMC,aAAa,GAAGJ,KAAK,CAAC,aAAD,CAA3B;EAEA,MAAM;IAAEK,IAAI,GAAGD,aAAT;IAAwBE,KAAxB;IAA+BC,YAA/B;IAA6CC,QAA7C;IAAuDC,MAAM,GAAG,UAAhE;IAA4EC,QAA5E;IAAsFC;EAAtF,IAAmGT,KAAzG;EAEA,OAAO;IACLO,MADK;IAELJ,IAFK;IAGLC,KAHK;IAILC,YAJK;IAKLC,QALK;IAMLG,QANK;IAOLC,UAAU,EAAE;MACVC,IAAI,EAAE;IADI,CAPP;IAULA,IAAI,EAAE;MACJV,GADI;MAEJW,IAAI,EAAE,YAFF;MAGJ,GAAGhB,qBAAqB,CAAC,KAAD,EAAQI,KAAR,EAAe;MAAuB,CAAC,UAAD,EAAa,MAAb,CAAtC,CAHpB;MAIJQ,QAAQ,EAAEX,gBAAgB,CAACgB,EAAE,IAAG;QAC9B,IAAIL,QAAQ,IAAIK,EAAE,CAACC,MAAH,YAAqBC,gBAAjC,IAAqDF,EAAE,CAACC,MAAH,CAAUE,IAAV,KAAmB,OAA5E,EAAqF;UACnFR,QAAQ,CAACK,EAAD,EAAK;YAAET,KAAK,EAAES,EAAE,CAACC,MAAH,CAAUV;UAAnB,CAAL,CAAR;QACD;MACF,CAJyB;IAJtB;EAVD,CAAP;AAqBD,CA1BM","names":["getNativeElementProps","useEventCallback","useId","useRadioGroup_unstable","props","ref","generatedName","name","value","defaultValue","disabled","layout","onChange","required","components","root","role","ev","target","HTMLInputElement","type"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-radio\\lib\\components\\src\\packages\\react-components\\react-radio\\src\\components\\RadioGroup\\useRadioGroup.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, useEventCallback, useId } from '@fluentui/react-utilities';\nimport { RadioGroupProps, RadioGroupState } from './RadioGroup.types';\n\n/**\n * Create the state required to render RadioGroup.\n *\n * The returned state can be modified with hooks such as useRadioGroupStyles_unstable,\n * before being passed to renderRadioGroup_unstable.\n *\n * @param props - props from this instance of RadioGroup\n * @param ref - reference to root HTMLElement of RadioGroup\n */\nexport const useRadioGroup_unstable = (props: RadioGroupProps, ref: React.Ref<HTMLDivElement>): RadioGroupState => {\n  const generatedName = useId('radiogroup-');\n\n  const { name = generatedName, value, defaultValue, disabled, layout = 'vertical', onChange, required } = props;\n\n  return {\n    layout,\n    name,\n    value,\n    defaultValue,\n    disabled,\n    required,\n    components: {\n      root: 'div',\n    },\n    root: {\n      ref,\n      role: 'radiogroup',\n      ...getNativeElementProps('div', props, /*excludedPropNames:*/ ['onChange', 'name']),\n      onChange: useEventCallback(ev => {\n        if (onChange && ev.target instanceof HTMLInputElement && ev.target.type === 'radio') {\n          onChange(ev, { value: ev.target.value });\n        }\n      }),\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}