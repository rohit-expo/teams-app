{"ast":null,"code":"import * as React from 'react';\nimport { useEventCallback } from './useEventCallback';\n/**\n * @internal\n * Utility to perform checks where a click/touch event was made outside a component\n */\n\nexport const useOnScrollOutside = options => {\n  const {\n    refs,\n    callback,\n    element,\n    disabled,\n    contains: containsProp\n  } = options;\n  const listener = useEventCallback(ev => {\n    const contains = containsProp || ((parent, child) => !!(parent === null || parent === void 0 ? void 0 : parent.contains(child)));\n    const isOutside = refs.every(ref => !contains(ref.current || null, ev.target));\n    if (isOutside && !disabled) {\n      callback(ev);\n    }\n  });\n  React.useEffect(() => {\n    if (!disabled) {\n      element === null || element === void 0 ? void 0 : element.addEventListener('wheel', listener);\n      element === null || element === void 0 ? void 0 : element.addEventListener('touchmove', listener);\n    }\n    return () => {\n      element === null || element === void 0 ? void 0 : element.removeEventListener('wheel', listener);\n      element === null || element === void 0 ? void 0 : element.removeEventListener('touchmove', listener);\n    };\n  }, [listener, element, disabled]);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAGA;;;AAGG;;AACH,OAAO,MAAMC,kBAAkB,GAAIC,OAAD,IAA8C;EAC9E,MAAM;IAAEC,IAAF;IAAQC,QAAR;IAAkBC,OAAlB;IAA2BC,QAA3B;IAAqCC,QAAQ,EAAEC;EAA/C,IAAgEN,OAAtE;EAEA,MAAMO,QAAQ,GAAGT,gBAAgB,CAAEU,EAAD,IAAgC;IAChE,MAAMH,QAAQ,GACZC,YAAY,KAAK,CAACG,MAAD,EAASC,KAAT,KAAmB,CAAC,EAACD,MAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEJ,QAAR,CAAiBK,KAAjB,CAAD,CAAzB,CADd;IAGA,MAAMC,SAAS,GAAGV,IAAI,CAACW,KAAL,CAAWC,GAAG,IAAI,CAACR,QAAQ,CAACQ,GAAG,CAACC,OAAJ,IAAe,IAAhB,EAAsBN,EAAE,CAACO,MAAzB,CAA3B,CAAlB;IACA,IAAIJ,SAAS,IAAI,CAACP,QAAlB,EAA4B;MAC1BF,QAAQ,CAACM,EAAD,CAAR;IACD;EACF,CARgC,CAAjC;EAUAX,KAAK,CAACmB,SAAN,CAAgB,MAAK;IACnB,IAAI,CAACZ,QAAL,EAAe;MACbD,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEc,gBAAT,CAA0B,OAA1B,EAAmCV,QAAnC;MACAJ,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEc,gBAAT,CAA0B,WAA1B,EAAuCV,QAAvC;IACD;IAED,OAAO,MAAK;MACVJ,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEe,mBAAT,CAA6B,OAA7B,EAAsCX,QAAtC;MACAJ,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEe,mBAAT,CAA6B,WAA7B,EAA0CX,QAA1C;IACD,CAHD;EAID,CAVD,EAUG,CAACA,QAAD,EAAWJ,OAAX,EAAoBC,QAApB,CAVH;AAWD,CAxBM","names":["React","useEventCallback","useOnScrollOutside","options","refs","callback","element","disabled","contains","containsProp","listener","ev","parent","child","isOutside","every","ref","current","target","useEffect","addEventListener","removeEventListener"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-utilities\\lib\\src\\packages\\react-components\\react-utilities\\src\\hooks\\useOnScrollOutside.ts"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback } from './useEventCallback';\nimport type { UseOnClickOrScrollOutsideOptions } from './useOnClickOutside';\n\n/**\n * @internal\n * Utility to perform checks where a click/touch event was made outside a component\n */\nexport const useOnScrollOutside = (options: UseOnClickOrScrollOutsideOptions) => {\n  const { refs, callback, element, disabled, contains: containsProp } = options;\n\n  const listener = useEventCallback((ev: MouseEvent | TouchEvent) => {\n    const contains: UseOnClickOrScrollOutsideOptions['contains'] =\n      containsProp || ((parent, child) => !!parent?.contains(child));\n\n    const isOutside = refs.every(ref => !contains(ref.current || null, ev.target as HTMLElement));\n    if (isOutside && !disabled) {\n      callback(ev);\n    }\n  });\n\n  React.useEffect(() => {\n    if (!disabled) {\n      element?.addEventListener('wheel', listener);\n      element?.addEventListener('touchmove', listener);\n    }\n\n    return () => {\n      element?.removeEventListener('wheel', listener);\n      element?.removeEventListener('touchmove', listener);\n    };\n  }, [listener, element, disabled]);\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}