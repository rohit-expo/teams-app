{"ast":null,"code":"import * as React from 'react';\nimport { __styles, mergeClasses, shorthands } from '@griffel/react';\nimport { useContextSelector } from '@fluentui/react-context-selector';\nimport { TabListContext } from '../TabList/TabListContext';\nimport { tokens } from '@fluentui/react-theme'; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nconst tabIndicatorCssVars_unstable = {\n  offsetVar: '--fui-Tab__indicator--offset',\n  scaleVar: '--fui-Tab__indicator--scale'\n};\nconst useActiveIndicatorStyles = /*#__PURE__*/__styles({\n  \"base\": {\n    \"B68tc82\": \"f1mtd64y\",\n    \"Bmxbyg5\": \"f1y7q3j9\"\n  },\n  \"animated\": {\n    \"Ba2ppi3\": \"fhwpy7i\",\n    \"F2fol1\": \"f6zz20j\",\n    \"B1dyfl9\": \"f1ai4sc1\",\n    \"B0vmy72\": \"f9qxlq5\",\n    \"u9bimw\": \"f1aql376\"\n  },\n  \"horizontal\": {\n    \"sjv3b2\": [\"fug4aj8\", \"f1i5xzg7\"],\n    \"b1kco5\": \"f1q7ujh\"\n  },\n  \"vertical\": {\n    \"sjv3b2\": \"f1hqboyk\",\n    \"b1kco5\": \"f1dxupa6\"\n  }\n}, {\n  \"d\": [\".f1mtd64y{overflow-x:visible;}\", \".f1y7q3j9{overflow-y:visible;}\", \".fhwpy7i::after{transition-property:transform;}\", \".f6zz20j::after{transition-duration:var(--durationSlow);}\", \".f1ai4sc1::after{transition-timing-function:var(--curveDecelerateMax);}\", \".fug4aj8::after{transform-origin:left;}\", \".f1i5xzg7::after{transform-origin:right;}\", \".f1q7ujh::after{-webkit-transform:translateX(var(--fui-Tab__indicator--offset)) scaleX(var(--fui-Tab__indicator--scale));-moz-transform:translateX(var(--fui-Tab__indicator--offset)) scaleX(var(--fui-Tab__indicator--scale));-ms-transform:translateX(var(--fui-Tab__indicator--offset)) scaleX(var(--fui-Tab__indicator--scale));transform:translateX(var(--fui-Tab__indicator--offset)) scaleX(var(--fui-Tab__indicator--scale));}\", \".f1hqboyk::after{transform-origin:top;}\", \".f1dxupa6::after{-webkit-transform:translateY(var(--fui-Tab__indicator--offset)) scaleY(var(--fui-Tab__indicator--scale));-moz-transform:translateY(var(--fui-Tab__indicator--offset)) scaleY(var(--fui-Tab__indicator--scale));-ms-transform:translateY(var(--fui-Tab__indicator--offset)) scaleY(var(--fui-Tab__indicator--scale));transform:translateY(var(--fui-Tab__indicator--offset)) scaleY(var(--fui-Tab__indicator--scale));}\"],\n  \"m\": [[\"@media (prefers-reduced-motion: reduce){.f9qxlq5::after{transition-property:none;}}\", {\n    \"m\": \"(prefers-reduced-motion: reduce)\"\n  }], [\"@media (prefers-reduced-motion: reduce){.f1aql376::after{transition-duration:0.01ms;}}\", {\n    \"m\": \"(prefers-reduced-motion: reduce)\"\n  }]]\n});\nconst calculateTabRect = element => {\n  var _a;\n  if (element) {\n    const parentRect = ((_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) || {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n    const tabRect = element.getBoundingClientRect();\n    return {\n      x: tabRect.x - parentRect.x,\n      y: tabRect.y - parentRect.y,\n      width: tabRect.width,\n      height: tabRect.height\n    };\n  }\n  return undefined;\n};\nconst getRegisteredTabRect = (registeredTabs, value) => {\n  var _a;\n  const element = value !== undefined && value !== null ? (_a = registeredTabs[JSON.stringify(value)]) === null || _a === void 0 ? void 0 : _a.ref.current : undefined;\n  return element ? calculateTabRect(element) : undefined;\n};\n/**\n * Adds additional styling to the active tab selection indicator to create a sliding animation.\n */\n\nexport const useTabAnimatedIndicatorStyles_unstable = state => {\n  const {\n    disabled,\n    selected,\n    vertical\n  } = state;\n  const activeIndicatorStyles = useActiveIndicatorStyles();\n  const [lastAnimatedFrom, setLastAnimatedFrom] = React.useState();\n  const [animationValues, setAnimationValues] = React.useState({\n    offset: 0,\n    scale: 1\n  });\n  const getRegisteredTabs = useContextSelector(TabListContext, ctx => ctx.getRegisteredTabs);\n  React.useEffect(() => {\n    if (lastAnimatedFrom) {\n      setAnimationValues({\n        offset: 0,\n        scale: 1\n      });\n    }\n  }, [lastAnimatedFrom]);\n  if (selected) {\n    const {\n      previousSelectedValue,\n      selectedValue,\n      registeredTabs\n    } = getRegisteredTabs();\n    const previousSelectedTabRect = getRegisteredTabRect(registeredTabs, previousSelectedValue);\n    const selectedTabRect = getRegisteredTabRect(registeredTabs, selectedValue);\n    if (selectedTabRect && previousSelectedTabRect && previousSelectedValue && lastAnimatedFrom !== previousSelectedValue) {\n      const offset = vertical ? previousSelectedTabRect.y - selectedTabRect.y : previousSelectedTabRect.x - selectedTabRect.x;\n      const scale = vertical ? previousSelectedTabRect.height / selectedTabRect.height : previousSelectedTabRect.width / selectedTabRect.width;\n      setAnimationValues({\n        offset,\n        scale\n      });\n      setLastAnimatedFrom(previousSelectedValue);\n    }\n  } else if (lastAnimatedFrom) {\n    // need to clear the last animated from so that if this tab is selected again\n    // from the same previous tab as last time, that animation still happens.\n    setLastAnimatedFrom(undefined);\n  } // do not apply any animation if the tab is disabled\n\n  if (disabled) {\n    return state;\n  } // the animation should only happen as the selection indicator returns to its\n  // original position and not when set at the previous tabs position.\n\n  const animating = animationValues.offset === 0 && animationValues.scale === 1;\n  state.root.className = mergeClasses(state.root.className, selected && activeIndicatorStyles.base, selected && animating && activeIndicatorStyles.animated, selected && (vertical ? activeIndicatorStyles.vertical : activeIndicatorStyles.horizontal));\n  const rootCssVars = {\n    [tabIndicatorCssVars_unstable.offsetVar]: `${animationValues.offset}px`,\n    [tabIndicatorCssVars_unstable.scaleVar]: `${animationValues.scale}`\n  };\n  state.root.style = {\n    ...rootCssVars,\n    ...state.root.style\n  };\n  return state;\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,mBAAqBC,YAArB,EAAmCC,UAAnC,QAAqD,gBAArD;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,MAAT,QAAuB,uBAAvB,C,CAEA;;AACA,MAAMC,4BAA4B,GAAG;EACnCC,SAAS,EAAE,8BADwB;EAEnCC,QAAQ,EAAE;AAFyB,CAArC;AAKA,MAAMC,wBAAwB,gBAAGC;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;AAAA;EAAA;EAAA;IAAA;EAAA;IAAA;EAAA;AAAA,EAAjC;AAkCA,MAAMC,gBAAgB,GAAIC,OAAD,IAAyB;;EAChD,IAAIA,OAAJ,EAAa;IACX,MAAMC,UAAU,GAAG,cAAO,CAACC,aAAR,MAAqB,IAArB,IAAqBC,aAArB,GAAqB,MAArB,GAAqBA,GAAEC,qBAAF,EAArB,KAAkD;MAAEC,CAAC,EAAE,CAAL;MAAQC,CAAC,EAAE,CAAX;MAAcC,KAAK,EAAE,CAArB;MAAwBC,MAAM,EAAE;IAAhC,CAArE;IACA,MAAMC,OAAO,GAAGT,OAAO,CAACI,qBAAR,EAAhB;IAEA,OAAO;MACLC,CAAC,EAAEI,OAAO,CAACJ,CAAR,GAAYJ,UAAU,CAACI,CADrB;MAELC,CAAC,EAAEG,OAAO,CAACH,CAAR,GAAYL,UAAU,CAACK,CAFrB;MAGLC,KAAK,EAAEE,OAAO,CAACF,KAHV;MAILC,MAAM,EAAEC,OAAO,CAACD;IAJX,CAAP;EAMD;EACD,OAAOE,SAAP;AACD,CAbD;AAeA,MAAMC,oBAAoB,GAAG,CAACC,cAAD,EAAkDC,KAAlD,KAAsE;;EACjG,MAAMb,OAAO,GACXa,KAAK,KAAKH,SAAV,IAAuBG,KAAK,KAAK,IAAjC,GAAwC,oBAAc,CAACC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAD,CAAd,MAAqC,IAArC,IAAqCV,aAArC,GAAqC,MAArC,GAAqCA,GAAEa,GAAF,CAAMC,OAAnF,GAA6FP,SAD/F;EAEA,OAAOV,OAAO,GAAGD,gBAAgB,CAACC,OAAD,CAAnB,GAA+BU,SAA7C;AACD,CAJD;AAMA;;AAEG;;AACH,OAAO,MAAMQ,sCAAsC,GAAIC,KAAD,IAA8B;EAClF,MAAM;IAAEC,QAAF;IAAYC,QAAZ;IAAsBC;EAAtB,IAAmCH,KAAzC;EAEA,MAAMI,qBAAqB,GAAG1B,wBAAwB,EAAtD;EACA,MAAM,CAAC2B,gBAAD,EAAmBC,mBAAnB,IAA0CrC,KAAK,CAACsC,QAAN,EAAhD;EACA,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCxC,KAAK,CAACsC,QAAN,CAAe;IAAEG,MAAM,EAAE,CAAV;IAAaC,KAAK,EAAE;EAApB,CAAf,CAA9C;EACA,MAAMC,iBAAiB,GAAGxC,kBAAkB,CAACC,cAAD,EAAiBwC,GAAG,IAAIA,GAAG,CAACD,iBAA5B,CAA5C;EAEA3C,KAAK,CAAC6C,SAAN,CAAgB,MAAK;IACnB,IAAIT,gBAAJ,EAAsB;MACpBI,kBAAkB,CAAC;QAAEC,MAAM,EAAE,CAAV;QAAaC,KAAK,EAAE;MAApB,CAAD,CAAlB;IACD;EACF,CAJD,EAIG,CAACN,gBAAD,CAJH;EAMA,IAAIH,QAAJ,EAAc;IACZ,MAAM;MAAEa,qBAAF;MAAyBC,aAAzB;MAAwCvB;IAAxC,IAA2DmB,iBAAiB,EAAlF;IACA,MAAMK,uBAAuB,GAAGzB,oBAAoB,CAACC,cAAD,EAAiBsB,qBAAjB,CAApD;IACA,MAAMG,eAAe,GAAG1B,oBAAoB,CAACC,cAAD,EAAiBuB,aAAjB,CAA5C;IAEA,IACEE,eAAe,IACfD,uBADA,IAEAF,qBAFA,IAGAV,gBAAgB,KAAKU,qBAJvB,EAKE;MACA,MAAML,MAAM,GAAGP,QAAQ,GACnBc,uBAAuB,CAAC9B,CAAxB,GAA4B+B,eAAe,CAAC/B,CADzB,GAEnB8B,uBAAuB,CAAC/B,CAAxB,GAA4BgC,eAAe,CAAChC,CAFhD;MAIA,MAAMyB,KAAK,GAAGR,QAAQ,GAClBc,uBAAuB,CAAC5B,MAAxB,GAAiC6B,eAAe,CAAC7B,MAD/B,GAElB4B,uBAAuB,CAAC7B,KAAxB,GAAgC8B,eAAe,CAAC9B,KAFpD;MAIAqB,kBAAkB,CAAC;QAAEC,MAAF;QAAUC;MAAV,CAAD,CAAlB;MACAL,mBAAmB,CAACS,qBAAD,CAAnB;IACD;EACF,CAtBD,MAsBO,IAAIV,gBAAJ,EAAsB;IAC3B;IACA;IACAC,mBAAmB,CAACf,SAAD,CAAnB;EACD,CAxCiF,CA0ClF;;EACA,IAAIU,QAAJ,EAAc;IACZ,OAAOD,KAAP;EACD,CA7CiF,CA+ClF;EACA;;EACA,MAAMmB,SAAS,GAAGX,eAAe,CAACE,MAAhB,KAA2B,CAA3B,IAAgCF,eAAe,CAACG,KAAhB,KAA0B,CAA5E;EAEAX,KAAK,CAACoB,IAAN,CAAWC,SAAX,GAAuBnD,YAAY,CACjC8B,KAAK,CAACoB,IAAN,CAAWC,SADsB,EAEjCnB,QAAQ,IAAIE,qBAAqB,CAACkB,IAFD,EAGjCpB,QAAQ,IAAIiB,SAAZ,IAAyBf,qBAAqB,CAACmB,QAHd,EAIjCrB,QAAQ,KAAKC,QAAQ,GAAGC,qBAAqB,CAACD,QAAzB,GAAoCC,qBAAqB,CAACoB,UAAvE,CAJyB,CAAnC;EAOA,MAAMC,WAAW,GAAG;IAClB,CAAClD,4BAA4B,CAACC,SAA9B,GAA0C,GAAGgC,eAAe,CAACE,MAAM,IADjD;IAElB,CAACnC,4BAA4B,CAACE,QAA9B,GAAyC,GAAG+B,eAAe,CAACG,KAAK;EAF/C,CAApB;EAKAX,KAAK,CAACoB,IAAN,CAAWM,KAAX,GAAmB;IACjB,GAAGD,WADc;IAEjB,GAAGzB,KAAK,CAACoB,IAAN,CAAWM;EAFG,CAAnB;EAKA,OAAO1B,KAAP;AACD,CArEM","names":["React","mergeClasses","shorthands","useContextSelector","TabListContext","tokens","tabIndicatorCssVars_unstable","offsetVar","scaleVar","useActiveIndicatorStyles","__styles","calculateTabRect","element","parentRect","parentElement","_a","getBoundingClientRect","x","y","width","height","tabRect","undefined","getRegisteredTabRect","registeredTabs","value","JSON","stringify","ref","current","useTabAnimatedIndicatorStyles_unstable","state","disabled","selected","vertical","activeIndicatorStyles","lastAnimatedFrom","setLastAnimatedFrom","useState","animationValues","setAnimationValues","offset","scale","getRegisteredTabs","ctx","useEffect","previousSelectedValue","selectedValue","previousSelectedTabRect","selectedTabRect","animating","root","className","base","animated","horizontal","rootCssVars","style"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-tabs\\lib\\components\\src\\packages\\react-components\\react-tabs\\src\\components\\Tab\\useTabAnimatedIndicator.ts"],"sourcesContent":["import * as React from 'react';\nimport type { TabState, TabValue } from './Tab.types';\n\nimport { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { useContextSelector } from '@fluentui/react-context-selector';\nimport { TabListContext } from '../TabList/TabListContext';\nimport { TabRegisterData } from '../TabList/TabList.types';\nimport { tokens } from '@fluentui/react-theme';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst tabIndicatorCssVars_unstable = {\n  offsetVar: '--fui-Tab__indicator--offset',\n  scaleVar: '--fui-Tab__indicator--scale',\n};\n\nconst useActiveIndicatorStyles = makeStyles({\n  base: {\n    // overflow is required to allow the selection indicator to animate outside the tab area.\n    ...shorthands.overflow('visible'),\n  },\n  animated: {\n    '::after': {\n      transitionProperty: 'transform',\n      transitionDuration: `${tokens.durationSlow}`,\n      transitionTimingFunction: `${tokens.curveDecelerateMax}`,\n    },\n    '@media (prefers-reduced-motion: reduce)': {\n      '::after': {\n        transitionProperty: 'none',\n        transitionDuration: '0.01ms',\n      },\n    },\n  },\n  horizontal: {\n    '::after': {\n      transformOrigin: 'left',\n      transform: `translateX(var(${tabIndicatorCssVars_unstable.offsetVar}))\n    scaleX(var(${tabIndicatorCssVars_unstable.scaleVar}))`,\n    },\n  },\n  vertical: {\n    '::after': {\n      transformOrigin: 'top',\n      transform: `translateY(var(${tabIndicatorCssVars_unstable.offsetVar}))\n        scaleY(var(${tabIndicatorCssVars_unstable.scaleVar}))`,\n    },\n  },\n});\n\nconst calculateTabRect = (element: HTMLElement) => {\n  if (element) {\n    const parentRect = element.parentElement?.getBoundingClientRect() || { x: 0, y: 0, width: 0, height: 0 };\n    const tabRect = element.getBoundingClientRect();\n\n    return {\n      x: tabRect.x - parentRect.x,\n      y: tabRect.y - parentRect.y,\n      width: tabRect.width,\n      height: tabRect.height,\n    };\n  }\n  return undefined;\n};\n\nconst getRegisteredTabRect = (registeredTabs: Record<string, TabRegisterData>, value?: TabValue) => {\n  const element =\n    value !== undefined && value !== null ? registeredTabs[JSON.stringify(value)]?.ref.current : undefined;\n  return element ? calculateTabRect(element) : undefined;\n};\n\n/**\n * Adds additional styling to the active tab selection indicator to create a sliding animation.\n */\nexport const useTabAnimatedIndicatorStyles_unstable = (state: TabState): TabState => {\n  const { disabled, selected, vertical } = state;\n\n  const activeIndicatorStyles = useActiveIndicatorStyles();\n  const [lastAnimatedFrom, setLastAnimatedFrom] = React.useState<TabValue>();\n  const [animationValues, setAnimationValues] = React.useState({ offset: 0, scale: 1 });\n  const getRegisteredTabs = useContextSelector(TabListContext, ctx => ctx.getRegisteredTabs);\n\n  React.useEffect(() => {\n    if (lastAnimatedFrom) {\n      setAnimationValues({ offset: 0, scale: 1 });\n    }\n  }, [lastAnimatedFrom]);\n\n  if (selected) {\n    const { previousSelectedValue, selectedValue, registeredTabs } = getRegisteredTabs();\n    const previousSelectedTabRect = getRegisteredTabRect(registeredTabs, previousSelectedValue);\n    const selectedTabRect = getRegisteredTabRect(registeredTabs, selectedValue);\n\n    if (\n      selectedTabRect &&\n      previousSelectedTabRect &&\n      previousSelectedValue &&\n      lastAnimatedFrom !== previousSelectedValue\n    ) {\n      const offset = vertical\n        ? previousSelectedTabRect.y - selectedTabRect.y\n        : previousSelectedTabRect.x - selectedTabRect.x;\n\n      const scale = vertical\n        ? previousSelectedTabRect.height / selectedTabRect.height\n        : previousSelectedTabRect.width / selectedTabRect.width;\n\n      setAnimationValues({ offset, scale });\n      setLastAnimatedFrom(previousSelectedValue);\n    }\n  } else if (lastAnimatedFrom) {\n    // need to clear the last animated from so that if this tab is selected again\n    // from the same previous tab as last time, that animation still happens.\n    setLastAnimatedFrom(undefined);\n  }\n\n  // do not apply any animation if the tab is disabled\n  if (disabled) {\n    return state;\n  }\n\n  // the animation should only happen as the selection indicator returns to its\n  // original position and not when set at the previous tabs position.\n  const animating = animationValues.offset === 0 && animationValues.scale === 1;\n\n  state.root.className = mergeClasses(\n    state.root.className,\n    selected && activeIndicatorStyles.base,\n    selected && animating && activeIndicatorStyles.animated,\n    selected && (vertical ? activeIndicatorStyles.vertical : activeIndicatorStyles.horizontal),\n  );\n\n  const rootCssVars = {\n    [tabIndicatorCssVars_unstable.offsetVar]: `${animationValues.offset}px`,\n    [tabIndicatorCssVars_unstable.scaleVar]: `${animationValues.scale}`,\n  };\n\n  state.root.style = {\n    ...rootCssVars,\n    ...state.root.style,\n  };\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}