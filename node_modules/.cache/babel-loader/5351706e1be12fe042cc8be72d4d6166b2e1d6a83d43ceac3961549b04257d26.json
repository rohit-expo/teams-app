{"ast":null,"code":"import * as React from 'react';\nimport { getSlots } from '@fluentui/react-utilities';\n/**\n * Render the final JSX of SpinButton\n */\n\nexport const renderSpinButton_unstable = state => {\n  // Leaving this here for now.\n  // This is the approach using react-input's Input component.\n  // It has some Typescript problems and feels hacky.\n  // const { slots, slotProps } = getSlots<SpinButtonSlots>(state);\n  // const { contentAfter, ...otherInputSlotProps } = slotProps.input as SpinButtonSlots['input'];\n  // const inputContentAfter = {\n  //   ...contentAfter,\n  //   children: (\n  //     <>\n  //       <slots.incrementButton {...slotProps.incrementButton} />\n  //       <slots.decrementButton {...slotProps.decrementButton} />\n  //     </>\n  //   ),\n  // };\n  // return (\n  //   <slots.root {...slotProps.root}>\n  //     <slots.input {...otherInputSlotProps} contentAfter={inputContentAfter}/>\n  //   </slots.root>\n  // );\n  const {\n    slots,\n    slotProps\n  } = getSlots(state);\n  return /*#__PURE__*/React.createElement(slots.root, {\n    ...slotProps.root\n  }, /*#__PURE__*/React.createElement(slots.input, {\n    ...slotProps.input\n  }), /*#__PURE__*/React.createElement(slots.incrementButton, {\n    ...slotProps.incrementButton\n  }), /*#__PURE__*/React.createElement(slots.decrementButton, {\n    ...slotProps.decrementButton\n  }));\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAGA;;AAEG;;AACH,OAAO,MAAMC,yBAAyB,GAAIC,KAAD,IAA2B;EAClE;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAuBJ,QAAQ,CAAkBE,KAAlB,CAArC;EAEA,oBACEH,oBAACI,KAAK,CAACE,IAAP,EAAW;IAAA,GAAKD,SAAS,CAACC;EAAf,CAAX,eACEN,oBAACI,KAAK,CAACG,KAAP,EAAY;IAAA,GAAKF,SAAS,CAACE;EAAf,CAAZ,CADF,eAEEP,oBAACI,KAAK,CAACI,eAAP,EAAsB;IAAA,GAAKH,SAAS,CAACG;EAAf,CAAtB,CAFF,eAGER,oBAACI,KAAK,CAACK,eAAP,EAAsB;IAAA,GAAKJ,SAAS,CAACI;EAAf,CAAtB,CAHF,CADF;AAOD,CAhCM","names":["React","getSlots","renderSpinButton_unstable","state","slots","slotProps","root","input","incrementButton","decrementButton"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-spinbutton\\lib\\components\\src\\packages\\react-components\\react-spinbutton\\src\\components\\SpinButton\\renderSpinButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getSlots } from '@fluentui/react-utilities';\nimport type { SpinButtonState, SpinButtonSlots } from './SpinButton.types';\n\n/**\n * Render the final JSX of SpinButton\n */\nexport const renderSpinButton_unstable = (state: SpinButtonState) => {\n  // Leaving this here for now.\n  // This is the approach using react-input's Input component.\n  // It has some Typescript problems and feels hacky.\n  // const { slots, slotProps } = getSlots<SpinButtonSlots>(state);\n\n  // const { contentAfter, ...otherInputSlotProps } = slotProps.input as SpinButtonSlots['input'];\n  // const inputContentAfter = {\n  //   ...contentAfter,\n  //   children: (\n  //     <>\n  //       <slots.incrementButton {...slotProps.incrementButton} />\n  //       <slots.decrementButton {...slotProps.decrementButton} />\n  //     </>\n  //   ),\n  // };\n\n  // return (\n  //   <slots.root {...slotProps.root}>\n  //     <slots.input {...otherInputSlotProps} contentAfter={inputContentAfter}/>\n  //   </slots.root>\n  // );\n\n  const { slots, slotProps } = getSlots<SpinButtonSlots>(state);\n\n  return (\n    <slots.root {...slotProps.root}>\n      <slots.input {...slotProps.input} />\n      <slots.incrementButton {...slotProps.incrementButton} />\n      <slots.decrementButton {...slotProps.decrementButton} />\n    </slots.root>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}