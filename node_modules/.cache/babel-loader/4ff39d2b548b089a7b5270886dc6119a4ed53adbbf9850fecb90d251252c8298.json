{"ast":null,"code":"import * as React from 'react';\nimport { getSlots } from '@fluentui/react-utilities';\n/**\n * Renders a Button component by passing the state defined props to the appropriate slots.\n */\n\nexport const renderButton_unstable = state => {\n  const {\n    slots,\n    slotProps\n  } = getSlots(state);\n  const {\n    iconOnly,\n    iconPosition\n  } = state;\n  return /*#__PURE__*/React.createElement(slots.root, {\n    ...slotProps.root\n  }, iconPosition !== 'after' && slots.icon && /*#__PURE__*/React.createElement(slots.icon, {\n    ...slotProps.icon\n  }), !iconOnly && state.root.children, iconPosition === 'after' && slots.icon && /*#__PURE__*/React.createElement(slots.icon, {\n    ...slotProps.icon\n  }));\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAGA;;AAEG;;AACH,OAAO,MAAMC,qBAAqB,GAAIC,KAAD,IAAuB;EAC1D,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAuBJ,QAAQ,CAAcE,KAAd,CAArC;EACA,MAAM;IAAEG,QAAF;IAAYC;EAAZ,IAA6BJ,KAAnC;EAEA,oBACEH,oBAACI,KAAK,CAACI,IAAP,EAAW;IAAA,GAAKH,SAAS,CAACG;EAAf,CAAX,EACGD,YAAY,KAAK,OAAjB,IAA4BH,KAAK,CAACK,IAAlC,iBAA0CT,oBAACI,KAAK,CAACK,IAAP,EAAW;IAAA,GAAKJ,SAAS,CAACI;EAAf,CAAX,CAD7C,EAEG,CAACH,QAAD,IAAaH,KAAK,CAACK,IAAN,CAAWE,QAF3B,EAGGH,YAAY,KAAK,OAAjB,IAA4BH,KAAK,CAACK,IAAlC,iBAA0CT,oBAACI,KAAK,CAACK,IAAP,EAAW;IAAA,GAAKJ,SAAS,CAACI;EAAf,CAAX,CAH7C,CADF;AAOD,CAXM","names":["React","getSlots","renderButton_unstable","state","slots","slotProps","iconOnly","iconPosition","root","icon","children"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-button\\lib\\components\\src\\packages\\react-components\\react-button\\src\\components\\Button\\renderButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getSlots } from '@fluentui/react-utilities';\nimport type { ButtonSlots, ButtonState } from './Button.types';\n\n/**\n * Renders a Button component by passing the state defined props to the appropriate slots.\n */\nexport const renderButton_unstable = (state: ButtonState) => {\n  const { slots, slotProps } = getSlots<ButtonSlots>(state);\n  const { iconOnly, iconPosition } = state;\n\n  return (\n    <slots.root {...slotProps.root}>\n      {iconPosition !== 'after' && slots.icon && <slots.icon {...slotProps.icon} />}\n      {!iconOnly && state.root.children}\n      {iconPosition === 'after' && slots.icon && <slots.icon {...slotProps.icon} />}\n    </slots.root>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}