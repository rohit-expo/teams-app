{"ast":null,"code":"import { createContext, useContextSelector } from '@fluentui/react-context-selector';\nexport const MenuListContext = /*#__PURE__*/createContext(undefined);\nconst menuListContextDefaultValue = {\n  checkedValues: {},\n  setFocusByFirstCharacter: () => null,\n  toggleCheckbox: () => null,\n  selectRadio: () => null,\n  hasIcons: false,\n  hasCheckmarks: false\n};\nexport const MenuListProvider = MenuListContext.Provider;\nexport const useMenuListContext_unstable = selector => useContextSelector(MenuListContext, function () {\n  let ctx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : menuListContextDefaultValue;\n  return selector(ctx);\n});","map":{"version":3,"mappings":"AACA,SAASA,aAAT,EAAwBC,kBAAxB,QAAkD,kCAAlD;AAKA,OAAO,MAAMC,eAAe,gBAAkCF,aAAa,CACzEG,SADyE,CAApE;AAIP,MAAMC,2BAA2B,GAAyB;EACxDC,aAAa,EAAE,EADyC;EAExDC,wBAAwB,EAAE,MAAM,IAFwB;EAGxDC,cAAc,EAAE,MAAM,IAHkC;EAIxDC,WAAW,EAAE,MAAM,IAJqC;EAKxDC,QAAQ,EAAE,KAL8C;EAMxDC,aAAa,EAAE;AANyC,CAA1D;AA4BA,OAAO,MAAMC,gBAAgB,GAAGT,eAAe,CAACU,QAAzC;AAEP,OAAO,MAAMC,2BAA2B,GAAQC,QAAL,IACzCb,kBAAkB,CAACC,eAAD,EAAkB;EAAA,IAACa,GAAG,uEAAGX,2BAAP;EAAA,OAAuCU,QAAQ,CAACC,GAAD,CAAjE;AAAA,EADb","names":["createContext","useContextSelector","MenuListContext","undefined","menuListContextDefaultValue","checkedValues","setFocusByFirstCharacter","toggleCheckbox","selectRadio","hasIcons","hasCheckmarks","MenuListProvider","Provider","useMenuListContext_unstable","selector","ctx"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-menu\\lib\\src\\packages\\react-components\\react-menu\\src\\contexts\\menuListContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport { createContext, useContextSelector } from '@fluentui/react-context-selector';\nimport type { ContextSelector, Context } from '@fluentui/react-context-selector';\nimport type { SelectableHandler } from '../selectable/index';\nimport type { MenuCheckedValueChangeData, MenuCheckedValueChangeEvent, MenuListProps } from '../components/index';\n\nexport const MenuListContext: Context<MenuListContextValue> = createContext<MenuListContextValue | undefined>(\n  undefined,\n) as Context<MenuListContextValue>;\n\nconst menuListContextDefaultValue: MenuListContextValue = {\n  checkedValues: {},\n  setFocusByFirstCharacter: () => null,\n  toggleCheckbox: () => null,\n  selectRadio: () => null,\n  hasIcons: false,\n  hasCheckmarks: false,\n};\n\n/**\n * Context shared between MenuList and its children components\n */\nexport type MenuListContextValue = Pick<MenuListProps, 'checkedValues' | 'hasIcons' | 'hasCheckmarks'> & {\n  setFocusByFirstCharacter?: (e: React.KeyboardEvent<HTMLElement>, itemEl: HTMLElement) => void;\n  toggleCheckbox?: SelectableHandler;\n  selectRadio?: SelectableHandler;\n  /**\n   * Callback when checked items change for value with a name\n   *\n   * @param event - React's original SyntheticEvent\n   * @param data - A data object with relevant information\n   *\n   * @deprecated this property is not used internally anymore,\n   * the signature remains just to avoid breaking changes\n   */\n  onCheckedValueChange?: (e: MenuCheckedValueChangeEvent, data: MenuCheckedValueChangeData) => void;\n};\n\nexport const MenuListProvider = MenuListContext.Provider;\n\nexport const useMenuListContext_unstable = <T,>(selector: ContextSelector<MenuListContextValue, T>) =>\n  useContextSelector(MenuListContext, (ctx = menuListContextDefaultValue) => selector(ctx));\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}