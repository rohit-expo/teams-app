{"ast":null,"code":"import { mergeClasses, __styles } from '@griffel/react';\nconst useStyles = /*#__PURE__*/__styles({\n  \"root\": {\n    \"a9b677\": \"fjw5fx7\",\n    \"Bqenvij\": \"fd461yt\",\n    \"Bcdw1i0\": \"fd7fpy0\"\n  },\n  \"rootChecked\": {\n    \"Bcdw1i0\": \"f1022m68\"\n  }\n}, {\n  \"d\": [\".fjw5fx7{width:16px;}\", \".fd461yt{height:16px;}\", \".fd7fpy0{visibility:hidden;}\", \".f1022m68{visibility:visible;}\"]\n});\n/**\n * Applies styles to a checkmark slot for selectable menu items\n *\n * @param state - should contain a `checkmark` slot\n */\n\nexport const useCheckmarkStyles_unstable = state => {\n  const styles = useStyles();\n  if (state.checkmark) {\n    state.checkmark.className = mergeClasses(styles.root, state.checked && styles.rootChecked, state.checkmark.className);\n  }\n};","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,kBAAyC,gBAAzC;AAIA,MAAMC,SAAS,gBAAGC;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;AAAA;EAAA;AAAA,EAAlB;AAWA;;;;AAIG;;AACH,OAAO,MAAMC,2BAA2B,GAAIC,KAAD,IAAsE;EAC/G,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;EACA,IAAIG,KAAK,CAACE,SAAV,EAAqB;IACnBF,KAAK,CAACE,SAAN,CAAgBC,SAAhB,GAA4BP,YAAY,CACtCK,MAAM,CAACG,IAD+B,EAEtCJ,KAAK,CAACK,OAAN,IAAiBJ,MAAM,CAACK,WAFc,EAGtCN,KAAK,CAACE,SAAN,CAAgBC,SAHsB,CAAxC;EAKD;AACF,CATM","names":["mergeClasses","useStyles","__styles","useCheckmarkStyles_unstable","state","styles","checkmark","className","root","checked","rootChecked"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-menu\\lib\\src\\packages\\react-components\\react-menu\\src\\selectable\\useCheckmarkStyles.ts"],"sourcesContent":["import { mergeClasses, makeStyles } from '@griffel/react';\nimport type { MenuItemSelectableState } from './types';\nimport type { MenuItemState } from '../components/MenuItem/MenuItem.types';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '16px',\n    height: '16px',\n    visibility: 'hidden',\n  },\n  rootChecked: {\n    visibility: 'visible',\n  },\n});\n\n/**\n * Applies styles to a checkmark slot for selectable menu items\n *\n * @param state - should contain a `checkmark` slot\n */\nexport const useCheckmarkStyles_unstable = (state: MenuItemSelectableState & Pick<MenuItemState, 'checkmark'>) => {\n  const styles = useStyles();\n  if (state.checkmark) {\n    state.checkmark.className = mergeClasses(\n      styles.root,\n      state.checked && styles.rootChecked,\n      state.checkmark.className,\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}