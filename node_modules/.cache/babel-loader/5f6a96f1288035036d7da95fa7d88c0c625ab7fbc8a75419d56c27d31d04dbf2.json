{"ast":null,"code":"import { getNativeElementProps } from '@fluentui/react-utilities';\n/**\n * Create the state required to render DialogBody.\n *\n * The returned state can be modified with hooks such as useDialogBodyStyles_unstable,\n * before being passed to renderDialogBody_unstable.\n *\n * @param props - props from this instance of DialogBody\n * @param ref - reference to root HTMLElement of DialogBody\n */\n\nexport const useDialogContent_unstable = (props, ref) => {\n  var _a;\n  return {\n    components: {\n      root: 'div'\n    },\n    root: getNativeElementProps((_a = props.as) !== null && _a !== void 0 ? _a : 'div', {\n      ref,\n      ...props\n    })\n  };\n};","map":{"version":3,"mappings":"AACA,SAASA,qBAAT,QAAsC,2BAAtC;AAGA;;;;;;;;AAQG;;AACH,OAAO,MAAMC,yBAAyB,GAAG,CACvCC,KADuC,EAEvCC,GAFuC,KAGjB;;EACtB,OAAO;IACLC,UAAU,EAAE;MACVC,IAAI,EAAE;IADI,CADP;IAILA,IAAI,EAAEL,qBAAqB,CAAC,WAAK,CAACM,EAAN,MAAQ,IAAR,IAAQC,aAAR,GAAQA,EAAR,GAAY,KAAb,EAAoB;MAC7CJ,GAD6C;MAE7C,GAAGD;IAF0C,CAApB;EAJtB,CAAP;AASD,CAbM","names":["getNativeElementProps","useDialogContent_unstable","props","ref","components","root","as","_a"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-dialog\\lib\\components\\src\\packages\\react-components\\react-dialog\\src\\components\\DialogContent\\useDialogContent.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport { DialogContentProps, DialogContentState } from './DialogContent.types';\n\n/**\n * Create the state required to render DialogBody.\n *\n * The returned state can be modified with hooks such as useDialogBodyStyles_unstable,\n * before being passed to renderDialogBody_unstable.\n *\n * @param props - props from this instance of DialogBody\n * @param ref - reference to root HTMLElement of DialogBody\n */\nexport const useDialogContent_unstable = (\n  props: DialogContentProps,\n  ref: React.Ref<HTMLElement>,\n): DialogContentState => {\n  return {\n    components: {\n      root: 'div',\n    },\n    root: getNativeElementProps(props.as ?? 'div', {\n      ref,\n      ...props,\n    }),\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}