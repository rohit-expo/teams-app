{"ast":null,"code":"import { detectOverflow } from '@floating-ui/dom';\nexport function intersecting() {\n  return {\n    name: 'intersectionObserver',\n    fn: async middlewareArguments => {\n      const floatingRect = middlewareArguments.rects.floating;\n      const altOverflow = await detectOverflow(middlewareArguments, {\n        altBoundary: true\n      });\n      const isIntersectingTop = altOverflow.top < floatingRect.height && altOverflow.top > 0;\n      const isIntersectingBottom = altOverflow.bottom < floatingRect.height && altOverflow.bottom > 0;\n      const isIntersecting = isIntersectingTop || isIntersectingBottom;\n      return {\n        data: {\n          intersecting: isIntersecting\n        }\n      };\n    }\n  };\n}","map":{"version":3,"mappings":"AACA,SAASA,cAAT,QAA+B,kBAA/B;AAEA,OAAM,SAAUC,YAAV,GAAsB;EAC1B,OAAO;IACLC,IAAI,EAAE,sBADD;IAELC,EAAE,EAAE,MAAMC,mBAAN,IAA4B;MAC9B,MAAMC,YAAY,GAAGD,mBAAmB,CAACE,KAApB,CAA0BC,QAA/C;MACA,MAAMC,WAAW,GAAG,MAAMR,cAAc,CAACI,mBAAD,EAAsB;QAAEK,WAAW,EAAE;MAAf,CAAtB,CAAxC;MAEA,MAAMC,iBAAiB,GAAGF,WAAW,CAACG,GAAZ,GAAkBN,YAAY,CAACO,MAA/B,IAAyCJ,WAAW,CAACG,GAAZ,GAAkB,CAArF;MACA,MAAME,oBAAoB,GAAGL,WAAW,CAACM,MAAZ,GAAqBT,YAAY,CAACO,MAAlC,IAA4CJ,WAAW,CAACM,MAAZ,GAAqB,CAA9F;MAEA,MAAMC,cAAc,GAAGL,iBAAiB,IAAIG,oBAA5C;MAEA,OAAO;QACLG,IAAI,EAAE;UACJf,YAAY,EAAEc;QADV;MADD,CAAP;IAKD;EAhBI,CAAP;AAkBD","names":["detectOverflow","intersecting","name","fn","middlewareArguments","floatingRect","rects","floating","altOverflow","altBoundary","isIntersectingTop","top","height","isIntersectingBottom","bottom","isIntersecting","data"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-positioning\\lib\\src\\packages\\react-components\\react-positioning\\src\\middleware\\intersecting.ts"],"sourcesContent":["import type { Middleware } from '@floating-ui/dom';\nimport { detectOverflow } from '@floating-ui/dom';\n\nexport function intersecting(): Middleware {\n  return {\n    name: 'intersectionObserver',\n    fn: async middlewareArguments => {\n      const floatingRect = middlewareArguments.rects.floating;\n      const altOverflow = await detectOverflow(middlewareArguments, { altBoundary: true });\n\n      const isIntersectingTop = altOverflow.top < floatingRect.height && altOverflow.top > 0;\n      const isIntersectingBottom = altOverflow.bottom < floatingRect.height && altOverflow.bottom > 0;\n\n      const isIntersecting = isIntersectingTop || isIntersectingBottom;\n\n      return {\n        data: {\n          intersecting: isIntersecting,\n        },\n      };\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}