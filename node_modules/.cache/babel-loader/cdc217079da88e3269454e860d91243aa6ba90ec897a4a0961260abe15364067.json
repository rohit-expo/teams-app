{"ast":null,"code":"import { DATA_POSITIONING_ESCAPED, DATA_POSITIONING_HIDDEN, DATA_POSITIONING_INTERSECTING, DATA_POSITIONING_PLACEMENT } from '../constants';\n/**\n * Writes all container element position updates after the position is computed\n */\n\nexport function writeContainerUpdates(options) {\n  var _a, _b;\n  const {\n    container,\n    placement,\n    middlewareData,\n    strategy,\n    lowPPI,\n    coordinates\n  } = options;\n  if (!container) {\n    return;\n  }\n  container.setAttribute(DATA_POSITIONING_PLACEMENT, placement);\n  container.removeAttribute(DATA_POSITIONING_INTERSECTING);\n  if (middlewareData.intersectionObserver.intersecting) {\n    container.setAttribute(DATA_POSITIONING_INTERSECTING, '');\n  }\n  container.removeAttribute(DATA_POSITIONING_ESCAPED);\n  if ((_a = middlewareData.hide) === null || _a === void 0 ? void 0 : _a.escaped) {\n    container.setAttribute(DATA_POSITIONING_ESCAPED, '');\n  }\n  container.removeAttribute(DATA_POSITIONING_HIDDEN);\n  if ((_b = middlewareData.hide) === null || _b === void 0 ? void 0 : _b.referenceHidden) {\n    container.setAttribute(DATA_POSITIONING_HIDDEN, '');\n  }\n  const x = Math.round(coordinates.x);\n  const y = Math.round(coordinates.y);\n  Object.assign(container.style, {\n    transform: lowPPI ? `translate(${x}px, ${y}px)` : `translate3d(${x}px, ${y}px, 0)`,\n    position: strategy\n  });\n}","map":{"version":3,"mappings":"AACA,SACEA,wBADF,EAEEC,uBAFF,EAGEC,6BAHF,EAIEC,0BAJF,QAKO,cALP;AAOA;;AAEG;;AACH,OAAM,SAAUC,qBAAV,CAAgCC,OAAhC,EAYL;;EACC,MAAM;IAAEC,SAAF;IAAaC,SAAb;IAAwBC,cAAxB;IAAwCC,QAAxC;IAAkDC,MAAlD;IAA0DC;EAA1D,IAA0EN,OAAhF;EACA,IAAI,CAACC,SAAL,EAAgB;IACd;EACD;EACDA,SAAS,CAACM,YAAV,CAAuBT,0BAAvB,EAAmDI,SAAnD;EACAD,SAAS,CAACO,eAAV,CAA0BX,6BAA1B;EACA,IAAIM,cAAc,CAACM,oBAAf,CAAoCC,YAAxC,EAAsD;IACpDT,SAAS,CAACM,YAAV,CAAuBV,6BAAvB,EAAsD,EAAtD;EACD;EAEDI,SAAS,CAACO,eAAV,CAA0Bb,wBAA1B;EACA,IAAI,oBAAc,CAACgB,IAAf,MAAmB,IAAnB,IAAmBC,aAAnB,GAAmB,MAAnB,GAAmBA,GAAEC,OAAzB,EAAkC;IAChCZ,SAAS,CAACM,YAAV,CAAuBZ,wBAAvB,EAAiD,EAAjD;EACD;EAEDM,SAAS,CAACO,eAAV,CAA0BZ,uBAA1B;EACA,IAAI,oBAAc,CAACe,IAAf,MAAmB,IAAnB,IAAmBG,aAAnB,GAAmB,MAAnB,GAAmBA,GAAEC,eAAzB,EAA0C;IACxCd,SAAS,CAACM,YAAV,CAAuBX,uBAAvB,EAAgD,EAAhD;EACD;EAED,MAAMoB,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWZ,WAAW,CAACU,CAAvB,CAAV;EACA,MAAMG,CAAC,GAAGF,IAAI,CAACC,KAAL,CAAWZ,WAAW,CAACa,CAAvB,CAAV;EAEAC,MAAM,CAACC,MAAP,CAAcpB,SAAS,CAACqB,KAAxB,EAA+B;IAC7BC,SAAS,EAAElB,MAAM,GAAG,aAAaW,CAAC,OAAOG,CAAC,KAAzB,GAAiC,eAAeH,CAAC,OAAOG,CAAC,QAD7C;IAE7BK,QAAQ,EAAEpB;EAFmB,CAA/B;AAID","names":["DATA_POSITIONING_ESCAPED","DATA_POSITIONING_HIDDEN","DATA_POSITIONING_INTERSECTING","DATA_POSITIONING_PLACEMENT","writeContainerUpdates","options","container","placement","middlewareData","strategy","lowPPI","coordinates","setAttribute","removeAttribute","intersectionObserver","intersecting","hide","_a","escaped","_b","referenceHidden","x","Math","round","y","Object","assign","style","transform","position"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-positioning\\lib\\src\\packages\\react-components\\react-positioning\\src\\utils\\writeContainerupdates.ts"],"sourcesContent":["import type { Placement, MiddlewareData, Strategy, Coords } from '@floating-ui/dom';\nimport {\n  DATA_POSITIONING_ESCAPED,\n  DATA_POSITIONING_HIDDEN,\n  DATA_POSITIONING_INTERSECTING,\n  DATA_POSITIONING_PLACEMENT,\n} from '../constants';\n\n/**\n * Writes all container element position updates after the position is computed\n */\nexport function writeContainerUpdates(options: {\n  container: HTMLElement | null;\n  placement: Placement;\n  middlewareData: MiddlewareData;\n  /**\n   * Layer acceleration can disable subpixel rendering which causes slightly\n   * blurry text on low PPI displays, so we want to use 2D transforms\n   * instead\n   */\n  lowPPI: boolean;\n  strategy: Strategy;\n  coordinates: Coords;\n}) {\n  const { container, placement, middlewareData, strategy, lowPPI, coordinates } = options;\n  if (!container) {\n    return;\n  }\n  container.setAttribute(DATA_POSITIONING_PLACEMENT, placement);\n  container.removeAttribute(DATA_POSITIONING_INTERSECTING);\n  if (middlewareData.intersectionObserver.intersecting) {\n    container.setAttribute(DATA_POSITIONING_INTERSECTING, '');\n  }\n\n  container.removeAttribute(DATA_POSITIONING_ESCAPED);\n  if (middlewareData.hide?.escaped) {\n    container.setAttribute(DATA_POSITIONING_ESCAPED, '');\n  }\n\n  container.removeAttribute(DATA_POSITIONING_HIDDEN);\n  if (middlewareData.hide?.referenceHidden) {\n    container.setAttribute(DATA_POSITIONING_HIDDEN, '');\n  }\n\n  const x = Math.round(coordinates.x);\n  const y = Math.round(coordinates.y);\n\n  Object.assign(container.style, {\n    transform: lowPPI ? `translate(${x}px, ${y}px)` : `translate3d(${x}px, ${y}px, 0)`,\n    position: strategy,\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}