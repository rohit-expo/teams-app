{"ast":null,"code":"import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport { useDialogContext_unstable } from '../../contexts/dialogContext';\nimport { Dismiss24Regular } from '@fluentui/react-icons';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport { DialogTrigger } from '../DialogTrigger/DialogTrigger';\nimport { useDialogTitleInternalStyles } from './useDialogTitleStyles';\n/**\n * Create the state required to render DialogTitle.\n *\n * The returned state can be modified with hooks such as useDialogTitleStyles_unstable,\n * before being passed to renderDialogTitle_unstable.\n *\n * @param props - props from this instance of DialogTitle\n * @param ref - reference to root HTMLElement of DialogTitle\n */\n\nexport const useDialogTitle_unstable = (props, ref) => {\n  const {\n    as,\n    action\n  } = props;\n  const modalType = useDialogContext_unstable(ctx => ctx.modalType);\n  const internalStyles = useDialogTitleInternalStyles();\n  return {\n    components: {\n      root: 'div',\n      action: 'div'\n    },\n    root: getNativeElementProps(as !== null && as !== void 0 ? as : 'div', {\n      ref,\n      id: useDialogContext_unstable(ctx => ctx.dialogTitleId),\n      ...props\n    }),\n    action: resolveShorthand(action, {\n      required: modalType === 'non-modal',\n      defaultProps: {\n        children: /*#__PURE__*/React.createElement(DialogTrigger, {\n          disableButtonEnhancement: true,\n          action: \"close\"\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: internalStyles.button,\n          \"aria-label\": \"close\"\n        }, /*#__PURE__*/React.createElement(Dismiss24Regular, null)))\n      }\n    })\n  };\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,qBAAT,QAAsC,2BAAtC;AAEA,SAASC,yBAAT,QAA0C,8BAA1C;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,4BAAT,QAA6C,wBAA7C;AAEA;;;;;;;;AAQG;;AACH,OAAO,MAAMC,uBAAuB,GAAG,CAACC,KAAD,EAA0BC,GAA1B,KAA2E;EAChH,MAAM;IAAEC,EAAF;IAAMC;EAAN,IAAiBH,KAAvB;EACA,MAAMI,SAAS,GAAGV,yBAAyB,CAACW,GAAG,IAAIA,GAAG,CAACD,SAAZ,CAA3C;EACA,MAAME,cAAc,GAAGR,4BAA4B,EAAnD;EAEA,OAAO;IACLS,UAAU,EAAE;MACVC,IAAI,EAAE,KADI;MAEVL,MAAM,EAAE;IAFE,CADP;IAKLK,IAAI,EAAEf,qBAAqB,CAACS,EAAE,SAAF,MAAE,WAAF,QAAM,KAAP,EAAc;MACvCD,GADuC;MAEvCQ,EAAE,EAAEf,yBAAyB,CAACW,GAAG,IAAIA,GAAG,CAACK,aAAZ,CAFU;MAGvC,GAAGV;IAHoC,CAAd,CALtB;IAULG,MAAM,EAAEP,gBAAgB,CAACO,MAAD,EAAS;MAC/BQ,QAAQ,EAAEP,SAAS,KAAK,WADO;MAE/BQ,YAAY,EAAE;QACZC,QAAQ,eACNrB,oBAACK,aAAD,EAAc;UAACiB,wBAAwB,MAAzB;UAA0BX,MAAM,EAAC;QAAjC,CAAd,eACEX;UACEuB,SAAS,EAAET,cAAc,CAACU,MAD5B;UACkC,cAErB;QAHb,gBAKExB,oBAACG,gBAAD,EAAiB,IAAjB,CALF,CADF;MAFU;IAFiB,CAAT;EAVnB,CAAP;AA2BD,CAhCM","names":["React","getNativeElementProps","useDialogContext_unstable","Dismiss24Regular","resolveShorthand","DialogTrigger","useDialogTitleInternalStyles","useDialogTitle_unstable","props","ref","as","action","modalType","ctx","internalStyles","components","root","id","dialogTitleId","required","defaultProps","children","disableButtonEnhancement","className","button"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-dialog\\lib\\components\\src\\packages\\react-components\\react-dialog\\src\\components\\DialogTitle\\useDialogTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport type { DialogTitleProps, DialogTitleState } from './DialogTitle.types';\nimport { useDialogContext_unstable } from '../../contexts/dialogContext';\nimport { Dismiss24Regular } from '@fluentui/react-icons';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport { DialogTrigger } from '../DialogTrigger/DialogTrigger';\nimport { useDialogTitleInternalStyles } from './useDialogTitleStyles';\n\n/**\n * Create the state required to render DialogTitle.\n *\n * The returned state can be modified with hooks such as useDialogTitleStyles_unstable,\n * before being passed to renderDialogTitle_unstable.\n *\n * @param props - props from this instance of DialogTitle\n * @param ref - reference to root HTMLElement of DialogTitle\n */\nexport const useDialogTitle_unstable = (props: DialogTitleProps, ref: React.Ref<HTMLElement>): DialogTitleState => {\n  const { as, action } = props;\n  const modalType = useDialogContext_unstable(ctx => ctx.modalType);\n  const internalStyles = useDialogTitleInternalStyles();\n\n  return {\n    components: {\n      root: 'div',\n      action: 'div',\n    },\n    root: getNativeElementProps(as ?? 'div', {\n      ref,\n      id: useDialogContext_unstable(ctx => ctx.dialogTitleId),\n      ...props,\n    }),\n    action: resolveShorthand(action, {\n      required: modalType === 'non-modal',\n      defaultProps: {\n        children: (\n          <DialogTrigger disableButtonEnhancement action=\"close\">\n            <button\n              className={internalStyles.button}\n              // TODO: find a better way to add internal labels\n              aria-label=\"close\"\n            >\n              <Dismiss24Regular />\n            </button>\n          </DialogTrigger>\n        ),\n      },\n    }),\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}