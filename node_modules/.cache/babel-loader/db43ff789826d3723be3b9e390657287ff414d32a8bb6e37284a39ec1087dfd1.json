{"ast":null,"code":"import { getVirtualParent } from './getVirtualParent';\n/**\n * Gets the element which is the parent of a given element.\n * This method prefers the virtual parent over real DOM parent when present.\n */\n\nexport function getParent(child) {\n  return child && getVirtualParent(child) || (child === null || child === void 0 ? void 0 : child.parentNode);\n}","map":{"version":3,"mappings":"AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AAEA;;;AAGG;;AACH,OAAM,SAAUC,SAAV,CAAoBC,KAApB,EAA6C;EACjD,OAAQA,KAAK,IAAIF,gBAAgB,CAACE,KAAD,CAA1B,KAAuCA,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEC,UAA9C,CAAP;AACD","names":["getVirtualParent","getParent","child","parentNode"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-portal\\lib\\src\\packages\\react-components\\react-portal\\src\\virtualParent\\getParent.ts"],"sourcesContent":["import { getVirtualParent } from './getVirtualParent';\n\n/**\n * Gets the element which is the parent of a given element.\n * This method prefers the virtual parent over real DOM parent when present.\n */\nexport function getParent(child: HTMLElement | null): HTMLElement | null {\n  return (child && getVirtualParent(child)) || (child?.parentNode as HTMLElement | null);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}