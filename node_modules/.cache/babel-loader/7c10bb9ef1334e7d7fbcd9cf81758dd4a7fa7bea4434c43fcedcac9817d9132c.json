{"ast":null,"code":"import { getTabsterAttribute } from 'tabster';\nimport { useTabster } from './useTabster';\n/**\n * @internal\n * Hook that returns tabster attributes while ensuring tabster exists\n */\n\nexport const useTabsterAttributes = props => {\n  // A tabster instance is not necessary to generate tabster attributes\n  // but calling the hook will ensure that a tabster instance exists internally and avoids consumers doing the same\n  useTabster();\n  return getTabsterAttribute(props);\n};","map":{"version":3,"mappings":"AAAA,SAASA,mBAAT,QAA2D,SAA3D;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA;;;AAGG;;AACH,OAAO,MAAMC,oBAAoB,GAAIC,KAAD,IAAgF;EAClH;EACA;EACAF,UAAU;EAEV,OAAOD,mBAAmB,CAACG,KAAD,CAA1B;AACD,CANM","names":["getTabsterAttribute","useTabster","useTabsterAttributes","props"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-tabster\\lib\\src\\packages\\react-components\\react-tabster\\src\\hooks\\useTabsterAttributes.ts"],"sourcesContent":["import { getTabsterAttribute, Types as TabsterTypes } from 'tabster';\nimport { useTabster } from './useTabster';\n\n/**\n * @internal\n * Hook that returns tabster attributes while ensuring tabster exists\n */\nexport const useTabsterAttributes = (props: TabsterTypes.TabsterAttributeProps): TabsterTypes.TabsterDOMAttribute => {\n  // A tabster instance is not necessary to generate tabster attributes\n  // but calling the hook will ensure that a tabster instance exists internally and avoids consumers doing the same\n  useTabster();\n\n  return getTabsterAttribute(props);\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}