{"ast":null,"code":"/**\n * Calculates a number's precision based on the number of trailing\n * zeros if the number does not have a decimal indicated by a negative\n * precision. Otherwise, it calculates the number of digits after\n * the decimal point indicated by a positive precision.\n * @param value - the value to determine the precision of\n */\nexport function calculatePrecision(value) {\n  /**\n   * Group 1:\n   * [1-9]([0]+$) matches trailing zeros\n   * Group 2:\n   * \\.([0-9]*) matches all digits after a decimal point.\n   */\n  const groups = /[1-9]([0]+$)|\\.([0-9]*)/.exec(String(value));\n  if (!groups) {\n    return 0;\n  }\n  if (groups[1]) {\n    return -groups[1].length;\n  }\n  if (groups[2]) {\n    return groups[2].length;\n  }\n  return 0;\n}\n/**\n * Rounds a number to a certain level of precision. Accepts negative precision.\n * @param value - The value that is being rounded.\n * @param precision - The number of decimal places to round the number to\n */\n\nexport function precisionRound(value, precision) {\n  let base = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n  const exp = Math.pow(base, precision);\n  return Math.round(value * exp) / exp;\n}","map":{"version":3,"mappings":"AAAA;;;;;;AAMG;AACH,OAAM,SAAUA,kBAAV,CAA6BC,KAA7B,EAAmD;EACvD;;;;;AAKG;EACH,MAAMC,MAAM,GAAG,0BAA0BC,IAA1B,CAA+BC,MAAM,CAACH,KAAD,CAArC,CAAf;EACA,IAAI,CAACC,MAAL,EAAa;IACX,OAAO,CAAP;EACD;EACD,IAAIA,MAAM,CAAC,CAAD,CAAV,EAAe;IACb,OAAO,CAACA,MAAM,CAAC,CAAD,CAAN,CAAUG,MAAlB;EACD;EACD,IAAIH,MAAM,CAAC,CAAD,CAAV,EAAe;IACb,OAAOA,MAAM,CAAC,CAAD,CAAN,CAAUG,MAAjB;EACD;EACD,OAAO,CAAP;AACD;AAED;;;;AAIG;;AACH,OAAM,SAAUC,cAAV,CAAyBL,KAAzB,EAAwCM,SAAxC,EAA4E;EAAA,IAAjBC,2EAAe,EAA1E;EACJ,MAAMC,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASH,IAAT,EAAeD,SAAf,CAAZ;EACA,OAAOG,IAAI,CAACE,KAAL,CAAWX,KAAK,GAAGQ,GAAnB,IAA0BA,GAAjC;AACD","names":["calculatePrecision","value","groups","exec","String","length","precisionRound","precision","base","exp","Math","pow","round"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-spinbutton\\lib\\src\\packages\\react-components\\react-spinbutton\\src\\utils\\precision.ts"],"sourcesContent":["/**\n * Calculates a number's precision based on the number of trailing\n * zeros if the number does not have a decimal indicated by a negative\n * precision. Otherwise, it calculates the number of digits after\n * the decimal point indicated by a positive precision.\n * @param value - the value to determine the precision of\n */\nexport function calculatePrecision(value: number | string): number {\n  /**\n   * Group 1:\n   * [1-9]([0]+$) matches trailing zeros\n   * Group 2:\n   * \\.([0-9]*) matches all digits after a decimal point.\n   */\n  const groups = /[1-9]([0]+$)|\\.([0-9]*)/.exec(String(value));\n  if (!groups) {\n    return 0;\n  }\n  if (groups[1]) {\n    return -groups[1].length;\n  }\n  if (groups[2]) {\n    return groups[2].length;\n  }\n  return 0;\n}\n\n/**\n * Rounds a number to a certain level of precision. Accepts negative precision.\n * @param value - The value that is being rounded.\n * @param precision - The number of decimal places to round the number to\n */\nexport function precisionRound(value: number, precision: number, base: number = 10): number {\n  const exp = Math.pow(base, precision);\n  return Math.round(value * exp) / exp;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}