{"ast":null,"code":"import { createContext, useContextSelector } from '@fluentui/react-context-selector';\n/**\n * AvatarGroupContext is provided by AvatarGroup and AvatarGroupPopover. It's consumed by AvatarGroupItem to determine\n * default values of some props.\n */\n\nexport const AvatarGroupContext = /*#__PURE__*/createContext(undefined);\nconst avatarGroupContextDefaultValue = {};\nexport const AvatarGroupProvider = AvatarGroupContext.Provider;\nexport const useAvatarGroupContext_unstable = selector => useContextSelector(AvatarGroupContext, function () {\n  let ctx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : avatarGroupContextDefaultValue;\n  return selector(ctx);\n});","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,EAAwBC,kBAAxB,QAAmE,kCAAnE;AAIA;;;AAGG;;AACH,OAAO,MAAMC,kBAAkB,gBAAqCF,aAAa,CAC/EG,SAD+E,CAA1E;AAIP,MAAMC,8BAA8B,GAA4B,EAAhE;AAEA,OAAO,MAAMC,mBAAmB,GAAGH,kBAAkB,CAACI,QAA/C;AAEP,OAAO,MAAMC,8BAA8B,GAAOC,QAAJ,IAC5CP,kBAAkB,CAACC,kBAAD,EAAqB;EAAA,IAACO,GAAG,uEAAGL,8BAAP;EAAA,OAA0CI,QAAQ,CAACC,GAAD,CAAvE;AAAA,EADb","names":["createContext","useContextSelector","AvatarGroupContext","undefined","avatarGroupContextDefaultValue","AvatarGroupProvider","Provider","useAvatarGroupContext_unstable","selector","ctx"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-avatar\\lib\\src\\packages\\react-components\\react-avatar\\src\\contexts\\AvatarGroupContext.ts"],"sourcesContent":["import { createContext, useContextSelector, ContextSelector } from '@fluentui/react-context-selector';\nimport type { Context } from '@fluentui/react-context-selector';\nimport type { AvatarGroupContextValue } from '../AvatarGroup';\n\n/**\n * AvatarGroupContext is provided by AvatarGroup and AvatarGroupPopover. It's consumed by AvatarGroupItem to determine\n * default values of some props.\n */\nexport const AvatarGroupContext: Context<AvatarGroupContextValue> = createContext<AvatarGroupContextValue | undefined>(\n  undefined,\n) as Context<AvatarGroupContextValue>;\n\nconst avatarGroupContextDefaultValue: AvatarGroupContextValue = {};\n\nexport const AvatarGroupProvider = AvatarGroupContext.Provider;\n\nexport const useAvatarGroupContext_unstable = <T>(selector: ContextSelector<AvatarGroupContextValue, T>): T =>\n  useContextSelector(AvatarGroupContext, (ctx = avatarGroupContextDefaultValue) => selector(ctx));\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}