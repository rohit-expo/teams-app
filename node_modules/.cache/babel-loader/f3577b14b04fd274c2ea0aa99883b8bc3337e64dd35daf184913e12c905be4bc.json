{"ast":null,"code":"import { __styles, mergeClasses, shorthands } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nexport const textClassNames = {\n  root: 'fui-Text'\n};\n/**\n * Styles for the root slot\n */\n\nconst useStyles = /*#__PURE__*/__styles({\n  \"root\": {\n    \"Bahqtrf\": \"fk6fouc\",\n    \"Be2twd7\": \"fkhj508\",\n    \"Bg96gwp\": \"f1i3iumi\",\n    \"Bhrd7zp\": \"figsok6\",\n    \"fsow6f\": \"fpgzoln\",\n    \"mc9l5x\": \"f1w7gpdv\",\n    \"Huce71\": \"f6juhto\",\n    \"B68tc82\": \"f1mtd64y\",\n    \"Bmxbyg5\": \"f1y7q3j9\",\n    \"ygn44y\": \"f2jf649\"\n  },\n  \"nowrap\": {\n    \"Huce71\": \"fz5stix\",\n    \"B68tc82\": \"f1p9o1ba\",\n    \"Bmxbyg5\": \"f1sil6mw\"\n  },\n  \"truncate\": {\n    \"ygn44y\": \"f1cmbuwj\"\n  },\n  \"block\": {\n    \"mc9l5x\": \"ftgm304\"\n  },\n  \"italic\": {\n    \"B80ckks\": \"f1j4dglz\"\n  },\n  \"underline\": {\n    \"w71qe1\": \"f13mvf36\"\n  },\n  \"strikethrough\": {\n    \"w71qe1\": \"fv5q2k7\"\n  },\n  \"strikethroughUnderline\": {\n    \"w71qe1\": \"f1drk4o6\"\n  },\n  \"base100\": {\n    \"Be2twd7\": \"f13mqy1h\",\n    \"Bg96gwp\": \"fcpl73t\"\n  },\n  \"base200\": {\n    \"Be2twd7\": \"fy9rknc\",\n    \"Bg96gwp\": \"fwrc4pm\"\n  },\n  \"base400\": {\n    \"Be2twd7\": \"fod5ikn\",\n    \"Bg96gwp\": \"faaz57k\"\n  },\n  \"base500\": {\n    \"Be2twd7\": \"f1pp30po\",\n    \"Bg96gwp\": \"f106mvju\"\n  },\n  \"base600\": {\n    \"Be2twd7\": \"f1x0m3f5\",\n    \"Bg96gwp\": \"fb86gi6\"\n  },\n  \"hero700\": {\n    \"Be2twd7\": \"fojgt09\",\n    \"Bg96gwp\": \"fcen8rp\"\n  },\n  \"hero800\": {\n    \"Be2twd7\": \"fccw675\",\n    \"Bg96gwp\": \"f1ebx5kk\"\n  },\n  \"hero900\": {\n    \"Be2twd7\": \"f15afnhw\",\n    \"Bg96gwp\": \"fr3w3wp\"\n  },\n  \"hero1000\": {\n    \"Be2twd7\": \"fpyltcb\",\n    \"Bg96gwp\": \"f1ivgwrt\"\n  },\n  \"monospace\": {\n    \"Bahqtrf\": \"f1fedwem\"\n  },\n  \"numeric\": {\n    \"Bahqtrf\": \"f1uq0ln5\"\n  },\n  \"weightMedium\": {\n    \"Bhrd7zp\": \"fdj6btp\"\n  },\n  \"weightSemibold\": {\n    \"Bhrd7zp\": \"fl43uef\"\n  },\n  \"weightBold\": {\n    \"Bhrd7zp\": \"flh3ekv\"\n  },\n  \"alignCenter\": {\n    \"fsow6f\": \"f17mccla\"\n  },\n  \"alignEnd\": {\n    \"fsow6f\": \"f12ymhq5\"\n  },\n  \"alignJustify\": {\n    \"fsow6f\": \"f1j59e10\"\n  }\n}, {\n  \"d\": [\".fk6fouc{font-family:var(--fontFamilyBase);}\", \".fkhj508{font-size:var(--fontSizeBase300);}\", \".f1i3iumi{line-height:var(--lineHeightBase300);}\", \".figsok6{font-weight:var(--fontWeightRegular);}\", \".fpgzoln{text-align:start;}\", \".f1w7gpdv{display:inline;}\", \".f6juhto{white-space:normal;}\", \".f1mtd64y{overflow-x:visible;}\", \".f1y7q3j9{overflow-y:visible;}\", \".f2jf649{text-overflow:clip;}\", \".fz5stix{white-space:nowrap;}\", \".f1p9o1ba{overflow-x:hidden;}\", \".f1sil6mw{overflow-y:hidden;}\", \".f1cmbuwj{text-overflow:ellipsis;}\", \".ftgm304{display:block;}\", \".f1j4dglz{font-style:italic;}\", \".f13mvf36{text-decoration-line:underline;}\", \".fv5q2k7{text-decoration-line:line-through;}\", \".f1drk4o6{text-decoration-line:line-through underline;}\", \".f13mqy1h{font-size:var(--fontSizeBase100);}\", \".fcpl73t{line-height:var(--lineHeightBase100);}\", \".fy9rknc{font-size:var(--fontSizeBase200);}\", \".fwrc4pm{line-height:var(--lineHeightBase200);}\", \".fod5ikn{font-size:var(--fontSizeBase400);}\", \".faaz57k{line-height:var(--lineHeightBase400);}\", \".f1pp30po{font-size:var(--fontSizeBase500);}\", \".f106mvju{line-height:var(--lineHeightBase500);}\", \".f1x0m3f5{font-size:var(--fontSizeBase600);}\", \".fb86gi6{line-height:var(--lineHeightBase600);}\", \".fojgt09{font-size:var(--fontSizeHero700);}\", \".fcen8rp{line-height:var(--lineHeightHero700);}\", \".fccw675{font-size:var(--fontSizeHero800);}\", \".f1ebx5kk{line-height:var(--lineHeightHero800);}\", \".f15afnhw{font-size:var(--fontSizeHero900);}\", \".fr3w3wp{line-height:var(--lineHeightHero900);}\", \".fpyltcb{font-size:var(--fontSizeHero1000);}\", \".f1ivgwrt{line-height:var(--lineHeightHero1000);}\", \".f1fedwem{font-family:var(--fontFamilyMonospace);}\", \".f1uq0ln5{font-family:var(--fontFamilyNumeric);}\", \".fdj6btp{font-weight:var(--fontWeightMedium);}\", \".fl43uef{font-weight:var(--fontWeightSemibold);}\", \".flh3ekv{font-weight:var(--fontWeightBold);}\", \".f17mccla{text-align:center;}\", \".f12ymhq5{text-align:end;}\", \".f1j59e10{text-align:justify;}\"]\n});\n/**\n * Apply styling to the Text slots based on the state\n */\n\nexport const useTextStyles_unstable = state => {\n  const styles = useStyles();\n  state.root.className = mergeClasses(textClassNames.root, styles.root, state.wrap === false && styles.nowrap, state.truncate && styles.truncate, state.block && styles.block, state.italic && styles.italic, state.underline && styles.underline, state.strikethrough && styles.strikethrough, state.underline && state.strikethrough && styles.strikethroughUnderline, state.size === 100 && styles.base100, state.size === 200 && styles.base200, state.size === 400 && styles.base400, state.size === 500 && styles.base500, state.size === 600 && styles.base600, state.size === 700 && styles.hero700, state.size === 800 && styles.hero800, state.size === 900 && styles.hero900, state.size === 1000 && styles.hero1000, state.font === 'monospace' && styles.monospace, state.font === 'numeric' && styles.numeric, state.weight === 'medium' && styles.weightMedium, state.weight === 'semibold' && styles.weightSemibold, state.weight === 'bold' && styles.weightBold, state.align === 'center' && styles.alignCenter, state.align === 'end' && styles.alignEnd, state.align === 'justify' && styles.alignJustify, state.root.className);\n  return state;\n};","map":{"version":3,"mappings":"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","names":["mergeClasses","shorthands","tokens","textClassNames","root","useStyles","__styles","useTextStyles_unstable","state","styles","className","wrap","nowrap","truncate","block","italic","underline","strikethrough","strikethroughUnderline","size","base100","base200","base400","base500","base600","hero700","hero800","hero900","hero1000","font","monospace","numeric","weight","weightMedium","weightSemibold","weightBold","align","alignCenter","alignEnd","alignJustify"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-text\\lib\\components\\src\\packages\\react-components\\react-text\\src\\components\\Text\\useTextStyles.ts"],"sourcesContent":["import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport type { TextSlots, TextState } from './Text.types';\nimport { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const textClassNames: SlotClassNames<TextSlots> = {\n  root: 'fui-Text',\n};\n\n/**\n * Styles for the root slot\n */\nconst useStyles = makeStyles({\n  root: {\n    fontFamily: tokens.fontFamilyBase,\n    fontSize: tokens.fontSizeBase300,\n    lineHeight: tokens.lineHeightBase300,\n    fontWeight: tokens.fontWeightRegular,\n    textAlign: 'start',\n    display: 'inline',\n    whiteSpace: 'normal',\n    ...shorthands.overflow('visible'),\n    textOverflow: 'clip',\n  },\n  nowrap: {\n    whiteSpace: 'nowrap',\n    ...shorthands.overflow('hidden'),\n  },\n  truncate: {\n    textOverflow: 'ellipsis',\n  },\n  block: {\n    display: 'block',\n  },\n  italic: {\n    fontStyle: 'italic',\n  },\n  underline: {\n    textDecorationLine: 'underline',\n  },\n  strikethrough: {\n    textDecorationLine: 'line-through',\n  },\n  strikethroughUnderline: {\n    textDecorationLine: 'line-through underline',\n  },\n  base100: {\n    fontSize: tokens.fontSizeBase100,\n    lineHeight: tokens.lineHeightBase100,\n  },\n  base200: {\n    fontSize: tokens.fontSizeBase200,\n    lineHeight: tokens.lineHeightBase200,\n  },\n  base400: {\n    fontSize: tokens.fontSizeBase400,\n    lineHeight: tokens.lineHeightBase400,\n  },\n  base500: {\n    fontSize: tokens.fontSizeBase500,\n    lineHeight: tokens.lineHeightBase500,\n  },\n  base600: {\n    fontSize: tokens.fontSizeBase600,\n    lineHeight: tokens.lineHeightBase600,\n  },\n  hero700: {\n    fontSize: tokens.fontSizeHero700,\n    lineHeight: tokens.lineHeightHero700,\n  },\n  hero800: {\n    fontSize: tokens.fontSizeHero800,\n    lineHeight: tokens.lineHeightHero800,\n  },\n  hero900: {\n    fontSize: tokens.fontSizeHero900,\n    lineHeight: tokens.lineHeightHero900,\n  },\n  hero1000: {\n    fontSize: tokens.fontSizeHero1000,\n    lineHeight: tokens.lineHeightHero1000,\n  },\n  monospace: {\n    fontFamily: tokens.fontFamilyMonospace,\n  },\n  numeric: {\n    fontFamily: tokens.fontFamilyNumeric,\n  },\n  weightMedium: {\n    fontWeight: tokens.fontWeightMedium,\n  },\n  weightSemibold: {\n    fontWeight: tokens.fontWeightSemibold,\n  },\n  weightBold: {\n    fontWeight: tokens.fontWeightBold,\n  },\n  alignCenter: {\n    textAlign: 'center',\n  },\n  alignEnd: {\n    textAlign: 'end',\n  },\n  alignJustify: {\n    textAlign: 'justify',\n  },\n});\n\n/**\n * Apply styling to the Text slots based on the state\n */\nexport const useTextStyles_unstable = (state: TextState): TextState => {\n  const styles = useStyles();\n\n  state.root.className = mergeClasses(\n    textClassNames.root,\n    styles.root,\n    state.wrap === false && styles.nowrap,\n    state.truncate && styles.truncate,\n    state.block && styles.block,\n    state.italic && styles.italic,\n    state.underline && styles.underline,\n    state.strikethrough && styles.strikethrough,\n    state.underline && state.strikethrough && styles.strikethroughUnderline,\n    state.size === 100 && styles.base100,\n    state.size === 200 && styles.base200,\n    state.size === 400 && styles.base400,\n    state.size === 500 && styles.base500,\n    state.size === 600 && styles.base600,\n    state.size === 700 && styles.hero700,\n    state.size === 800 && styles.hero800,\n    state.size === 900 && styles.hero900,\n    state.size === 1000 && styles.hero1000,\n    state.font === 'monospace' && styles.monospace,\n    state.font === 'numeric' && styles.numeric,\n    state.weight === 'medium' && styles.weightMedium,\n    state.weight === 'semibold' && styles.weightSemibold,\n    state.weight === 'bold' && styles.weightBold,\n    state.align === 'center' && styles.alignCenter,\n    state.align === 'end' && styles.alignEnd,\n    state.align === 'justify' && styles.alignJustify,\n    state.root.className,\n  );\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}