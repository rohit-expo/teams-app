{"ast":null,"code":"var _jsxFileName = \"D:\\\\teams-app\\\\qlik2\\\\Microsoft-Teams-Samples\\\\samples\\\\tab-personal-sso-quickstart\\\\js\\\\src\\\\components\\\\ConsentPopup.js\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport React from 'react';\nimport * as microsoftTeams from \"@microsoft/teams-js\";\nimport * as msal from \"@azure/msal-browser\";\n\n/**\r\n * This component is loaded to grant consent for graph permissions.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ConsentPopup extends React.Component {\n  componentDidMount() {\n    microsoftTeams.app.initialize().then(() => {\n      // Get the tab context, and use the information to navigate to Azure AD login page\n      microsoftTeams.app.getContext().then(async context => {\n        var currentURL = new URL(window.location);\n        var scope = \"User.Read email openid profile offline_access\";\n        var loginHint = context.user.loginHint;\n        const msalConfig = {\n          auth: {\n            clientId: process.env.REACT_APP_AZURE_APP_REGISTRATION_ID,\n            authority: `https://login.microsoftonline.com/${context.user.tenant.id}`,\n            navigateToLoginRequestUrl: false\n          },\n          cache: {\n            cacheLocation: \"sessionStorage\"\n          }\n        };\n        const msalInstance = new msal.PublicClientApplication(msalConfig);\n        const scopesArray = scope.split(\" \");\n        const scopesRequest = {\n          scopes: scopesArray,\n          redirectUri: window.location.origin + `/auth-end`,\n          loginHint: loginHint\n        };\n        await msalInstance.loginRedirect(scopesRequest);\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redirecting to consent page.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default ConsentPopup;","map":{"version":3,"names":["React","microsoftTeams","msal","ConsentPopup","Component","componentDidMount","app","initialize","then","getContext","context","currentURL","URL","window","location","scope","loginHint","user","msalConfig","auth","clientId","process","env","REACT_APP_AZURE_APP_REGISTRATION_ID","authority","tenant","id","navigateToLoginRequestUrl","cache","cacheLocation","msalInstance","PublicClientApplication","scopesArray","split","scopesRequest","scopes","redirectUri","origin","loginRedirect","render"],"sources":["D:/teams-app/qlik2/Microsoft-Teams-Samples/samples/tab-personal-sso-quickstart/js/src/components/ConsentPopup.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport React from 'react';\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport * as msal from \"@azure/msal-browser\";\r\n\r\n/**\r\n * This component is loaded to grant consent for graph permissions.\r\n */\r\nclass ConsentPopup extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        microsoftTeams.app.initialize().then(() => {\r\n            // Get the tab context, and use the information to navigate to Azure AD login page\r\n            microsoftTeams.app.getContext().then(async (context) => {\r\n                var currentURL = new URL(window.location);\r\n                var scope = \"User.Read email openid profile offline_access\";\r\n                var loginHint = context.user.loginHint;\r\n\t\t\t\t\r\n                const msalConfig = {\r\n                    auth: {\r\n                        clientId: process.env.REACT_APP_AZURE_APP_REGISTRATION_ID,\r\n                        authority: `https://login.microsoftonline.com/${context.user.tenant.id}`,\r\n                        navigateToLoginRequestUrl: false\r\n                    },\r\n                    cache: {\r\n                        cacheLocation: \"sessionStorage\",\r\n                    },\r\n                };\r\n\t\t\t\t\r\n                const msalInstance = new msal.PublicClientApplication(msalConfig);\r\n\t\t\t\t\r\n                const scopesArray = scope.split(\" \");\r\n                const scopesRequest = {\r\n                    scopes: scopesArray,\r\n                    redirectUri: window.location.origin + `/auth-end`,\r\n                    loginHint: loginHint\r\n                };\r\n\t\t\t\t\r\n                await msalInstance.loginRedirect(scopesRequest);\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h1>Redirecting to consent page.</h1>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default ConsentPopup;"],"mappings":";AAAA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,cAAc,MAAM,qBAAqB;AACrD,OAAO,KAAKC,IAAI,MAAM,qBAAqB;;AAE3C;AACA;AACA;AAFA;AAGA,MAAMC,YAAY,SAASH,KAAK,CAACI,SAAS,CAAC;EAEvCC,iBAAiB,GAAG;IAEhBJ,cAAc,CAACK,GAAG,CAACC,UAAU,EAAE,CAACC,IAAI,CAAC,MAAM;MACvC;MACAP,cAAc,CAACK,GAAG,CAACG,UAAU,EAAE,CAACD,IAAI,CAAC,MAAOE,OAAO,IAAK;QACpD,IAAIC,UAAU,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAAC;QACzC,IAAIC,KAAK,GAAG,+CAA+C;QAC3D,IAAIC,SAAS,GAAGN,OAAO,CAACO,IAAI,CAACD,SAAS;QAEtC,MAAME,UAAU,GAAG;UACfC,IAAI,EAAE;YACFC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,mCAAmC;YACzDC,SAAS,EAAG,qCAAoCd,OAAO,CAACO,IAAI,CAACQ,MAAM,CAACC,EAAG,EAAC;YACxEC,yBAAyB,EAAE;UAC/B,CAAC;UACDC,KAAK,EAAE;YACHC,aAAa,EAAE;UACnB;QACJ,CAAC;QAED,MAAMC,YAAY,GAAG,IAAI5B,IAAI,CAAC6B,uBAAuB,CAACb,UAAU,CAAC;QAEjE,MAAMc,WAAW,GAAGjB,KAAK,CAACkB,KAAK,CAAC,GAAG,CAAC;QACpC,MAAMC,aAAa,GAAG;UAClBC,MAAM,EAAEH,WAAW;UACnBI,WAAW,EAAEvB,MAAM,CAACC,QAAQ,CAACuB,MAAM,GAAI,WAAU;UACjDrB,SAAS,EAAEA;QACf,CAAC;QAED,MAAMc,YAAY,CAACQ,aAAa,CAACJ,aAAa,CAAC;MACnD,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAEAK,MAAM,GAAG;IACP,oBACE;MAAA,uBACE;QAAA,UAAI;MAA4B;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACjC;EAEV;AACJ;AAEA,eAAepC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}