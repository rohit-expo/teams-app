{"ast":null,"code":"import { __resetStyles, __styles, mergeClasses, shorthands } from '@griffel/react';\nimport { createFocusOutlineStyle } from '@fluentui/react-tabster';\nimport { tokens } from '@fluentui/react-theme';\nexport const checkboxClassNames = {\n  root: 'fui-Checkbox',\n  label: 'fui-Checkbox__label',\n  input: 'fui-Checkbox__input',\n  indicator: 'fui-Checkbox__indicator'\n}; // The indicator size is used by the indicator and label styles\n\nconst indicatorSizeMedium = '16px';\nconst indicatorSizeLarge = '20px';\nconst useRootBaseClassName = /*#__PURE__*/__resetStyles(\"r1o1qdo1\", \"r1niodl4\", [\".r1o1qdo1{position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}\", \".r1o1qdo1:focus{outline-style:none;}\", \".r1o1qdo1:focus-visible{outline-style:none;}\", \".r1o1qdo1[data-fui-focus-within]:focus-within{border-top-color:transparent;border-right-color:transparent;border-bottom-color:transparent;border-left-color:transparent;}\", \".r1o1qdo1[data-fui-focus-within]:focus-within::after{content:\\\"\\\";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-right-style:solid;border-bottom-style:solid;border-left-style:solid;border-top-width:2px;border-right-width:2px;border-bottom-width:2px;border-left-width:2px;border-bottom-right-radius:var(--borderRadiusMedium);border-bottom-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);top:-2px;bottom:-2px;left:-2px;right:-2px;}\", \".r1niodl4{position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}\", \".r1niodl4:focus{outline-style:none;}\", \".r1niodl4:focus-visible{outline-style:none;}\", \".r1niodl4[data-fui-focus-within]:focus-within{border-top-color:transparent;border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;}\", \".r1niodl4[data-fui-focus-within]:focus-within::after{content:\\\"\\\";position:absolute;pointer-events:none;z-index:1;border-top-style:solid;border-left-style:solid;border-bottom-style:solid;border-right-style:solid;border-top-width:2px;border-left-width:2px;border-bottom-width:2px;border-right-width:2px;border-bottom-left-radius:var(--borderRadiusMedium);border-bottom-right-radius:var(--borderRadiusMedium);border-top-left-radius:var(--borderRadiusMedium);border-top-right-radius:var(--borderRadiusMedium);border-top-color:var(--colorStrokeFocus2);border-left-color:var(--colorStrokeFocus2);border-bottom-color:var(--colorStrokeFocus2);border-right-color:var(--colorStrokeFocus2);top:-2px;bottom:-2px;right:-2px;left:-2px;}\"]);\nconst useInputBaseClassName = /*#__PURE__*/__resetStyles(\"rfcvz6l\", null, [\".rfcvz6l{box-sizing:border-box;cursor:pointer;height:100%;margin:0;opacity:0;position:absolute;top:0;width:calc(16px + 2 * var(--spacingHorizontalS));}\", \".rfcvz6l:not(:checked):not(:indeterminate)~.fui-Checkbox__indicator>*{opacity:0;}\", \".rfcvz6l:enabled:not(:checked):not(:indeterminate)~.fui-Checkbox__label{color:var(--colorNeutralForeground3);}\", \".rfcvz6l:enabled:not(:checked):not(:indeterminate)~.fui-Checkbox__indicator{border-color:var(--colorNeutralStrokeAccessible);}\", \".rfcvz6l:enabled:not(:checked):not(:indeterminate):hover~.fui-Checkbox__label{color:var(--colorNeutralForeground2);}\", \".rfcvz6l:enabled:not(:checked):not(:indeterminate):hover~.fui-Checkbox__indicator{border-color:var(--colorNeutralStrokeAccessibleHover);}\", \".rfcvz6l:enabled:not(:checked):not(:indeterminate):active:hover~.fui-Checkbox__label{color:var(--colorNeutralForeground1);}\", \".rfcvz6l:enabled:not(:checked):not(:indeterminate):active:hover~.fui-Checkbox__indicator{border-color:var(--colorNeutralStrokeAccessiblePressed);}\", \".rfcvz6l:enabled:checked:not(:indeterminate)~.fui-Checkbox__label{color:var(--colorNeutralForeground1);}\", \".rfcvz6l:enabled:checked:not(:indeterminate)~.fui-Checkbox__indicator{background-color:var(--colorCompoundBrandBackground);color:var(--colorNeutralForegroundInverted);border-color:var(--colorCompoundBrandBackground);}\", \".rfcvz6l:enabled:checked:not(:indeterminate):hover~.fui-Checkbox__indicator{background-color:var(--colorCompoundBrandBackgroundHover);border-color:var(--colorCompoundBrandBackgroundHover);}\", \".rfcvz6l:enabled:checked:not(:indeterminate):active:hover~.fui-Checkbox__indicator{background-color:var(--colorCompoundBrandBackgroundPressed);border-color:var(--colorCompoundBrandBackgroundPressed);}\", \".rfcvz6l:enabled:indeterminate~.fui-Checkbox__label{color:var(--colorNeutralForeground1);}\", \".rfcvz6l:enabled:indeterminate~.fui-Checkbox__indicator{border-color:var(--colorCompoundBrandStroke);color:var(--colorCompoundBrandForeground1);}\", \".rfcvz6l:enabled:indeterminate:hover~.fui-Checkbox__indicator{border-color:var(--colorCompoundBrandStrokeHover);color:var(--colorCompoundBrandForeground1Hover);}\", \".rfcvz6l:enabled:indeterminate:active:hover~.fui-Checkbox__indicator{border-color:var(--colorCompoundBrandStrokePressed);color:var(--colorCompoundBrandForeground1Pressed);}\", \".rfcvz6l:disabled{cursor:default;}\", \".rfcvz6l:disabled~.fui-Checkbox__label{cursor:default;color:var(--colorNeutralForegroundDisabled);}\", \"@media (forced-colors: active){.rfcvz6l:disabled~.fui-Checkbox__label{color:GrayText;}}\", \".rfcvz6l:disabled~.fui-Checkbox__indicator{border-color:var(--colorNeutralStrokeDisabled);color:var(--colorNeutralForegroundDisabled);}\", \"@media (forced-colors: active){.rfcvz6l:disabled~.fui-Checkbox__indicator{color:GrayText;}}\", \"@media (forced-colors: active){.rfcvz6l:disabled~.fui-Checkbox__indicator svg{color:GrayText;}}\"]);\nconst useInputStyles = /*#__PURE__*/__styles({\n  \"before\": {\n    \"j35jbq\": [\"f1e31b4d\", \"f1vgc2s3\"]\n  },\n  \"after\": {\n    \"oyh7mz\": [\"f1vgc2s3\", \"f1e31b4d\"]\n  },\n  \"large\": {\n    \"a9b677\": \"f1mq5jt6\"\n  }\n}, {\n  \"d\": [\".f1e31b4d{right:0;}\", \".f1vgc2s3{left:0;}\", \".f1mq5jt6{width:calc(20px + 2 * var(--spacingHorizontalS));}\"]\n});\nconst useIndicatorBaseClassName = /*#__PURE__*/__resetStyles(\"r1jvlehe\", null, [\".r1jvlehe{-webkit-align-self:flex-start;-ms-flex-item-align:flex-start;align-self:flex-start;box-sizing:border-box;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;overflow:hidden;border:var(--strokeWidthThin) solid;border-radius:var(--borderRadiusSmall);margin:var(--spacingVerticalS) var(--spacingHorizontalS);fill:currentColor;pointer-events:none;font-size:12px;height:16px;width:16px;}\"]);\nconst useIndicatorStyles = /*#__PURE__*/__styles({\n  \"large\": {\n    \"Be2twd7\": \"f4ybsrx\",\n    \"Bqenvij\": \"fjamq6b\",\n    \"a9b677\": \"f64fuq3\"\n  },\n  \"circular\": {\n    \"Bbmb7ep\": [\"f8fbkgy\", \"f1nfllo7\"],\n    \"Beyfa6y\": [\"f1nfllo7\", \"f8fbkgy\"],\n    \"B7oj6ja\": [\"f1djnp8u\", \"f1s8kh49\"],\n    \"Btl43ni\": [\"f1s8kh49\", \"f1djnp8u\"]\n  }\n}, {\n  \"d\": [\".f4ybsrx{font-size:16px;}\", \".fjamq6b{height:20px;}\", \".f64fuq3{width:20px;}\", \".f8fbkgy{border-bottom-right-radius:var(--borderRadiusCircular);}\", \".f1nfllo7{border-bottom-left-radius:var(--borderRadiusCircular);}\", \".f1djnp8u{border-top-right-radius:var(--borderRadiusCircular);}\", \".f1s8kh49{border-top-left-radius:var(--borderRadiusCircular);}\"]\n}); // Can't use makeResetStyles here because Label is a component that may itself use makeResetStyles.\n\nconst useLabelStyles = /*#__PURE__*/__styles({\n  \"base\": {\n    \"qb2dma\": \"f7nlbp4\",\n    \"Bceei9c\": \"f1k6fduh\",\n    \"z8tnut\": \"f1kwiid1\",\n    \"z189sj\": [\"f1vdfbxk\", \"f1f5gg8d\"],\n    \"Byoj8tv\": \"f5b47ha\",\n    \"uwmqm3\": [\"f1f5gg8d\", \"f1vdfbxk\"]\n  },\n  \"before\": {\n    \"z189sj\": [\"f7x41pl\", \"fruq291\"]\n  },\n  \"after\": {\n    \"uwmqm3\": [\"fruq291\", \"f7x41pl\"]\n  },\n  \"medium\": {\n    \"B6of3ja\": \"fjzwpt6\",\n    \"jrapky\": \"fh6j2fo\"\n  },\n  \"large\": {\n    \"B6of3ja\": \"f1xlvstr\",\n    \"jrapky\": \"f49ad5g\"\n  }\n}, {\n  \"d\": [\".f7nlbp4{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;}\", \".f1k6fduh{cursor:pointer;}\", \".f1kwiid1{padding-top:var(--spacingVerticalS);}\", \".f1vdfbxk{padding-right:var(--spacingHorizontalS);}\", \".f1f5gg8d{padding-left:var(--spacingHorizontalS);}\", \".f5b47ha{padding-bottom:var(--spacingVerticalS);}\", \".f7x41pl{padding-right:var(--spacingHorizontalXS);}\", \".fruq291{padding-left:var(--spacingHorizontalXS);}\", \".fjzwpt6{margin-top:calc((16px - var(--lineHeightBase300)) / 2);}\", \".fh6j2fo{margin-bottom:calc((16px - var(--lineHeightBase300)) / 2);}\", \".f1xlvstr{margin-top:calc((20px - var(--lineHeightBase300)) / 2);}\", \".f49ad5g{margin-bottom:calc((20px - var(--lineHeightBase300)) / 2);}\"]\n});\n/**\n * Apply styling to the Checkbox slots based on the state\n */\n\nexport const useCheckboxStyles_unstable = state => {\n  const {\n    labelPosition,\n    shape,\n    size\n  } = state;\n  const rootBaseClassName = useRootBaseClassName();\n  state.root.className = mergeClasses(checkboxClassNames.root, rootBaseClassName, state.root.className);\n  const inputBaseClassName = useInputBaseClassName();\n  const inputStyles = useInputStyles();\n  state.input.className = mergeClasses(checkboxClassNames.input, inputBaseClassName, size === 'large' && inputStyles.large, inputStyles[labelPosition], state.input.className);\n  const indicatorBaseClassName = useIndicatorBaseClassName();\n  const indicatorStyles = useIndicatorStyles();\n  if (state.indicator) {\n    state.indicator.className = mergeClasses(checkboxClassNames.indicator, indicatorBaseClassName, size === 'large' && indicatorStyles.large, shape === 'circular' && indicatorStyles.circular, state.indicator.className);\n  }\n  const labelStyles = useLabelStyles();\n  if (state.label) {\n    state.label.className = mergeClasses(checkboxClassNames.label, labelStyles.base, labelStyles[size], labelStyles[labelPosition], state.label.className);\n  }\n  return state;\n};","map":{"version":3,"mappings":"AAAA,kCAAsCA,YAAtC,EAAoDC,UAApD,QAAsE,gBAAtE;AACA,SAASC,uBAAT,QAAwC,yBAAxC;AACA,SAASC,MAAT,QAAuB,uBAAvB;AAIA,OAAO,MAAMC,kBAAkB,GAAkC;EAC/DC,IAAI,EAAE,cADyD;EAE/DC,KAAK,EAAE,qBAFwD;EAG/DC,KAAK,EAAE,qBAHwD;EAI/DC,SAAS,EAAE;AAJoD,CAA1D,C,CAOP;;AACA,MAAMC,mBAAmB,GAAG,MAA5B;AACA,MAAMC,kBAAkB,GAAG,MAA3B;AAEA,MAAMC,oBAAoB,gBAAGC,6uEAA7B;AAMA,MAAMC,qBAAqB,gBAAGD,i3FAA9B;AAyHA,MAAME,cAAc,gBAAGC;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;AAAA;EAAA;AAAA,EAAvB;AAaA,MAAMC,yBAAyB,gBAAGJ,2rBAAlC;AAqBA,MAAMK,kBAAkB,gBAAGF;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AAAA;EAAA;AAAA,EAA3B,C,CAYA;;AACA,MAAMG,cAAc,gBAAGH;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;AAAA;EAAA;AAAA,EAAvB;AA0BA;;AAEG;;AACH,OAAO,MAAMI,0BAA0B,GAAIC,KAAD,IAAwC;EAChF,MAAM;IAAEC,aAAF;IAAiBC,KAAjB;IAAwBC;EAAxB,IAAiCH,KAAvC;EAEA,MAAMI,iBAAiB,GAAGb,oBAAoB,EAA9C;EACAS,KAAK,CAACf,IAAN,CAAWoB,SAAX,GAAuBzB,YAAY,CAACI,kBAAkB,CAACC,IAApB,EAA0BmB,iBAA1B,EAA6CJ,KAAK,CAACf,IAAN,CAAWoB,SAAxD,CAAnC;EAEA,MAAMC,kBAAkB,GAAGb,qBAAqB,EAAhD;EACA,MAAMc,WAAW,GAAGb,cAAc,EAAlC;EACAM,KAAK,CAACb,KAAN,CAAYkB,SAAZ,GAAwBzB,YAAY,CAClCI,kBAAkB,CAACG,KADe,EAElCmB,kBAFkC,EAGlCH,IAAI,KAAK,OAAT,IAAoBI,WAAW,CAACC,KAHE,EAIlCD,WAAW,CAACN,aAAD,CAJuB,EAKlCD,KAAK,CAACb,KAAN,CAAYkB,SALsB,CAApC;EAQA,MAAMI,sBAAsB,GAAGb,yBAAyB,EAAxD;EACA,MAAMc,eAAe,GAAGb,kBAAkB,EAA1C;EACA,IAAIG,KAAK,CAACZ,SAAV,EAAqB;IACnBY,KAAK,CAACZ,SAAN,CAAgBiB,SAAhB,GAA4BzB,YAAY,CACtCI,kBAAkB,CAACI,SADmB,EAEtCqB,sBAFsC,EAGtCN,IAAI,KAAK,OAAT,IAAoBO,eAAe,CAACF,KAHE,EAItCN,KAAK,KAAK,UAAV,IAAwBQ,eAAe,CAACC,QAJF,EAKtCX,KAAK,CAACZ,SAAN,CAAgBiB,SALsB,CAAxC;EAOD;EAED,MAAMO,WAAW,GAAGd,cAAc,EAAlC;EACA,IAAIE,KAAK,CAACd,KAAV,EAAiB;IACfc,KAAK,CAACd,KAAN,CAAYmB,SAAZ,GAAwBzB,YAAY,CAClCI,kBAAkB,CAACE,KADe,EAElC0B,WAAW,CAACC,IAFsB,EAGlCD,WAAW,CAACT,IAAD,CAHuB,EAIlCS,WAAW,CAACX,aAAD,CAJuB,EAKlCD,KAAK,CAACd,KAAN,CAAYmB,SALsB,CAApC;EAOD;EAED,OAAOL,KAAP;AACD,CAxCM","names":["mergeClasses","shorthands","createFocusOutlineStyle","tokens","checkboxClassNames","root","label","input","indicator","indicatorSizeMedium","indicatorSizeLarge","useRootBaseClassName","__resetStyles","useInputBaseClassName","useInputStyles","__styles","useIndicatorBaseClassName","useIndicatorStyles","useLabelStyles","useCheckboxStyles_unstable","state","labelPosition","shape","size","rootBaseClassName","className","inputBaseClassName","inputStyles","large","indicatorBaseClassName","indicatorStyles","circular","labelStyles","base"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-checkbox\\lib\\components\\src\\packages\\react-components\\react-checkbox\\src\\components\\Checkbox\\useCheckboxStyles.ts"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { createFocusOutlineStyle } from '@fluentui/react-tabster';\nimport { tokens } from '@fluentui/react-theme';\nimport { CheckboxSlots, CheckboxState } from './Checkbox.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const checkboxClassNames: SlotClassNames<CheckboxSlots> = {\n  root: 'fui-Checkbox',\n  label: 'fui-Checkbox__label',\n  input: 'fui-Checkbox__input',\n  indicator: 'fui-Checkbox__indicator',\n};\n\n// The indicator size is used by the indicator and label styles\nconst indicatorSizeMedium = '16px';\nconst indicatorSizeLarge = '20px';\n\nconst useRootBaseClassName = makeResetStyles({\n  position: 'relative',\n  display: 'inline-flex',\n  ...createFocusOutlineStyle({ style: {}, selector: 'focus-within' }),\n});\n\nconst useInputBaseClassName = makeResetStyles({\n  boxSizing: 'border-box',\n  cursor: 'pointer',\n  height: '100%',\n  margin: 0,\n  opacity: 0,\n  position: 'absolute',\n  top: 0,\n  // Calculate the width of the hidden input by taking into account the size of the indicator + the padding around it.\n  // This is done so that clicking on that \"empty space\" still toggles the checkbox.\n  width: `calc(${indicatorSizeMedium} + 2 * ${tokens.spacingHorizontalS})`,\n\n  // When unchecked, hide the the checkmark icon (child of the indicator slot)\n  [`:not(:checked):not(:indeterminate) ~ .${checkboxClassNames.indicator} > *`]: {\n    opacity: 0,\n  },\n\n  // Colors for the unchecked state\n  ':enabled:not(:checked):not(:indeterminate)': {\n    [`& ~ .${checkboxClassNames.label}`]: {\n      color: tokens.colorNeutralForeground3,\n    },\n    [`& ~ .${checkboxClassNames.indicator}`]: {\n      borderColor: tokens.colorNeutralStrokeAccessible,\n    },\n\n    ':hover': {\n      [`& ~ .${checkboxClassNames.label}`]: {\n        color: tokens.colorNeutralForeground2,\n      },\n      [`& ~ .${checkboxClassNames.indicator}`]: {\n        borderColor: tokens.colorNeutralStrokeAccessibleHover,\n      },\n    },\n\n    ':active:hover': {\n      [`& ~ .${checkboxClassNames.label}`]: {\n        color: tokens.colorNeutralForeground1,\n      },\n      [`& ~ .${checkboxClassNames.indicator}`]: {\n        borderColor: tokens.colorNeutralStrokeAccessiblePressed,\n      },\n    },\n  },\n\n  // Colors for the checked state\n  ':enabled:checked:not(:indeterminate)': {\n    [`& ~ .${checkboxClassNames.label}`]: {\n      color: tokens.colorNeutralForeground1,\n    },\n    [`& ~ .${checkboxClassNames.indicator}`]: {\n      backgroundColor: tokens.colorCompoundBrandBackground,\n      color: tokens.colorNeutralForegroundInverted,\n      borderColor: tokens.colorCompoundBrandBackground,\n    },\n\n    ':hover': {\n      [`& ~ .${checkboxClassNames.indicator}`]: {\n        backgroundColor: tokens.colorCompoundBrandBackgroundHover,\n        borderColor: tokens.colorCompoundBrandBackgroundHover,\n      },\n    },\n\n    ':active:hover': {\n      [`& ~ .${checkboxClassNames.indicator}`]: {\n        backgroundColor: tokens.colorCompoundBrandBackgroundPressed,\n        borderColor: tokens.colorCompoundBrandBackgroundPressed,\n      },\n    },\n  },\n\n  // Colors for the mixed state\n  ':enabled:indeterminate': {\n    [`& ~ .${checkboxClassNames.label}`]: {\n      color: tokens.colorNeutralForeground1,\n    },\n    [`& ~ .${checkboxClassNames.indicator}`]: {\n      borderColor: tokens.colorCompoundBrandStroke,\n      color: tokens.colorCompoundBrandForeground1,\n    },\n\n    ':hover': {\n      [`& ~ .${checkboxClassNames.indicator}`]: {\n        borderColor: tokens.colorCompoundBrandStrokeHover,\n        color: tokens.colorCompoundBrandForeground1Hover,\n      },\n    },\n\n    ':active:hover': {\n      [`& ~ .${checkboxClassNames.indicator}`]: {\n        borderColor: tokens.colorCompoundBrandStrokePressed,\n        color: tokens.colorCompoundBrandForeground1Pressed,\n      },\n    },\n  },\n\n  ':disabled': {\n    cursor: 'default',\n\n    [`& ~ .${checkboxClassNames.label}`]: {\n      cursor: 'default',\n      color: tokens.colorNeutralForegroundDisabled,\n      '@media (forced-colors: active)': {\n        color: 'GrayText',\n      },\n    },\n    [`& ~ .${checkboxClassNames.indicator}`]: {\n      borderColor: tokens.colorNeutralStrokeDisabled,\n      color: tokens.colorNeutralForegroundDisabled,\n      '@media (forced-colors: active)': {\n        color: 'GrayText',\n      },\n    },\n    [`& ~ .${checkboxClassNames.indicator} svg`]: {\n      '@media (forced-colors: active)': {\n        color: 'GrayText',\n      },\n    },\n  },\n});\n\nconst useInputStyles = makeStyles({\n  before: {\n    right: 0,\n  },\n  after: {\n    left: 0,\n  },\n\n  large: {\n    width: `calc(${indicatorSizeLarge} + 2 * ${tokens.spacingHorizontalS})`,\n  },\n});\n\nconst useIndicatorBaseClassName = makeResetStyles({\n  alignSelf: 'flex-start',\n  boxSizing: 'border-box',\n  flexShrink: 0,\n\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  overflow: 'hidden',\n\n  border: tokens.strokeWidthThin + ' solid',\n  borderRadius: tokens.borderRadiusSmall,\n  margin: tokens.spacingVerticalS + ' ' + tokens.spacingHorizontalS,\n  fill: 'currentColor',\n  pointerEvents: 'none',\n\n  fontSize: '12px',\n  height: indicatorSizeMedium,\n  width: indicatorSizeMedium,\n});\n\nconst useIndicatorStyles = makeStyles({\n  large: {\n    fontSize: '16px',\n    height: indicatorSizeLarge,\n    width: indicatorSizeLarge,\n  },\n\n  circular: {\n    ...shorthands.borderRadius(tokens.borderRadiusCircular),\n  },\n});\n\n// Can't use makeResetStyles here because Label is a component that may itself use makeResetStyles.\nconst useLabelStyles = makeStyles({\n  base: {\n    alignSelf: 'center',\n    cursor: 'pointer',\n    ...shorthands.padding(tokens.spacingVerticalS, tokens.spacingHorizontalS),\n  },\n\n  before: {\n    paddingRight: tokens.spacingHorizontalXS,\n  },\n  after: {\n    paddingLeft: tokens.spacingHorizontalXS,\n  },\n\n  // Use a (negative) margin to account for the difference between the indicator's height and the label's line height.\n  // This prevents the label from expanding the height of the checkbox, but preserves line height if the label wraps.\n  medium: {\n    marginTop: `calc((${indicatorSizeMedium} - ${tokens.lineHeightBase300}) / 2)`,\n    marginBottom: `calc((${indicatorSizeMedium} - ${tokens.lineHeightBase300}) / 2)`,\n  },\n  large: {\n    marginTop: `calc((${indicatorSizeLarge} - ${tokens.lineHeightBase300}) / 2)`,\n    marginBottom: `calc((${indicatorSizeLarge} - ${tokens.lineHeightBase300}) / 2)`,\n  },\n});\n\n/**\n * Apply styling to the Checkbox slots based on the state\n */\nexport const useCheckboxStyles_unstable = (state: CheckboxState): CheckboxState => {\n  const { labelPosition, shape, size } = state;\n\n  const rootBaseClassName = useRootBaseClassName();\n  state.root.className = mergeClasses(checkboxClassNames.root, rootBaseClassName, state.root.className);\n\n  const inputBaseClassName = useInputBaseClassName();\n  const inputStyles = useInputStyles();\n  state.input.className = mergeClasses(\n    checkboxClassNames.input,\n    inputBaseClassName,\n    size === 'large' && inputStyles.large,\n    inputStyles[labelPosition],\n    state.input.className,\n  );\n\n  const indicatorBaseClassName = useIndicatorBaseClassName();\n  const indicatorStyles = useIndicatorStyles();\n  if (state.indicator) {\n    state.indicator.className = mergeClasses(\n      checkboxClassNames.indicator,\n      indicatorBaseClassName,\n      size === 'large' && indicatorStyles.large,\n      shape === 'circular' && indicatorStyles.circular,\n      state.indicator.className,\n    );\n  }\n\n  const labelStyles = useLabelStyles();\n  if (state.label) {\n    state.label.className = mergeClasses(\n      checkboxClassNames.label,\n      labelStyles.base,\n      labelStyles[size],\n      labelStyles[labelPosition],\n      state.label.className,\n    );\n  }\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}