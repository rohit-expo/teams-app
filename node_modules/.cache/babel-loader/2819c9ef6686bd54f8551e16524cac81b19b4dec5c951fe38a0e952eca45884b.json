{"ast":null,"code":"/*! @azure/msal-common v13.2.0 2023-07-05 */\n'use strict';\n\nimport { __extends } from '../../_virtual/_tslib.js';\nimport { PerformanceClient } from './PerformanceClient.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar StubPerformanceMeasurement = /** @class */function () {\n  function StubPerformanceMeasurement() {}\n  /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n  StubPerformanceMeasurement.prototype.startMeasurement = function () {};\n  /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n  StubPerformanceMeasurement.prototype.endMeasurement = function () {};\n  StubPerformanceMeasurement.prototype.flushMeasurement = function () {\n    return null;\n  };\n  return StubPerformanceMeasurement;\n}();\nvar StubPerformanceClient = /** @class */function (_super) {\n  __extends(StubPerformanceClient, _super);\n  function StubPerformanceClient() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  StubPerformanceClient.prototype.generateId = function () {\n    return \"callback-id\";\n  };\n  StubPerformanceClient.prototype.startPerformanceMeasuremeant = function () {\n    return new StubPerformanceMeasurement();\n  };\n  StubPerformanceClient.prototype.startPerformanceMeasurement = function () {\n    return new StubPerformanceMeasurement();\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n  StubPerformanceClient.prototype.calculateQueuedTime = function (preQueueTime, currentTime) {\n    return 0;\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n  StubPerformanceClient.prototype.addQueueMeasurement = function (eventName, correlationId, queueTime) {\n    return;\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n  StubPerformanceClient.prototype.setPreQueueTime = function (eventName, correlationId) {\n    return;\n  };\n  return StubPerformanceClient;\n}(PerformanceClient);\nexport { StubPerformanceClient, StubPerformanceMeasurement };","map":{"version":3,"mappings":";;;;;;AAAA;;;AAGG;AAOH;EAAA;;EAEIA,0BAAgB,8BAAhB,cAA4B;;EAE5BA,0BAAc,4BAAd,cAA0B;EAC1BA,qDAAgB,GAAhB;IACI,OAAO,IAAI;GACd;EAEL,OAACA;AAAD,CAAC;AAED;EAA2CC,SAAiB;EAA5D;;;EACIC,0CAAU,GAAV;IACI,OAAO,aAAa;GACvB;EAEDA,4DAA4B,GAA5B;IACI,OAAO,IAAIF,0BAA0B,EAAE;GAC1C;EAEDE,2DAA2B,GAA3B;IACI,OAAO,IAAIF,0BAA0B,EAAE;GAC1C;;EAGDE,mDAAmB,GAAnB,UAAoBC,YAAoB,EAAEC,WAAmB;IACzD,OAAO,CAAC;GACX;;EAGDF,mDAAmB,GAAnB,UAAoBG,SAA4B,EAAEC,aAAqB,EAAEC,SAAiB;IACtF;GACH;;EAGDL,+CAAe,GAAf,UAAgBG,SAA4B,EAAEC,aAAkC;IAC5E;GACH;EAEL,OAACJ;AAAD,CA5BA,CAA2CM,iBAAiB,CA4B3D","names":["StubPerformanceMeasurement","__extends","StubPerformanceClient","preQueueTime","currentTime","eventName","correlationId","queueTime","PerformanceClient"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@azure\\msal-common\\src\\telemetry\\performance\\StubPerformanceClient.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { IPerformanceClient } from \"./IPerformanceClient\";\r\nimport { IPerformanceMeasurement } from \"./IPerformanceMeasurement\";\r\nimport { PerformanceClient } from \"./PerformanceClient\";\r\nimport { PerformanceEvents } from \"./PerformanceEvent\";\r\n\r\nexport class StubPerformanceMeasurement implements IPerformanceMeasurement {\r\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\r\n    startMeasurement(): void { }\r\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\r\n    endMeasurement(): void { }\r\n    flushMeasurement(): number | null {\r\n        return null;\r\n    }\r\n    \r\n}\r\n\r\nexport class StubPerformanceClient extends PerformanceClient implements IPerformanceClient {\r\n    generateId(): string {\r\n        return \"callback-id\";\r\n    }\r\n    \r\n    startPerformanceMeasuremeant(): IPerformanceMeasurement {\r\n        return new StubPerformanceMeasurement();\r\n    }\r\n\r\n    startPerformanceMeasurement(): IPerformanceMeasurement {\r\n        return new StubPerformanceMeasurement();\r\n    }\r\n\r\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n    calculateQueuedTime(preQueueTime: number, currentTime: number): number {\r\n        return 0;\r\n    }\r\n\r\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n    addQueueMeasurement(eventName: PerformanceEvents, correlationId: string, queueTime: number): void {\r\n        return;\r\n    }\r\n\r\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n    setPreQueueTime(eventName: PerformanceEvents, correlationId?: string | undefined): void {\r\n        return;\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}