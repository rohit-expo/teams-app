{"ast":null,"code":"import { createContext, useContextSelector } from '@fluentui/react-context-selector';\nconst defaultContextValue = {\n  open: false,\n  modalType: 'modal',\n  isNestedDialog: false,\n  dialogRef: {\n    current: null\n  },\n  requestOpenChange() {\n    /* noop */\n  }\n}; // Contexts should default to undefined\n\nexport const DialogContext = /*#__PURE__*/createContext(undefined);\nexport const DialogProvider = DialogContext.Provider;\nexport const useDialogContext_unstable = selector => useContextSelector(DialogContext, function () {\n  let ctx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultContextValue;\n  return selector(ctx);\n});","map":{"version":3,"mappings":"AACA,SAASA,aAAT,EAAyCC,kBAAzC,QAAmE,kCAAnE;AAiBA,MAAMC,mBAAmB,GAAuB;EAC9CC,IAAI,EAAE,KADwC;EAE9CC,SAAS,EAAE,OAFmC;EAG9CC,cAAc,EAAE,KAH8B;EAI9CC,SAAS,EAAE;IAAEC,OAAO,EAAE;EAAX,CAJmC;EAK9CC,iBAAiB;IACf;EAAA;AAN4C,CAAhD,C,CAUA;;AACA,OAAO,MAAMC,aAAa,gBAA4CT,aAAa,CACjFU,SADiF,CAA5E;AAIP,OAAO,MAAMC,cAAc,GAAGF,aAAa,CAACG,QAArC;AACP,OAAO,MAAMC,yBAAyB,GAAOC,QAAJ,IACvCb,kBAAkB,CAACQ,aAAD,EAAgB;EAAA,IAACM,GAAG,uEAAGb,mBAAP;EAAA,OAA+BY,QAAQ,CAACC,GAAD,CAAvD;AAAA,EADb","names":["createContext","useContextSelector","defaultContextValue","open","modalType","isNestedDialog","dialogRef","current","requestOpenChange","DialogContext","undefined","DialogProvider","Provider","useDialogContext_unstable","selector","ctx"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-dialog\\lib\\src\\packages\\react-components\\react-dialog\\src\\contexts\\dialogContext.ts"],"sourcesContent":["import * as React from 'react';\nimport { createContext, ContextSelector, useContextSelector } from '@fluentui/react-context-selector';\nimport { DialogSurfaceElement } from '../DialogSurface';\nimport type { Context } from '@fluentui/react-context-selector';\nimport type { DialogModalType, DialogOpenChangeData } from '../Dialog';\n\nexport type DialogContextValue = {\n  open: boolean;\n  dialogTitleId?: string;\n  isNestedDialog: boolean;\n  dialogRef: React.Ref<DialogSurfaceElement>;\n  modalType: DialogModalType;\n  /**\n   * Requests dialog main component to update it's internal open state\n   */\n  requestOpenChange: (data: DialogOpenChangeData) => void;\n};\n\nconst defaultContextValue: DialogContextValue = {\n  open: false,\n  modalType: 'modal',\n  isNestedDialog: false,\n  dialogRef: { current: null },\n  requestOpenChange() {\n    /* noop */\n  },\n};\n\n// Contexts should default to undefined\nexport const DialogContext: Context<DialogContextValue | undefined> = createContext<DialogContextValue | undefined>(\n  undefined,\n);\n\nexport const DialogProvider = DialogContext.Provider;\nexport const useDialogContext_unstable = <T>(selector: ContextSelector<DialogContextValue, T>): T =>\n  useContextSelector(DialogContext, (ctx = defaultContextValue) => selector(ctx));\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}