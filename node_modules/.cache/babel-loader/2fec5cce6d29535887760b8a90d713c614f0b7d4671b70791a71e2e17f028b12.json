{"ast":null,"code":"import { createContext, useContextSelector } from '@fluentui/react-context-selector';\nexport const MenuContext = /*#__PURE__*/createContext(undefined);\nconst menuContextDefaultValue = {\n  open: false,\n  setOpen: () => false,\n  checkedValues: {},\n  onCheckedValueChange: () => null,\n  isSubmenu: false,\n  triggerRef: {\n    current: null\n  },\n  menuPopoverRef: {\n    current: null\n  },\n  triggerId: '',\n  openOnContext: false,\n  openOnHover: false,\n  hasIcons: false,\n  hasCheckmarks: false,\n  inline: false,\n  persistOnItemClick: false\n};\nexport const MenuProvider = MenuContext.Provider;\nexport const useMenuContext_unstable = selector => useContextSelector(MenuContext, function () {\n  let ctx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : menuContextDefaultValue;\n  return selector(ctx);\n});","map":{"version":3,"mappings":"AACA,SAASA,aAAT,EAAwBC,kBAAxB,QAAkD,kCAAlD;AAIA,OAAO,MAAMC,WAAW,gBAA8BF,aAAa,CACjEG,SADiE,CAA5D;AAIP,MAAMC,uBAAuB,GAAqB;EAChDC,IAAI,EAAE,KAD0C;EAEhDC,OAAO,EAAE,MAAM,KAFiC;EAGhDC,aAAa,EAAE,EAHiC;EAIhDC,oBAAoB,EAAE,MAAM,IAJoB;EAKhDC,SAAS,EAAE,KALqC;EAMhDC,UAAU,EAAG;IAAEC,OAAO,EAAE;EAAX,CANmC;EAOhDC,cAAc,EAAG;IAAED,OAAO,EAAE;EAAX,CAP+B;EAQhDE,SAAS,EAAE,EARqC;EAShDC,aAAa,EAAE,KATiC;EAUhDC,WAAW,EAAE,KAVmC;EAWhDC,QAAQ,EAAE,KAXsC;EAYhDC,aAAa,EAAE,KAZiC;EAahDC,MAAM,EAAE,KAbwC;EAchDC,kBAAkB,EAAE;AAd4B,CAAlD;AAgDA,OAAO,MAAMC,YAAY,GAAGlB,WAAW,CAACmB,QAAjC;AAEP,OAAO,MAAMC,uBAAuB,GAAOC,QAAJ,IACrCtB,kBAAkB,CAACC,WAAD,EAAc;EAAA,IAACsB,GAAG,uEAAGpB,uBAAP;EAAA,OAAmCmB,QAAQ,CAACC,GAAD,CAAzD;AAAA,EADb","names":["createContext","useContextSelector","MenuContext","undefined","menuContextDefaultValue","open","setOpen","checkedValues","onCheckedValueChange","isSubmenu","triggerRef","current","menuPopoverRef","triggerId","openOnContext","openOnHover","hasIcons","hasCheckmarks","inline","persistOnItemClick","MenuProvider","Provider","useMenuContext_unstable","selector","ctx"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-menu\\lib\\src\\packages\\react-components\\react-menu\\src\\contexts\\menuContext.ts"],"sourcesContent":["import * as React from 'react';\nimport { createContext, useContextSelector } from '@fluentui/react-context-selector';\nimport type { ContextSelector, Context } from '@fluentui/react-context-selector';\nimport type { MenuState } from '../components/Menu/index';\n\nexport const MenuContext: Context<MenuContextValue> = createContext<MenuContextValue | undefined>(\n  undefined,\n) as Context<MenuContextValue>;\n\nconst menuContextDefaultValue: MenuContextValue = {\n  open: false,\n  setOpen: () => false,\n  checkedValues: {},\n  onCheckedValueChange: () => null,\n  isSubmenu: false,\n  triggerRef: ({ current: null } as unknown) as React.MutableRefObject<HTMLElement>,\n  menuPopoverRef: ({ current: null } as unknown) as React.MutableRefObject<HTMLElement>,\n  triggerId: '',\n  openOnContext: false,\n  openOnHover: false,\n  hasIcons: false,\n  hasCheckmarks: false,\n  inline: false,\n  persistOnItemClick: false,\n};\n\n/**\n * Context shared between Menu and its children components\n *\n * Extends and drills down MenuList props to simplify API\n */\nexport type MenuContextValue = Pick<\n  MenuState,\n  | 'openOnHover'\n  | 'openOnContext'\n  | 'triggerRef'\n  | 'menuPopoverRef'\n  | 'setOpen'\n  | 'isSubmenu'\n  | 'triggerId'\n  | 'hasIcons'\n  | 'hasCheckmarks'\n  | 'persistOnItemClick'\n  | 'inline'\n  | 'checkedValues'\n  | 'onCheckedValueChange'\n> & {\n  open: boolean;\n  triggerId: string;\n  /**\n   * Default values to be checked on mount\n   * @deprecated this property is not used internally anymore,\n   * the signature remains just to avoid breaking changes\n   */\n  defaultCheckedValues?: Record<string, string[]>;\n};\n\nexport const MenuProvider = MenuContext.Provider;\n\nexport const useMenuContext_unstable = <T>(selector: ContextSelector<MenuContextValue, T>) =>\n  useContextSelector(MenuContext, (ctx = menuContextDefaultValue) => selector(ctx));\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}