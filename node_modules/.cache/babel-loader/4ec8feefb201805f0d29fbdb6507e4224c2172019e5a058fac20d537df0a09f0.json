{"ast":null,"code":"import * as React from 'react';\n/**\n * @internal\n * Utility hook for contexts created by react-context-selector to determine if a parent context exists\n * WARNING: This hook will not work for native React contexts\n *\n * @param context - context created by react-context-selector\n * @returns whether the hook is wrapped by a parent context\n */\n\nexport function useHasParentContext(context) {\n  const contextValue = React.useContext(context);\n  if (contextValue.version) {\n    return contextValue.version.current !== -1;\n  }\n  return false;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA;;;;;;;AAOG;;AACH,OAAM,SAAUC,mBAAV,CAAqCC,OAArC,EAA4D;EAChE,MAAMC,YAAY,GAAGH,KAAK,CAACI,UAAN,CAAkBF,OAAlB,CAArB;EAEA,IAAIC,YAAY,CAACE,OAAjB,EAA0B;IACxB,OAAOF,YAAY,CAACE,OAAb,CAAqBC,OAArB,KAAiC,CAAC,CAAzC;EACD;EAED,OAAO,KAAP;AACD","names":["React","useHasParentContext","context","contextValue","useContext","version","current"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-context-selector\\src\\packages\\react-components\\react-context-selector\\src\\useHasParentContext.ts"],"sourcesContent":["import * as React from 'react';\nimport { Context, ContextValue } from './types';\n\n/**\n * @internal\n * Utility hook for contexts created by react-context-selector to determine if a parent context exists\n * WARNING: This hook will not work for native React contexts\n *\n * @param context - context created by react-context-selector\n * @returns whether the hook is wrapped by a parent context\n */\nexport function useHasParentContext<Value>(context: Context<Value>) {\n  const contextValue = React.useContext((context as unknown) as Context<ContextValue<Value>>);\n\n  if (contextValue.version) {\n    return contextValue.version.current !== -1;\n  }\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}