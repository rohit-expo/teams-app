{"ast":null,"code":"/**\r\n * A function that implements expansion for \"border-top\", it's simplified - check usage examples.\r\n *\r\n * @example\r\n *  borderTop('2px')\r\n *  borderTop('2px', 'solid')\r\n *  borderTop('2px', 'solid', 'red')\r\n *\r\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/border-top\r\n */\nfunction borderTop() {\n  return Object.assign(Object.assign({\n    borderTopWidth: arguments.length <= 0 ? undefined : arguments[0]\n  }, (arguments.length <= 1 ? undefined : arguments[1]) && {\n    borderTopStyle: arguments.length <= 1 ? undefined : arguments[1]\n  }), (arguments.length <= 2 ? undefined : arguments[2]) && {\n    borderTopColor: arguments.length <= 2 ? undefined : arguments[2]\n  });\n}\nexport { borderTop };","map":{"version":3,"mappings":"AASA;;;;;;;;;;SAUgBA,SAAS,GAAoE;EAC3F;IACEC,cAAc;KACVC,sDAAc;IAAEC,cAAc;GAAgC,GAC9DD,sDAAa;IAAEE,cAAc;GAAa;AAElD","names":["borderTop","borderTopWidth","values","borderTopStyle","borderTopColor"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\packages\\core\\src\\shorthands\\borderTop.ts"],"sourcesContent":["import type { GriffelStylesStrictCSSObject } from '../types';\nimport { BorderColorInput, BorderStyleInput, BorderWidthInput } from './types';\n\ntype BorderTopStyle = Pick<GriffelStylesStrictCSSObject, 'borderTopWidth' | 'borderTopStyle' | 'borderTopColor'>;\n\nexport function borderTop(width: BorderWidthInput): BorderTopStyle;\nexport function borderTop(width: BorderWidthInput, style: BorderStyleInput): BorderTopStyle;\nexport function borderTop(width: BorderWidthInput, style: BorderStyleInput, color: BorderColorInput): BorderTopStyle;\n\n/**\n * A function that implements expansion for \"border-top\", it's simplified - check usage examples.\n *\n * @example\n *  borderTop('2px')\n *  borderTop('2px', 'solid')\n *  borderTop('2px', 'solid', 'red')\n *\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/border-top\n */\nexport function borderTop(...values: [BorderWidthInput, BorderStyleInput?, BorderColorInput?]): BorderTopStyle {\n  return {\n    borderTopWidth: values[0],\n    ...(values[1] && ({ borderTopStyle: values[1] } as BorderTopStyle)),\n    ...(values[2] && { borderTopColor: values[2] }),\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}