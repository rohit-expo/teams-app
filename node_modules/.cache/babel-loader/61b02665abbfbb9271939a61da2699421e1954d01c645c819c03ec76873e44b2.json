{"ast":null,"code":"import { useModalAttributes } from '@fluentui/react-tabster';\nimport { applyTriggerPropsToChildren, getTriggerChild, useEventCallback } from '@fluentui/react-utilities';\nimport { useDialogContext_unstable, useDialogSurfaceContext_unstable } from '../../contexts';\nimport { useARIAButtonProps } from '@fluentui/react-aria';\n/**\n * Create the state required to render DialogTrigger.\n * Clones the only child component and adds necessary event handling behaviours to open a popup Dialog\n *\n * @param props - props from this instance of DialogTrigger\n */\n\nexport const useDialogTrigger_unstable = props => {\n  const isInsideSurfaceDialog = useDialogSurfaceContext_unstable();\n  const {\n    children,\n    disableButtonEnhancement = false,\n    action = isInsideSurfaceDialog ? 'close' : 'open'\n  } = props;\n  const child = getTriggerChild(children);\n  const requestOpenChange = useDialogContext_unstable(ctx => ctx.requestOpenChange);\n  const open = useDialogContext_unstable(ctx => ctx.open);\n  const {\n    triggerAttributes\n  } = useModalAttributes();\n  const handleClick = useEventCallback(event => {\n    var _a, _b;\n    (_b = child === null || child === void 0 ? void 0 : (_a = child.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n    if (!event.isDefaultPrevented()) {\n      requestOpenChange({\n        event,\n        type: 'triggerClick',\n        open: action === 'open'\n      });\n    }\n  });\n  const triggerChildProps = {\n    ...(child === null || child === void 0 ? void 0 : child.props),\n    'aria-expanded': open,\n    ref: child === null || child === void 0 ? void 0 : child.ref,\n    onClick: handleClick,\n    ...triggerAttributes\n  };\n  const ariaButtonTriggerChildProps = useARIAButtonProps((child === null || child === void 0 ? void 0 : child.type) === 'button' || (child === null || child === void 0 ? void 0 : child.type) === 'a' ? child.type : 'div', {\n    ...triggerChildProps,\n    type: 'button'\n  });\n  return {\n    children: applyTriggerPropsToChildren(children, disableButtonEnhancement ? triggerChildProps : ariaButtonTriggerChildProps)\n  };\n};","map":{"version":3,"mappings":"AACA,SAASA,kBAAT,QAAmC,yBAAnC;AACA,SAASC,2BAAT,EAAsCC,eAAtC,EAAuDC,gBAAvD,QAA+E,2BAA/E;AAEA,SAASC,yBAAT,EAAoCC,gCAApC,QAA4E,gBAA5E;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AAEA;;;;;AAKG;;AACH,OAAO,MAAMC,yBAAyB,GAAIC,KAAD,IAAkD;EACzF,MAAMC,qBAAqB,GAAGJ,gCAAgC,EAA9D;EAEA,MAAM;IAAEK,QAAF;IAAYC,wBAAwB,GAAG,KAAvC;IAA8CC,MAAM,GAAGH,qBAAqB,GAAG,OAAH,GAAa;EAAzF,IAAoGD,KAA1G;EAEA,MAAMK,KAAK,GAAGX,eAAe,CAACQ,QAAD,CAA7B;EAEA,MAAMI,iBAAiB,GAAGV,yBAAyB,CAACW,GAAG,IAAIA,GAAG,CAACD,iBAAZ,CAAnD;EACA,MAAME,IAAI,GAAGZ,yBAAyB,CAACW,GAAG,IAAIA,GAAG,CAACC,IAAZ,CAAtC;EAEA,MAAM;IAAEC;EAAF,IAAwBjB,kBAAkB,EAAhD;EAEA,MAAMkB,WAAW,GAAGf,gBAAgB,CACjCgB,KAAD,IAAoF;;IAClF,WAAK,SAAL,SAAK,WAAL,GAAK,MAAL,GAAK,MAALN,KAAK,CAAEL,KAAF,EAAQY,OAAb,MAAoB,IAApB,IAAoBC,aAApB,GAAoB,MAApB,GAAoBA,YAAGF,KAAH,CAApB;IACA,IAAI,CAACA,KAAK,CAACG,kBAAN,EAAL,EAAiC;MAC/BR,iBAAiB,CAAC;QAChBK,KADgB;QAEhBI,IAAI,EAAE,cAFU;QAGhBP,IAAI,EAAEJ,MAAM,KAAK;MAHD,CAAD,CAAjB;IAKD;EACF,CAViC,CAApC;EAaA,MAAMY,iBAAiB,GAAG;IACxB,IAAGX,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEL,KAAV,CADwB;IAExB,iBAAiBQ,IAFO;IAGxBS,GAAG,EAAEZ,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEY,GAHY;IAIxBL,OAAO,EAAEF,WAJe;IAKxB,GAAGD;EALqB,CAA1B;EAQA,MAAMS,2BAA2B,GAAGpB,kBAAkB,CACpD,MAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEiB,IAAP,MAAgB,QAAhB,IAA4B,MAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEA,IAAP,MAAgB,GAA5C,GAAkDV,KAAK,CAACU,IAAxD,GAA+D,KADX,EAEpD;IACE,GAAGC,iBADL;IAEED,IAAI,EAAE;EAFR,CAFoD,CAAtD;EAQA,OAAO;IACLb,QAAQ,EAAET,2BAA2B,CACnCS,QADmC,EAEnCC,wBAAwB,GAAGa,iBAAH,GAAuBE,2BAFZ;EADhC,CAAP;AAMD,CA/CM","names":["useModalAttributes","applyTriggerPropsToChildren","getTriggerChild","useEventCallback","useDialogContext_unstable","useDialogSurfaceContext_unstable","useARIAButtonProps","useDialogTrigger_unstable","props","isInsideSurfaceDialog","children","disableButtonEnhancement","action","child","requestOpenChange","ctx","open","triggerAttributes","handleClick","event","onClick","_b","isDefaultPrevented","type","triggerChildProps","ref","ariaButtonTriggerChildProps"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-dialog\\lib\\components\\src\\packages\\react-components\\react-dialog\\src\\components\\DialogTrigger\\useDialogTrigger.ts"],"sourcesContent":["import * as React from 'react';\nimport { useModalAttributes } from '@fluentui/react-tabster';\nimport { applyTriggerPropsToChildren, getTriggerChild, useEventCallback } from '@fluentui/react-utilities';\nimport type { DialogTriggerProps, DialogTriggerState } from './DialogTrigger.types';\nimport { useDialogContext_unstable, useDialogSurfaceContext_unstable } from '../../contexts';\nimport { useARIAButtonProps } from '@fluentui/react-aria';\n\n/**\n * Create the state required to render DialogTrigger.\n * Clones the only child component and adds necessary event handling behaviours to open a popup Dialog\n *\n * @param props - props from this instance of DialogTrigger\n */\nexport const useDialogTrigger_unstable = (props: DialogTriggerProps): DialogTriggerState => {\n  const isInsideSurfaceDialog = useDialogSurfaceContext_unstable();\n\n  const { children, disableButtonEnhancement = false, action = isInsideSurfaceDialog ? 'close' : 'open' } = props;\n\n  const child = getTriggerChild(children);\n\n  const requestOpenChange = useDialogContext_unstable(ctx => ctx.requestOpenChange);\n  const open = useDialogContext_unstable(ctx => ctx.open);\n\n  const { triggerAttributes } = useModalAttributes();\n\n  const handleClick = useEventCallback(\n    (event: React.MouseEvent<HTMLButtonElement & HTMLAnchorElement & HTMLDivElement>) => {\n      child?.props.onClick?.(event);\n      if (!event.isDefaultPrevented()) {\n        requestOpenChange({\n          event,\n          type: 'triggerClick',\n          open: action === 'open',\n        });\n      }\n    },\n  );\n\n  const triggerChildProps = {\n    ...child?.props,\n    'aria-expanded': open,\n    ref: child?.ref,\n    onClick: handleClick,\n    ...triggerAttributes,\n  } as const;\n\n  const ariaButtonTriggerChildProps = useARIAButtonProps(\n    child?.type === 'button' || child?.type === 'a' ? child.type : 'div',\n    {\n      ...triggerChildProps,\n      type: 'button',\n    },\n  );\n\n  return {\n    children: applyTriggerPropsToChildren(\n      children,\n      disableButtonEnhancement ? triggerChildProps : ariaButtonTriggerChildProps,\n    ),\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}