{"ast":null,"code":"import * as React from 'react';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport { Checkmark16Filled } from '@fluentui/react-icons';\nimport { useMenuListContext_unstable } from '../../contexts/menuListContext';\nimport { useMenuItem_unstable } from '../MenuItem/useMenuItem';\n/**\n * Given user props, returns state and render function for a MenuItemRadio.\n */\n\nexport const useMenuItemRadio_unstable = (props, ref) => {\n  const {\n    name,\n    value\n  } = props;\n  const checked = useMenuListContext_unstable(context => {\n    var _a;\n    const checkedItems = ((_a = context.checkedValues) === null || _a === void 0 ? void 0 : _a[name]) || [];\n    return checkedItems.indexOf(value) !== -1;\n  });\n  const selectRadio = useMenuListContext_unstable(context => context.selectRadio);\n  return {\n    ...useMenuItem_unstable({\n      ...props,\n      role: 'menuitemradio',\n      'aria-checked': checked,\n      checkmark: resolveShorthand(props.checkmark, {\n        defaultProps: {\n          children: /*#__PURE__*/React.createElement(Checkmark16Filled, null)\n        },\n        required: true\n      }),\n      onClick: e => {\n        var _a;\n        selectRadio === null || selectRadio === void 0 ? void 0 : selectRadio(e, name, value, checked);\n        (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, e);\n      }\n    }, ref),\n    checked,\n    name,\n    value\n  };\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,2BAAT,QAA4C,gCAA5C;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAIA;;AAEG;;AACH,OAAO,MAAMC,yBAAyB,GAAG,CACvCC,KADuC,EAEvCC,GAFuC,KAGjB;EACtB,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAkBH,KAAxB;EAEA,MAAMI,OAAO,GAAGP,2BAA2B,CAACQ,OAAO,IAAG;;IACpD,MAAMC,YAAY,GAAG,cAAO,CAACC,aAAR,MAAqB,IAArB,IAAqBC,aAArB,GAAqB,MAArB,GAAqBA,GAAGN,IAAH,CAArB,KAAiC,EAAtD;IACA,OAAOI,YAAY,CAACG,OAAb,CAAqBN,KAArB,MAAgC,CAAC,CAAxC;EACD,CAH0C,CAA3C;EAKA,MAAMO,WAAW,GAAGb,2BAA2B,CAACQ,OAAO,IAAIA,OAAO,CAACK,WAApB,CAA/C;EAEA,OAAO;IACL,GAAGZ,oBAAoB,CACrB;MACE,GAAGE,KADL;MAEEW,IAAI,EAAE,eAFR;MAGE,gBAAgBP,OAHlB;MAIEQ,SAAS,EAAEjB,gBAAgB,CAACK,KAAK,CAACY,SAAP,EAAkB;QAC3CC,YAAY,EAAE;UAAEC,QAAQ,eAAEpB,oBAACE,iBAAD,EAAkB,IAAlB;QAAZ,CAD6B;QAE3CmB,QAAQ,EAAE;MAFiC,CAAlB,CAJ7B;MAQEC,OAAO,EAAGC,CAAD,IAA8D;;QACrEP,WAAW,SAAX,eAAW,WAAX,GAAW,MAAX,cAAW,CAAGO,CAAH,EAAMf,IAAN,EAAYC,KAAZ,EAAmBC,OAAnB,CAAX;QACA,WAAK,CAACY,OAAN,MAAa,IAAb,IAAaR,aAAb,GAAa,MAAb,GAAaA,QAAbR,KAAa,EAAGiB,CAAH,CAAb;MACD;IAXH,CADqB,EAcrBhB,GAdqB,CADlB;IAiBLG,OAjBK;IAkBLF,IAlBK;IAmBLC;EAnBK,CAAP;AAqBD,CAlCM","names":["React","resolveShorthand","Checkmark16Filled","useMenuListContext_unstable","useMenuItem_unstable","useMenuItemRadio_unstable","props","ref","name","value","checked","context","checkedItems","checkedValues","_a","indexOf","selectRadio","role","checkmark","defaultProps","children","required","onClick","e"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-menu\\lib\\components\\src\\packages\\react-components\\react-menu\\src\\components\\MenuItemRadio\\useMenuItemRadio.tsx"],"sourcesContent":["import * as React from 'react';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport { Checkmark16Filled } from '@fluentui/react-icons';\nimport { useMenuListContext_unstable } from '../../contexts/menuListContext';\nimport { useMenuItem_unstable } from '../MenuItem/useMenuItem';\nimport type { MenuItemRadioProps, MenuItemRadioState } from './MenuItemRadio.types';\nimport type { ARIAButtonElement, ARIAButtonElementIntersection } from '@fluentui/react-aria';\n\n/**\n * Given user props, returns state and render function for a MenuItemRadio.\n */\nexport const useMenuItemRadio_unstable = (\n  props: MenuItemRadioProps,\n  ref: React.Ref<ARIAButtonElement<'div'>>,\n): MenuItemRadioState => {\n  const { name, value } = props;\n\n  const checked = useMenuListContext_unstable(context => {\n    const checkedItems = context.checkedValues?.[name] || [];\n    return checkedItems.indexOf(value) !== -1;\n  });\n\n  const selectRadio = useMenuListContext_unstable(context => context.selectRadio);\n\n  return {\n    ...useMenuItem_unstable(\n      {\n        ...props,\n        role: 'menuitemradio',\n        'aria-checked': checked,\n        checkmark: resolveShorthand(props.checkmark, {\n          defaultProps: { children: <Checkmark16Filled /> },\n          required: true,\n        }),\n        onClick: (e: React.MouseEvent<ARIAButtonElementIntersection<'div'>>) => {\n          selectRadio?.(e, name, value, checked);\n          props.onClick?.(e);\n        },\n      },\n      ref,\n    ),\n    checked,\n    name,\n    value,\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}