{"ast":null,"code":"// Look up table for shorthand to avoid parsing strings\nconst shorthandLookup = {\n  above: {\n    position: 'above',\n    align: 'center'\n  },\n  'above-start': {\n    position: 'above',\n    align: 'start'\n  },\n  'above-end': {\n    position: 'above',\n    align: 'end'\n  },\n  below: {\n    position: 'below',\n    align: 'center'\n  },\n  'below-start': {\n    position: 'below',\n    align: 'start'\n  },\n  'below-end': {\n    position: 'below',\n    align: 'end'\n  },\n  before: {\n    position: 'before',\n    align: 'center'\n  },\n  'before-top': {\n    position: 'before',\n    align: 'top'\n  },\n  'before-bottom': {\n    position: 'before',\n    align: 'bottom'\n  },\n  after: {\n    position: 'after',\n    align: 'center'\n  },\n  'after-top': {\n    position: 'after',\n    align: 'top'\n  },\n  'after-bottom': {\n    position: 'after',\n    align: 'bottom'\n  }\n};\nexport function resolvePositioningShorthand(shorthand) {\n  if (shorthand === undefined || shorthand === null) {\n    return {};\n  }\n  if (typeof shorthand === 'string') {\n    return shorthandLookup[shorthand];\n  }\n  return shorthand;\n}","map":{"version":3,"mappings":"AAEA;AACA,MAAMA,eAAe,GAAoF;EACvGC,KAAK,EAAE;IAAEC,QAAQ,EAAE,OAAZ;IAAqBC,KAAK,EAAE;EAA5B,CADgG;EAEvG,eAAe;IAAED,QAAQ,EAAE,OAAZ;IAAqBC,KAAK,EAAE;EAA5B,CAFwF;EAGvG,aAAa;IAAED,QAAQ,EAAE,OAAZ;IAAqBC,KAAK,EAAE;EAA5B,CAH0F;EAIvGC,KAAK,EAAE;IAAEF,QAAQ,EAAE,OAAZ;IAAqBC,KAAK,EAAE;EAA5B,CAJgG;EAKvG,eAAe;IAAED,QAAQ,EAAE,OAAZ;IAAqBC,KAAK,EAAE;EAA5B,CALwF;EAMvG,aAAa;IAAED,QAAQ,EAAE,OAAZ;IAAqBC,KAAK,EAAE;EAA5B,CAN0F;EAOvGE,MAAM,EAAE;IAAEH,QAAQ,EAAE,QAAZ;IAAsBC,KAAK,EAAE;EAA7B,CAP+F;EAQvG,cAAc;IAAED,QAAQ,EAAE,QAAZ;IAAsBC,KAAK,EAAE;EAA7B,CARyF;EASvG,iBAAiB;IAAED,QAAQ,EAAE,QAAZ;IAAsBC,KAAK,EAAE;EAA7B,CATsF;EAUvGG,KAAK,EAAE;IAAEJ,QAAQ,EAAE,OAAZ;IAAqBC,KAAK,EAAE;EAA5B,CAVgG;EAWvG,aAAa;IAAED,QAAQ,EAAE,OAAZ;IAAqBC,KAAK,EAAE;EAA5B,CAX0F;EAYvG,gBAAgB;IAAED,QAAQ,EAAE,OAAZ;IAAqBC,KAAK,EAAE;EAA5B;AAZuF,CAAzG;AAeA,OAAM,SAAUI,2BAAV,CACJC,SADI,EAC8C;EAElD,IAAIA,SAAS,KAAKC,SAAd,IAA2BD,SAAS,KAAK,IAA7C,EAAmD;IACjD,OAAO,EAAP;EACD;EAED,IAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;IACjC,OAAOR,eAAe,CAACQ,SAAD,CAAtB;EACD;EAED,OAAOA,SAAP;AACD","names":["shorthandLookup","above","position","align","below","before","after","resolvePositioningShorthand","shorthand","undefined"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-positioning\\lib\\src\\packages\\react-components\\react-positioning\\src\\utils\\resolvePositioningShorthand.ts"],"sourcesContent":["import type { PositioningShorthand, PositioningShorthandValue, PositioningProps } from '../types';\n\n// Look up table for shorthand to avoid parsing strings\nconst shorthandLookup: Record<PositioningShorthandValue, Pick<PositioningProps, 'position' | 'align'>> = {\n  above: { position: 'above', align: 'center' },\n  'above-start': { position: 'above', align: 'start' },\n  'above-end': { position: 'above', align: 'end' },\n  below: { position: 'below', align: 'center' },\n  'below-start': { position: 'below', align: 'start' },\n  'below-end': { position: 'below', align: 'end' },\n  before: { position: 'before', align: 'center' },\n  'before-top': { position: 'before', align: 'top' },\n  'before-bottom': { position: 'before', align: 'bottom' },\n  after: { position: 'after', align: 'center' },\n  'after-top': { position: 'after', align: 'top' },\n  'after-bottom': { position: 'after', align: 'bottom' },\n};\n\nexport function resolvePositioningShorthand(\n  shorthand: PositioningShorthand | undefined | null,\n): Readonly<PositioningProps> {\n  if (shorthand === undefined || shorthand === null) {\n    return {};\n  }\n\n  if (typeof shorthand === 'string') {\n    return shorthandLookup[shorthand];\n  }\n\n  return shorthand as Readonly<PositioningProps>;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}