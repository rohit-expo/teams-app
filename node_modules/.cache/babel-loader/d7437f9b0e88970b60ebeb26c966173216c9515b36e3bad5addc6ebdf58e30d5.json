{"ast":null,"code":"import * as React from 'react';\nimport { useEventCallback, resolveShorthand, useMergedRefs, getNativeElementProps } from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { useCharacterSearch } from './useCharacterSearch';\nimport { useMenuTriggerContext_unstable } from '../../contexts/menuTriggerContext';\nimport { ChevronRightFilled, ChevronRightRegular, ChevronLeftFilled, ChevronLeftRegular, bundleIcon } from '@fluentui/react-icons';\nimport { useMenuListContext_unstable } from '../../contexts/menuListContext';\nimport { useMenuContext_unstable } from '../../contexts/menuContext';\nimport { useARIAButtonShorthand } from '@fluentui/react-aria';\nimport { Enter, Space } from '@fluentui/keyboard-keys';\nconst ChevronRightIcon = /*#__PURE__*/bundleIcon(ChevronRightFilled, ChevronRightRegular);\nconst ChevronLeftIcon = /*#__PURE__*/bundleIcon(ChevronLeftFilled, ChevronLeftRegular);\n/**\n * Returns the props and state required to render the component\n */\n\nexport const useMenuItem_unstable = (props, ref) => {\n  const isSubmenuTrigger = useMenuTriggerContext_unstable();\n  const persistOnClickContext = useMenuContext_unstable(context => context.persistOnItemClick);\n  const {\n    as = 'div',\n    disabled,\n    disabledFocusable,\n    hasSubmenu = isSubmenuTrigger,\n    persistOnClick = persistOnClickContext\n  } = props;\n  const hasIcons = useMenuListContext_unstable(context => context.hasIcons);\n  const hasCheckmarks = useMenuListContext_unstable(context => context.hasCheckmarks);\n  const setOpen = useMenuContext_unstable(context => context.setOpen);\n  const {\n    dir\n  } = useFluent();\n  const innerRef = React.useRef(null);\n  const dismissedWithKeyboardRef = React.useRef(false);\n  const isDisabled = Boolean(disabled || disabledFocusable);\n  const state = {\n    hasSubmenu,\n    disabled: isDisabled,\n    persistOnClick,\n    components: {\n      root: 'div',\n      icon: 'span',\n      checkmark: 'span',\n      submenuIndicator: 'span',\n      content: 'span',\n      secondaryContent: 'span'\n    },\n    isNativeButton: as === 'button',\n    root: getNativeElementProps(as, useARIAButtonShorthand({\n      disabled: false,\n      disabledFocusable: isDisabled,\n      as\n    }, {\n      required: true,\n      defaultProps: {\n        role: 'menuitem',\n        ...props,\n        ref: useMergedRefs(ref, innerRef),\n        onKeyDown: useEventCallback(event => {\n          var _a;\n          (_a = props.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(props, event);\n          if (!event.isDefaultPrevented() && (event.key === Space || event.key === Enter)) {\n            dismissedWithKeyboardRef.current = true;\n          }\n        }),\n        onMouseEnter: useEventCallback(event => {\n          var _a, _b;\n          (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n          (_b = props.onMouseEnter) === null || _b === void 0 ? void 0 : _b.call(props, event);\n        }),\n        onClick: useEventCallback(event => {\n          var _a;\n          if (!hasSubmenu && !persistOnClick) {\n            setOpen(event, {\n              open: false,\n              keyboard: dismissedWithKeyboardRef.current,\n              bubble: true,\n              type: 'menuItemClick',\n              event\n            });\n            dismissedWithKeyboardRef.current = false;\n          }\n          (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, event);\n        })\n      }\n    })),\n    icon: resolveShorthand(props.icon, {\n      required: hasIcons\n    }),\n    checkmark: resolveShorthand(props.checkmark, {\n      required: hasCheckmarks\n    }),\n    submenuIndicator: resolveShorthand(props.submenuIndicator, {\n      required: hasSubmenu,\n      defaultProps: {\n        children: dir === 'ltr' ? /*#__PURE__*/React.createElement(ChevronRightIcon, null) : /*#__PURE__*/React.createElement(ChevronLeftIcon, null)\n      }\n    }),\n    content: resolveShorthand(props.content, {\n      required: !!props.children,\n      defaultProps: {\n        children: props.children\n      }\n    }),\n    secondaryContent: resolveShorthand(props.secondaryContent)\n  };\n  useCharacterSearch(state, innerRef);\n  return state;\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,aAA7C,EAA4DC,qBAA5D,QAAyF,2BAAzF;AACA,SAASC,kBAAkB,IAAIC,SAA/B,QAAgD,iCAAhD;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,8BAAT,QAA+C,mCAA/C;AACA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,iBAHF,EAIEC,kBAJF,EAKEC,UALF,QAMO,uBANP;AAOA,SAASC,2BAAT,QAA4C,gCAA5C;AACA,SAASC,uBAAT,QAAwC,4BAAxC;AAGA,SAASC,sBAAT,QAAuC,sBAAvC;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,yBAA7B;AAEA,MAAMC,gBAAgB,gBAAGN,UAAU,CAACJ,kBAAD,EAAqBC,mBAArB,CAAnC;AACA,MAAMU,eAAe,gBAAGP,UAAU,CAACF,iBAAD,EAAoBC,kBAApB,CAAlC;AAEA;;AAEG;;AACH,OAAO,MAAMS,oBAAoB,GAAG,CAACC,KAAD,EAAuBC,GAAvB,KAAkF;EACpH,MAAMC,gBAAgB,GAAGhB,8BAA8B,EAAvD;EACA,MAAMiB,qBAAqB,GAAGV,uBAAuB,CAACW,OAAO,IAAIA,OAAO,CAACC,kBAApB,CAArD;EACA,MAAM;IACJC,EAAE,GAAG,KADD;IAEJC,QAFI;IAGJC,iBAHI;IAIJC,UAAU,GAAGP,gBAJT;IAKJQ,cAAc,GAAGP;EALb,IAMFH,KANJ;EAOA,MAAMW,QAAQ,GAAGnB,2BAA2B,CAACY,OAAO,IAAIA,OAAO,CAACO,QAApB,CAA5C;EACA,MAAMC,aAAa,GAAGpB,2BAA2B,CAACY,OAAO,IAAIA,OAAO,CAACQ,aAApB,CAAjD;EACA,MAAMC,OAAO,GAAGpB,uBAAuB,CAACW,OAAO,IAAIA,OAAO,CAACS,OAApB,CAAvC;EAEA,MAAM;IAAEC;EAAF,IAAU9B,SAAS,EAAzB;EACA,MAAM+B,QAAQ,GAAGrC,KAAK,CAACsC,MAAN,CAAmD,IAAnD,CAAjB;EACA,MAAMC,wBAAwB,GAAGvC,KAAK,CAACsC,MAAN,CAAa,KAAb,CAAjC;EAEA,MAAME,UAAU,GAAGC,OAAO,CAACZ,QAAQ,IAAIC,iBAAb,CAA1B;EAEA,MAAMY,KAAK,GAAkB;IAC3BX,UAD2B;IAE3BF,QAAQ,EAAEW,UAFiB;IAG3BR,cAH2B;IAI3BW,UAAU,EAAE;MACVC,IAAI,EAAE,KADI;MAEVC,IAAI,EAAE,MAFI;MAGVC,SAAS,EAAE,MAHD;MAIVC,gBAAgB,EAAE,MAJR;MAKVC,OAAO,EAAE,MALC;MAMVC,gBAAgB,EAAE;IANR,CAJe;IAY3BC,cAAc,EAAEtB,EAAE,KAAK,QAZI;IAa3BgB,IAAI,EAAExC,qBAAqB,CACzBwB,EADyB,EAEzBZ,sBAAsB,CACpB;MAAEa,QAAQ,EAAE,KAAZ;MAAmBC,iBAAiB,EAAEU,UAAtC;MAAkDZ;IAAlD,CADoB,EAEpB;MACEuB,QAAQ,EAAE,IADZ;MAEEC,YAAY,EAAE;QACZC,IAAI,EAAE,UADM;QAEZ,GAAG/B,KAFS;QAGZC,GAAG,EAAEpB,aAAa,CAACoB,GAAD,EAAMc,QAAN,CAHN;QAIZiB,SAAS,EAAErD,gBAAgB,CAACsD,KAAK,IAAG;;UAClC,WAAK,CAACD,SAAN,MAAe,IAAf,IAAeE,aAAf,GAAe,MAAf,GAAeA,QAAflC,KAAe,EAAGiC,KAAH,CAAf;UACA,IAAI,CAACA,KAAK,CAACE,kBAAN,EAAD,KAAgCF,KAAK,CAACG,GAAN,KAAcxC,KAAd,IAAuBqC,KAAK,CAACG,GAAN,KAAczC,KAArE,CAAJ,EAAiF;YAC/EsB,wBAAwB,CAACoB,OAAzB,GAAmC,IAAnC;UACD;QACF,CAL0B,CAJf;QAUZC,YAAY,EAAE3D,gBAAgB,CAACsD,KAAK,IAAG;;UACrC,cAAQ,CAACI,OAAT,MAAgB,IAAhB,IAAgBH,aAAhB,GAAgB,MAAhB,GAAgBA,GAAEK,KAAF,EAAhB;UAEA,WAAK,CAACD,YAAN,MAAkB,IAAlB,IAAkBE,aAAlB,GAAkB,MAAlB,GAAkBA,QAAlBxC,KAAkB,EAAGiC,KAAH,CAAlB;QACD,CAJ6B,CAVlB;QAeZQ,OAAO,EAAE9D,gBAAgB,CAACsD,KAAK,IAAG;;UAChC,IAAI,CAACxB,UAAD,IAAe,CAACC,cAApB,EAAoC;YAClCG,OAAO,CAACoB,KAAD,EAAQ;cACbS,IAAI,EAAE,KADO;cAEbC,QAAQ,EAAE1B,wBAAwB,CAACoB,OAFtB;cAGbO,MAAM,EAAE,IAHK;cAIbC,IAAI,EAAE,eAJO;cAKbZ;YALa,CAAR,CAAP;YAOAhB,wBAAwB,CAACoB,OAAzB,GAAmC,KAAnC;UACD;UAED,WAAK,CAACI,OAAN,MAAa,IAAb,IAAaP,aAAb,GAAa,MAAb,GAAaA,QAAblC,KAAa,EAAGiC,KAAH,CAAb;QACD,CAbwB;MAfb;IAFhB,CAFoB,CAFG,CAbA;IAoD3BV,IAAI,EAAE3C,gBAAgB,CAACoB,KAAK,CAACuB,IAAP,EAAa;MAAEM,QAAQ,EAAElB;IAAZ,CAAb,CApDK;IAqD3Ba,SAAS,EAAE5C,gBAAgB,CAACoB,KAAK,CAACwB,SAAP,EAAkB;MAAEK,QAAQ,EAAEjB;IAAZ,CAAlB,CArDA;IAsD3Ba,gBAAgB,EAAE7C,gBAAgB,CAACoB,KAAK,CAACyB,gBAAP,EAAyB;MACzDI,QAAQ,EAAEpB,UAD+C;MAEzDqB,YAAY,EAAE;QACZgB,QAAQ,EAAEhC,GAAG,KAAK,KAAR,gBAAgBpC,oBAACmB,gBAAD,EAAiB,IAAjB,CAAhB,gBAAuCnB,oBAACoB,eAAD,EAAgB,IAAhB;MADrC;IAF2C,CAAzB,CAtDP;IA4D3B4B,OAAO,EAAE9C,gBAAgB,CAACoB,KAAK,CAAC0B,OAAP,EAAgB;MACvCG,QAAQ,EAAE,CAAC,CAAC7B,KAAK,CAAC8C,QADqB;MAEvChB,YAAY,EAAE;QAAEgB,QAAQ,EAAE9C,KAAK,CAAC8C;MAAlB;IAFyB,CAAhB,CA5DE;IAgE3BnB,gBAAgB,EAAE/C,gBAAgB,CAACoB,KAAK,CAAC2B,gBAAP;EAhEP,CAA7B;EAkEA1C,kBAAkB,CAACmC,KAAD,EAAQL,QAAR,CAAlB;EACA,OAAOK,KAAP;AACD,CAxFM","names":["React","useEventCallback","resolveShorthand","useMergedRefs","getNativeElementProps","useFluent_unstable","useFluent","useCharacterSearch","useMenuTriggerContext_unstable","ChevronRightFilled","ChevronRightRegular","ChevronLeftFilled","ChevronLeftRegular","bundleIcon","useMenuListContext_unstable","useMenuContext_unstable","useARIAButtonShorthand","Enter","Space","ChevronRightIcon","ChevronLeftIcon","useMenuItem_unstable","props","ref","isSubmenuTrigger","persistOnClickContext","context","persistOnItemClick","as","disabled","disabledFocusable","hasSubmenu","persistOnClick","hasIcons","hasCheckmarks","setOpen","dir","innerRef","useRef","dismissedWithKeyboardRef","isDisabled","Boolean","state","components","root","icon","checkmark","submenuIndicator","content","secondaryContent","isNativeButton","required","defaultProps","role","onKeyDown","event","_a","isDefaultPrevented","key","current","onMouseEnter","focus","_b","onClick","open","keyboard","bubble","type","children"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\react-menu\\lib\\components\\src\\packages\\react-components\\react-menu\\src\\components\\MenuItem\\useMenuItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback, resolveShorthand, useMergedRefs, getNativeElementProps } from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { useCharacterSearch } from './useCharacterSearch';\nimport { useMenuTriggerContext_unstable } from '../../contexts/menuTriggerContext';\nimport {\n  ChevronRightFilled,\n  ChevronRightRegular,\n  ChevronLeftFilled,\n  ChevronLeftRegular,\n  bundleIcon,\n} from '@fluentui/react-icons';\nimport { useMenuListContext_unstable } from '../../contexts/menuListContext';\nimport { useMenuContext_unstable } from '../../contexts/menuContext';\nimport type { MenuItemProps, MenuItemState } from './MenuItem.types';\nimport type { ARIAButtonElement, ARIAButtonElementIntersection, ARIAButtonSlotProps } from '@fluentui/react-aria';\nimport { useARIAButtonShorthand } from '@fluentui/react-aria';\nimport { Enter, Space } from '@fluentui/keyboard-keys';\n\nconst ChevronRightIcon = bundleIcon(ChevronRightFilled, ChevronRightRegular);\nconst ChevronLeftIcon = bundleIcon(ChevronLeftFilled, ChevronLeftRegular);\n\n/**\n * Returns the props and state required to render the component\n */\nexport const useMenuItem_unstable = (props: MenuItemProps, ref: React.Ref<ARIAButtonElement<'div'>>): MenuItemState => {\n  const isSubmenuTrigger = useMenuTriggerContext_unstable();\n  const persistOnClickContext = useMenuContext_unstable(context => context.persistOnItemClick);\n  const {\n    as = 'div',\n    disabled,\n    disabledFocusable,\n    hasSubmenu = isSubmenuTrigger,\n    persistOnClick = persistOnClickContext,\n  } = props;\n  const hasIcons = useMenuListContext_unstable(context => context.hasIcons);\n  const hasCheckmarks = useMenuListContext_unstable(context => context.hasCheckmarks);\n  const setOpen = useMenuContext_unstable(context => context.setOpen);\n\n  const { dir } = useFluent();\n  const innerRef = React.useRef<ARIAButtonElementIntersection<'div'>>(null);\n  const dismissedWithKeyboardRef = React.useRef(false);\n\n  const isDisabled = Boolean(disabled || disabledFocusable);\n\n  const state: MenuItemState = {\n    hasSubmenu,\n    disabled: isDisabled,\n    persistOnClick,\n    components: {\n      root: 'div',\n      icon: 'span',\n      checkmark: 'span',\n      submenuIndicator: 'span',\n      content: 'span',\n      secondaryContent: 'span',\n    },\n    isNativeButton: as === 'button',\n    root: getNativeElementProps(\n      as,\n      useARIAButtonShorthand<ARIAButtonSlotProps<'div'>>(\n        { disabled: false, disabledFocusable: isDisabled, as },\n        {\n          required: true,\n          defaultProps: {\n            role: 'menuitem',\n            ...props,\n            ref: useMergedRefs(ref, innerRef) as React.Ref<ARIAButtonElementIntersection<'div'>>,\n            onKeyDown: useEventCallback(event => {\n              props.onKeyDown?.(event);\n              if (!event.isDefaultPrevented() && (event.key === Space || event.key === Enter)) {\n                dismissedWithKeyboardRef.current = true;\n              }\n            }),\n            onMouseEnter: useEventCallback(event => {\n              innerRef.current?.focus();\n\n              props.onMouseEnter?.(event);\n            }),\n            onClick: useEventCallback(event => {\n              if (!hasSubmenu && !persistOnClick) {\n                setOpen(event, {\n                  open: false,\n                  keyboard: dismissedWithKeyboardRef.current,\n                  bubble: true,\n                  type: 'menuItemClick',\n                  event,\n                });\n                dismissedWithKeyboardRef.current = false;\n              }\n\n              props.onClick?.(event);\n            }),\n          },\n        },\n      ),\n    ),\n    icon: resolveShorthand(props.icon, { required: hasIcons }),\n    checkmark: resolveShorthand(props.checkmark, { required: hasCheckmarks }),\n    submenuIndicator: resolveShorthand(props.submenuIndicator, {\n      required: hasSubmenu,\n      defaultProps: {\n        children: dir === 'ltr' ? <ChevronRightIcon /> : <ChevronLeftIcon />,\n      },\n    }),\n    content: resolveShorthand(props.content, {\n      required: !!props.children,\n      defaultProps: { children: props.children },\n    }),\n    secondaryContent: resolveShorthand(props.secondaryContent),\n  };\n  useCharacterSearch(state, innerRef);\n  return state;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}