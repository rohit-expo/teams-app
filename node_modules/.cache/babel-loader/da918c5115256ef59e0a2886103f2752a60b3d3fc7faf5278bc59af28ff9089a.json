{"ast":null,"code":"var _jsxFileName = \"D:\\\\teams-app\\\\qlik2\\\\Microsoft-Teams-Samples\\\\samples\\\\tab-personal-sso-quickstart\\\\js\\\\src\\\\components\\\\ClosePopup.js\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport React from 'react';\nimport * as microsoftTeams from \"@microsoft/teams-js\";\nimport * as msal from \"@azure/msal-browser\";\n\n/**\r\n * This component is used to redirect the user to the Azure authorization endpoint from a popup.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ClosePopup extends React.Component {\n  componentDidMount() {\n    microsoftTeams.app.initialize().then(() => {\n      microsoftTeams.app.getContext().then(async context => {\n        const msalConfig = {\n          auth: {\n            clientId: process.env.REACT_APP_AZURE_APP_REGISTRATION_ID,\n            authority: `https://login.microsoftonline.com/${context.tid}`,\n            navigateToLoginRequestUrl: false\n          },\n          cache: {\n            cacheLocation: \"sessionStorage\"\n          }\n        };\n        const msalInstance = new msal.PublicClientApplication(msalConfig);\n        msalInstance.handleRedirectPromise().then(tokenResponse => {\n          if (tokenResponse !== null) {\n            microsoftTeams.authentication.notifySuccess(\"Authentication succeeded\");\n          } else {\n            microsoftTeams.authentication.notifyFailure(\"Get empty response.\");\n          }\n        }).catch(error => {\n          microsoftTeams.authentication.notifyFailure(JSON.stringify(error));\n        });\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Consent flow complete.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default ClosePopup;","map":{"version":3,"names":["React","microsoftTeams","msal","ClosePopup","Component","componentDidMount","app","initialize","then","getContext","context","msalConfig","auth","clientId","process","env","REACT_APP_AZURE_APP_REGISTRATION_ID","authority","tid","navigateToLoginRequestUrl","cache","cacheLocation","msalInstance","PublicClientApplication","handleRedirectPromise","tokenResponse","authentication","notifySuccess","notifyFailure","catch","error","JSON","stringify","render"],"sources":["D:/teams-app/qlik2/Microsoft-Teams-Samples/samples/tab-personal-sso-quickstart/js/src/components/ClosePopup.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport React from 'react';\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport * as msal from \"@azure/msal-browser\";\r\n\r\n/**\r\n * This component is used to redirect the user to the Azure authorization endpoint from a popup.\r\n */\r\nclass ClosePopup extends React.Component {\r\n\r\n    componentDidMount() {\r\n        microsoftTeams.app.initialize().then(() => {\r\n            microsoftTeams.app.getContext().then(async (context) => {\r\n                \r\n                const msalConfig = {\r\n                    auth: {\r\n                        clientId: process.env.REACT_APP_AZURE_APP_REGISTRATION_ID,\r\n                        authority: `https://login.microsoftonline.com/${context.tid}`,\r\n                        navigateToLoginRequestUrl: false\r\n                    },\r\n                    cache: {\r\n                        cacheLocation: \"sessionStorage\",\r\n                    },\r\n                }\r\n\t\t\t\t\r\n                const msalInstance = new msal.PublicClientApplication(msalConfig);\r\n\t\t\t\t\r\n                msalInstance.handleRedirectPromise()\r\n                    .then((tokenResponse) => {\r\n                        if (tokenResponse !== null) {\r\n                            microsoftTeams.authentication.notifySuccess(\"Authentication succeeded\");\r\n                        } else {\r\n                            microsoftTeams.authentication.notifyFailure(\"Get empty response.\");\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        microsoftTeams.authentication.notifyFailure(JSON.stringify(error));\r\n                    });\r\n            });\r\n        });\r\n    }     \r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <h1>Consent flow complete.</h1>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default ClosePopup;"],"mappings":";AAAA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,cAAc,MAAM,qBAAqB;AACrD,OAAO,KAAKC,IAAI,MAAM,qBAAqB;;AAE3C;AACA;AACA;AAFA;AAGA,MAAMC,UAAU,SAASH,KAAK,CAACI,SAAS,CAAC;EAErCC,iBAAiB,GAAG;IAChBJ,cAAc,CAACK,GAAG,CAACC,UAAU,EAAE,CAACC,IAAI,CAAC,MAAM;MACvCP,cAAc,CAACK,GAAG,CAACG,UAAU,EAAE,CAACD,IAAI,CAAC,MAAOE,OAAO,IAAK;QAEpD,MAAMC,UAAU,GAAG;UACfC,IAAI,EAAE;YACFC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,mCAAmC;YACzDC,SAAS,EAAG,qCAAoCP,OAAO,CAACQ,GAAI,EAAC;YAC7DC,yBAAyB,EAAE;UAC/B,CAAC;UACDC,KAAK,EAAE;YACHC,aAAa,EAAE;UACnB;QACJ,CAAC;QAED,MAAMC,YAAY,GAAG,IAAIpB,IAAI,CAACqB,uBAAuB,CAACZ,UAAU,CAAC;QAEjEW,YAAY,CAACE,qBAAqB,EAAE,CAC/BhB,IAAI,CAAEiB,aAAa,IAAK;UACrB,IAAIA,aAAa,KAAK,IAAI,EAAE;YACxBxB,cAAc,CAACyB,cAAc,CAACC,aAAa,CAAC,0BAA0B,CAAC;UAC3E,CAAC,MAAM;YACH1B,cAAc,CAACyB,cAAc,CAACE,aAAa,CAAC,qBAAqB,CAAC;UACtE;QACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;UACd7B,cAAc,CAACyB,cAAc,CAACE,aAAa,CAACG,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC,CAAC;QACtE,CAAC,CAAC;MACV,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAEAG,MAAM,GAAG;IACP,oBACE;MAAA,uBACI;QAAA,UAAI;MAAsB;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAC7B;EAEV;AACJ;AAEA,eAAe9B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}