{"ast":null,"code":"import { hcHighlight, hcCanvas, hcCanvasText } from '../global/colors';\nimport { statusSharedColorNames, personaSharedColorNames } from '../sharedColorNames';\nconst statusColorPaletteTokens = /*#__PURE__*/statusSharedColorNames.reduce((acc, sharedColor) => {\n  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n  const sharedColorTokens = {\n    [`colorPalette${color}Background1`]: hcCanvas,\n    [`colorPalette${color}Background2`]: hcCanvas,\n    [`colorPalette${color}Background3`]: hcCanvasText,\n    [`colorPalette${color}Foreground1`]: hcCanvasText,\n    [`colorPalette${color}Foreground2`]: hcCanvasText,\n    [`colorPalette${color}Foreground3`]: hcCanvasText,\n    [`colorPalette${color}BorderActive`]: hcHighlight,\n    [`colorPalette${color}Border1`]: hcCanvasText,\n    [`colorPalette${color}Border2`]: hcCanvasText\n  };\n  return Object.assign(acc, sharedColorTokens);\n}, {}); // one-off patches\n\nstatusColorPaletteTokens.colorPaletteRedForegroundInverted = hcCanvasText;\nstatusColorPaletteTokens.colorPaletteGreenForegroundInverted = hcCanvasText;\nstatusColorPaletteTokens.colorPaletteYellowForegroundInverted = hcCanvasText;\nconst personaColorPaletteTokens = /*#__PURE__*/personaSharedColorNames.reduce((acc, sharedColor) => {\n  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n  const sharedColorTokens = {\n    [`colorPalette${color}Background2`]: hcCanvas,\n    [`colorPalette${color}Foreground2`]: hcCanvasText,\n    [`colorPalette${color}BorderActive`]: hcHighlight\n  };\n  return Object.assign(acc, sharedColorTokens);\n}, {});\nexport const colorPaletteTokens = {\n  ...statusColorPaletteTokens,\n  ...personaColorPaletteTokens\n};","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,YAAhC,QAAoD,kBAApD;AACA,SAASC,sBAAT,EAAiCC,uBAAjC,QAAgE,qBAAhE;AAGA,MAAMC,wBAAwB,gBAAGF,sBAAsB,CAACG,MAAvB,CAA8B,CAACC,GAAD,EAAMC,WAAN,KAAqB;EAClF,MAAMC,KAAK,GAAGD,WAAW,CAACE,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,EAAwBC,WAAxB,KAAwCH,WAAW,CAACE,KAAZ,CAAkB,CAAlB,CAAtD;EACA,MAAME,iBAAiB,GAAG;IACxB,CAAC,eAAeH,KAAK,aAArB,GAAqCR,QADb;IAExB,CAAC,eAAeQ,KAAK,aAArB,GAAqCR,QAFb;IAGxB,CAAC,eAAeQ,KAAK,aAArB,GAAqCP,YAHb;IAIxB,CAAC,eAAeO,KAAK,aAArB,GAAqCP,YAJb;IAKxB,CAAC,eAAeO,KAAK,aAArB,GAAqCP,YALb;IAMxB,CAAC,eAAeO,KAAK,aAArB,GAAqCP,YANb;IAOxB,CAAC,eAAeO,KAAK,cAArB,GAAsCT,WAPd;IAQxB,CAAC,eAAeS,KAAK,SAArB,GAAiCP,YART;IASxB,CAAC,eAAeO,KAAK,SAArB,GAAiCP;EATT,CAA1B;EAYA,OAAOW,MAAM,CAACC,MAAP,CAAcP,GAAd,EAAmBK,iBAAnB,CAAP;AACD,CAfgC,EAe9B,EAf8B,CAAjC,C,CAiBA;;AACAP,wBAAwB,CAACU,iCAAzB,GAA6Db,YAA7D;AACAG,wBAAwB,CAACW,mCAAzB,GAA+Dd,YAA/D;AACAG,wBAAwB,CAACY,oCAAzB,GAAgEf,YAAhE;AAEA,MAAMgB,yBAAyB,gBAAGd,uBAAuB,CAACE,MAAxB,CAA+B,CAACC,GAAD,EAAMC,WAAN,KAAqB;EACpF,MAAMC,KAAK,GAAGD,WAAW,CAACE,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,EAAwBC,WAAxB,KAAwCH,WAAW,CAACE,KAAZ,CAAkB,CAAlB,CAAtD;EACA,MAAME,iBAAiB,GAAG;IACxB,CAAC,eAAeH,KAAK,aAArB,GAAqCR,QADb;IAExB,CAAC,eAAeQ,KAAK,aAArB,GAAqCP,YAFb;IAGxB,CAAC,eAAeO,KAAK,cAArB,GAAsCT;EAHd,CAA1B;EAMA,OAAOa,MAAM,CAACC,MAAP,CAAcP,GAAd,EAAmBK,iBAAnB,CAAP;AACD,CATiC,EAS/B,EAT+B,CAAlC;AAWA,OAAO,MAAMO,kBAAkB,GAAuB;EAAE,GAAGd,wBAAL;EAA+B,GAAGa;AAAlC,CAA/C","names":["hcHighlight","hcCanvas","hcCanvasText","statusSharedColorNames","personaSharedColorNames","statusColorPaletteTokens","reduce","acc","sharedColor","color","slice","toUpperCase","sharedColorTokens","Object","assign","colorPaletteRedForegroundInverted","colorPaletteGreenForegroundInverted","colorPaletteYellowForegroundInverted","personaColorPaletteTokens","colorPaletteTokens"],"sources":["D:\\teams-app\\qlik2\\Microsoft-Teams-Samples\\samples\\tab-personal-sso-quickstart\\js\\node_modules\\@fluentui\\tokens\\lib\\src\\packages\\tokens\\src\\alias\\highContrastColorPalette.ts"],"sourcesContent":["import { hcHighlight, hcCanvas, hcCanvasText } from '../global/colors';\nimport { statusSharedColorNames, personaSharedColorNames } from '../sharedColorNames';\nimport { ColorPaletteTokens, PersonaColorPaletteTokens, StatusColorPaletteTokens } from '../types';\n\nconst statusColorPaletteTokens = statusSharedColorNames.reduce((acc, sharedColor) => {\n  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n  const sharedColorTokens = {\n    [`colorPalette${color}Background1`]: hcCanvas,\n    [`colorPalette${color}Background2`]: hcCanvas,\n    [`colorPalette${color}Background3`]: hcCanvasText,\n    [`colorPalette${color}Foreground1`]: hcCanvasText,\n    [`colorPalette${color}Foreground2`]: hcCanvasText,\n    [`colorPalette${color}Foreground3`]: hcCanvasText,\n    [`colorPalette${color}BorderActive`]: hcHighlight,\n    [`colorPalette${color}Border1`]: hcCanvasText,\n    [`colorPalette${color}Border2`]: hcCanvasText,\n  };\n\n  return Object.assign(acc, sharedColorTokens);\n}, {} as StatusColorPaletteTokens);\n\n// one-off patches\nstatusColorPaletteTokens.colorPaletteRedForegroundInverted = hcCanvasText;\nstatusColorPaletteTokens.colorPaletteGreenForegroundInverted = hcCanvasText;\nstatusColorPaletteTokens.colorPaletteYellowForegroundInverted = hcCanvasText;\n\nconst personaColorPaletteTokens = personaSharedColorNames.reduce((acc, sharedColor) => {\n  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n  const sharedColorTokens = {\n    [`colorPalette${color}Background2`]: hcCanvas,\n    [`colorPalette${color}Foreground2`]: hcCanvasText,\n    [`colorPalette${color}BorderActive`]: hcHighlight,\n  };\n\n  return Object.assign(acc, sharedColorTokens);\n}, {} as PersonaColorPaletteTokens);\n\nexport const colorPaletteTokens: ColorPaletteTokens = { ...statusColorPaletteTokens, ...personaColorPaletteTokens };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}